{"xref": {
  "stories": [
    {
      "story": {
        "path": "stories/site/Blogs.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Blogs Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Blogs page",
              "Then check general page elements for page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "Blogs.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Blogs Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Blogs page",
              "Then check general page elements for page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/Blogs.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21,
                  "start": 1491241453609,
                  "end": 1491241453630
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Blogs page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Blogs page",
                  "durationInMillis": 5143,
                  "start": 1491241453633,
                  "end": 1491241458776
                },
                {
                  "step": "Then check general page elements for page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 40319,
                  "start": 1491241458780,
                  "end": 1491241499099
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 55,
                  "start": 1491241499101,
                  "end": 1491241499156
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241499156,
                  "end": 1491241499157
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/blogs/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Blogs page",
                "Then check general page elements for page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 45766,
        "start": 1491241453548,
        "end": 1491241499314
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/Events.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Events Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/events/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Events page",
              "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
            ]
          }
        ],
        "name": "Events.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Events Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/events/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Events page",
              "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/Events.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 7,
                  "start": 1491241499324,
                  "end": 1491241499331
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Events page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Events page",
                  "durationInMillis": 3490,
                  "start": 1491241499331,
                  "end": 1491241502821
                },
                {
                  "step": "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Events Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10290,
                  "start": 1491241502824,
                  "end": 1491241513114
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 35,
                  "start": 1491241513115,
                  "end": 1491241513150
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491241513150,
                  "end": 1491241513150
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/events/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Events page",
                "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 13895,
        "start": 1491241499322,
        "end": 1491241513217
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/Home.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Home Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/Home Page/) Verification for general page elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          {
            "title": "(/Home Page/) Verification for twitter's list of events",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check that Twitter's list of events is shown"
            ]
          },
          {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        ],
        "name": "Home.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Home Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/Home Page/) Verification for general page elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/Home.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241513224,
                  "end": 1491241513225
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 3080,
                  "start": 1491241513225,
                  "end": 1491241516305
                },
                {
                  "step": "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Home Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 20345,
                  "start": 1491241516306,
                  "end": 1491241536651
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 46,
                  "start": 1491241536652,
                  "end": 1491241536698
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241536698,
                  "end": 1491241536699
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/Home Page/) Verification for general page elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/Home Page/) Verification for twitter's list of events",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check that Twitter's list of events is shown"
            ]
          },
          "storyPath": "stories/site/Home.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241536773,
                  "end": 1491241536774
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 3420,
                  "start": 1491241536774,
                  "end": 1491241540194
                },
                {
                  "step": "Then check that Twitter's list of events is shown",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check that Twitter's list of events is shown",
                  "durationInMillis": 213,
                  "start": 1491241540195,
                  "end": 1491241540408
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25,
                  "start": 1491241540409,
                  "end": 1491241540434
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491241540434,
                  "end": 1491241540434
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/Home Page/) Verification for twitter's list of events",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "Then check that Twitter's list of events is shown"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          },
          "storyPath": "stories/site/Home.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Your API Key"
                ],
                [
                  "pageURL",
                  "https://developer-acct.ticketmaster.com/user/login"
                ],
                [
                  "elementLocation",
                  "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 5100,
                    "start": 1491241540533,
                    "end": 1491241545633
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Your API Key｠ element of Home page",
                    "durationInMillis": 1723,
                    "start": 1491241545634,
                    "end": 1491241547357
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟https://developer-acct.ticketmaster.com/user/login｠ and ｟//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']｠",
                    "durationInMillis": 255,
                    "start": 1491241547359,
                    "end": 1491241547614
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Review Documentation"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/apis/getting-started/"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3021,
                    "start": 1491241547688,
                    "end": 1491241550709
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Review Documentation｠ element of Home page",
                    "durationInMillis": 1860,
                    "start": 1491241550710,
                    "end": 1491241552570
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/getting-started/｠ and ｟//h1｠",
                    "durationInMillis": 636,
                    "start": 1491241552571,
                    "end": 1491241553207
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Explore The API"
                ],
                [
                  "pageURL",
                  "{url}/api-explorer/"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2566,
                    "start": 1491241553414,
                    "end": 1491241555980
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Explore The API｠ element of Home page",
                    "durationInMillis": 1286,
                    "start": 1491241555982,
                    "end": 1491241557268
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/api-explorer/｠ and ｟//h1｠",
                    "durationInMillis": 1457,
                    "start": 1491241557270,
                    "end": 1491241558727
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Android"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#android-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 5117,
                    "start": 1491241558792,
                    "end": 1491241563909
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Android｠ element of Home page",
                    "durationInMillis": 1248,
                    "start": 1491241563910,
                    "end": 1491241565158
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#android-projects｠ and ｟//h1｠",
                    "durationInMillis": 27,
                    "start": 1491241565159,
                    "end": 1491241565186
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Backend"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#backend-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3681,
                    "start": 1491241565260,
                    "end": 1491241568941
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Backend｠ element of Home page",
                    "durationInMillis": 353,
                    "start": 1491241568942,
                    "end": 1491241569295
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#backend-projects｠ and ｟//h1｠",
                    "durationInMillis": 25,
                    "start": 1491241569296,
                    "end": 1491241569321
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "iOS"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#iOS-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2212,
                    "start": 1491241569384,
                    "end": 1491241571596
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟iOS｠ element of Home page",
                    "durationInMillis": 462,
                    "start": 1491241571597,
                    "end": 1491241572059
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#iOS-projects｠ and ｟//h1｠",
                    "durationInMillis": 29,
                    "start": 1491241572060,
                    "end": 1491241572089
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Web"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#web-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 4429,
                    "start": 1491241572411,
                    "end": 1491241576840
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Web｠ element of Home page",
                    "durationInMillis": 385,
                    "start": 1491241576841,
                    "end": 1491241577226
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#web-projects｠ and ｟//h1｠",
                    "durationInMillis": 28,
                    "start": 1491241577228,
                    "end": 1491241577256
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Tech blog"
                ],
                [
                  "pageURL",
                  "https://tech.ticketmaster.com/"
                ],
                [
                  "elementLocation",
                  "//h1[@class='site-title']/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 4901,
                    "start": 1491241577321,
                    "end": 1491241582222
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Tech blog｠ element of Home page",
                    "durationInMillis": 3097,
                    "start": 1491241582223,
                    "end": 1491241585320
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟https://tech.ticketmaster.com/｠ and ｟//h1[@class='site-title']/a｠",
                    "durationInMillis": 268,
                    "start": 1491241585322,
                    "end": 1491241585590
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Medium Publication"
                ],
                [
                  "pageURL",
                  "https://medium.com/ticketmaster-tech"
                ],
                [
                  "elementLocation",
                  "//h2[text()='Because Engineers are Fans Too!']"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2681,
                    "start": 1491241585691,
                    "end": 1491241588372
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Medium Publication｠ element of Home page",
                    "durationInMillis": 1464,
                    "start": 1491241588373,
                    "end": 1491241589837
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟https://medium.com/ticketmaster-tech｠ and ｟//h2[text()='Because Engineers are Fans Too!']｠",
                    "durationInMillis": 32,
                    "start": 1491241589838,
                    "end": 1491241589870
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Partner API"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/apis/partner/"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2081,
                    "start": 1491241589935,
                    "end": 1491241592016
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Partner API｠ element of Home page",
                    "durationInMillis": 1758,
                    "start": 1491241592017,
                    "end": 1491241593775
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/partner/｠ and ｟//h1｠",
                    "durationInMillis": 78,
                    "start": 1491241593776,
                    "end": 1491241593854
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Legacy docs"
                ],
                [
                  "pageURL",
                  "http://apidocs.ticketmaster.com/"
                ],
                [
                  "elementLocation",
                  "//td[@class='WikiLogoName']/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2371,
                    "start": 1491241593932,
                    "end": 1491241596303
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Legacy docs｠ element of Home page",
                    "durationInMillis": 1859,
                    "start": 1491241596305,
                    "end": 1491241598164
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://apidocs.ticketmaster.com/｠ and ｟//td[@class='WikiLogoName']/a｠",
                    "durationInMillis": 25,
                    "start": 1491241598165,
                    "end": 1491241598190
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 85032,
        "start": 1491241513223,
        "end": 1491241598255
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/OpenSource.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Open Source Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Open Source"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/"
                  ],
                  [
                    "pageTitle",
                    "//h1[@id='logo']"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "OpenSource.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Open Source Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Open Source"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/"
                  ],
                  [
                    "pageTitle",
                    "//h1[@id='logo']"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/OpenSource.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Open Source"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/"
                ],
                [
                  "pageTitle",
                  "//h1[@id='logo']"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2838,
                    "start": 1491241598261,
                    "end": 1491241601099
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Open Source｠ element of Home page",
                    "durationInMillis": 303,
                    "start": 1491241601100,
                    "end": 1491241601403
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/｠ and ｟//h1[@id='logo']｠",
                    "durationInMillis": 21,
                    "start": 1491241601404,
                    "end": 1491241601425
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/blogs/) Verification for general page's elements",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Open Source"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/"
                      ],
                      [
                        "pageTitle",
                        "//h1[@id='logo']"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3232,
        "start": 1491241598258,
        "end": 1491241601490
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/Search.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Search Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "| searchRequest |\n|      test     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "searchRequest"
              ],
              "data": [
                [
                  [
                    "searchRequest",
                    "test"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "And insert Search Parameter <searchRequest> and navigate to Search page",
              "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "Search.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Search Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "| searchRequest |\n|      test     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "searchRequest"
              ],
              "data": [
                [
                  [
                    "searchRequest",
                    "test"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "And insert Search Parameter <searchRequest> and navigate to Search page",
              "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/Search.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "searchRequest",
                  "test"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3777,
                    "start": 1491241601494,
                    "end": 1491241605271
                  },
                  {
                    "step": "And insert Search Parameter <searchRequest> and navigate to Search page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And insert Search Parameter ｟test｠ and navigate to Search page",
                    "durationInMillis": 355,
                    "start": 1491241605272,
                    "end": 1491241605627
                  },
                  {
                    "step": "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check general page elements for Search Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                    "durationInMillis": 21989,
                    "start": 1491241605628,
                    "end": 1491241627617
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/search/) Verification for general page's elements",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "| searchRequest |\n|      test     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "searchRequest"
                  ],
                  "data": [
                    [
                      [
                        "searchRequest",
                        "test"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "And insert Search Parameter <searchRequest> and navigate to Search page",
                  "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 26193,
        "start": 1491241601492,
        "end": 1491241627685
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/AffiliateID.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "user",
          "iWantTo": "perform an action",
          "soThat": "I can achieve a business goal"
        },
        "meta": {
          "properties": [
            {
              "@name": "NotImplemented",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "scenario description",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a system state",
              "When I do something",
              "Then system is in a different state"
            ]
          }
        ],
        "name": "AffiliateID.story"
      },
      "localizedNarrative": "As a user\nI want to perform an action\nSo that I can achieve a business goal",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0,
        "start": 0,
        "end": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/CreateNewAccount.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon Create New Account Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon Create New Account page from LogIn page"
            ]
          },
          "after": [
            {
              "steps": []
            }
          ]
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Then check general page elements for Pantheon Create New Account page"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.14 Create New Account - fail the CAPTCHA check]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message The answer you entered for the CAPTCHA was not correct. is displayed"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.31 Edit Profile - I Agree To The Terms & Conditions checkbox]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
              "When click Create New Account on Register Page",
              "Then the message I agree to the Terms of Use field is required. is displayed"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - First Name validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|          |adele   |corporation|company.com   |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message First Name field is required. is displayed"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |        |corporation|company.com   |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message Last Name field is required. is displayed"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |           |company.com   |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message Company Name field is required. is displayed"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Site URL validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|              |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message Company Site URL field is required. is displayed"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Username validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|company.com   |        |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message Username field is required. is displayed"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Email validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |            |",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message E-mail address field is required. is displayed"
            ]
          }
        ],
        "name": "CreateNewAccount.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon Create New Account Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Then check general page elements for Pantheon Create New Account page"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 3066,
                  "start": 1491241627690,
                  "end": 1491241630756
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 2882,
                  "start": 1491241630758,
                  "end": 1491241633640
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 933,
                  "start": 1491241633641,
                  "end": 1491241634574
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241634575,
                  "end": 1491241634576
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Then check general page elements for Pantheon Create New Account page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon Create New Account page",
                  "durationInMillis": 20229,
                  "start": 1491241634576,
                  "end": 1491241654805
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25,
                  "start": 1491241654805,
                  "end": 1491241654830
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491241654830,
                  "end": 1491241654830
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Then check general page elements for Pantheon Create New Account page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.14 Create New Account - fail the CAPTCHA check]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message The answer you entered for the CAPTCHA was not correct. is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2839,
                  "start": 1491241654901,
                  "end": 1491241657740
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1114,
                  "start": 1491241657740,
                  "end": 1491241658854
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 886,
                  "start": 1491241658855,
                  "end": 1491241659741
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491241659742,
                  "end": 1491241659742
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|］",
                  "durationInMillis": 677,
                  "start": 1491241659743,
                  "end": 1491241660420
                },
                {
                  "step": "When click checkbox Terms of Use",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click checkbox Terms of Use",
                  "durationInMillis": 115,
                  "start": 1491241660423,
                  "end": 1491241660538
                },
                {
                  "step": "When click Create New Account on Register Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Create New Account on Register Page",
                  "durationInMillis": 1523,
                  "start": 1491241660538,
                  "end": 1491241662061
                },
                {
                  "step": "Then the message The answer you entered for the CAPTCHA was not correct. is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟The answer you entered for the CAPTCHA was not correct.｠ is displayed",
                  "durationInMillis": 45,
                  "start": 1491241662062,
                  "end": 1491241662107
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23,
                  "start": 1491241662108,
                  "end": 1491241662131
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241662131,
                  "end": 1491241662132
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.14 Create New Account - fail the CAPTCHA check]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
                "When click checkbox Terms of Use",
                "When click Create New Account on Register Page",
                "Then the message The answer you entered for the CAPTCHA was not correct. is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.31 Edit Profile - I Agree To The Terms & Conditions checkbox]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
              "When click Create New Account on Register Page",
              "Then the message I agree to the Terms of Use field is required. is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2009,
                  "start": 1491241662199,
                  "end": 1491241664208
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 969,
                  "start": 1491241664209,
                  "end": 1491241665178
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 878,
                  "start": 1491241665178,
                  "end": 1491241666056
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241666057,
                  "end": 1491241666058
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|］",
                  "durationInMillis": 650,
                  "start": 1491241666058,
                  "end": 1491241666708
                },
                {
                  "step": "When click Create New Account on Register Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Create New Account on Register Page",
                  "durationInMillis": 1751,
                  "start": 1491241666709,
                  "end": 1491241668460
                },
                {
                  "step": "Then the message I agree to the Terms of Use field is required. is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟I agree to the Terms of Use field is required.｠ is displayed",
                  "durationInMillis": 145,
                  "start": 1491241668461,
                  "end": 1491241668606
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1491241668606,
                  "end": 1491241668630
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491241668630,
                  "end": 1491241668630
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.31 Edit Profile - I Agree To The Terms & Conditions checkbox]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
                "When click Create New Account on Register Page",
                "Then the message I agree to the Terms of Use field is required. is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - First Name validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|          |adele   |corporation|company.com   |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message First Name field is required. is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2025,
                  "start": 1491241668696,
                  "end": 1491241670721
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 936,
                  "start": 1491241670722,
                  "end": 1491241671658
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 871,
                  "start": 1491241671659,
                  "end": 1491241672530
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241672531,
                  "end": 1491241672532
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|          |adele   |corporation|company.com   |maamxde |bx@gmail.com|",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|          |adele   |corporation|company.com   |maamxde |bx@gmail.com|］",
                  "durationInMillis": 669,
                  "start": 1491241672532,
                  "end": 1491241673201
                },
                {
                  "step": "When click checkbox Terms of Use",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click checkbox Terms of Use",
                  "durationInMillis": 114,
                  "start": 1491241673202,
                  "end": 1491241673316
                },
                {
                  "step": "When click Create New Account on Register Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Create New Account on Register Page",
                  "durationInMillis": 866,
                  "start": 1491241673317,
                  "end": 1491241674183
                },
                {
                  "step": "Then the message First Name field is required. is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟First Name field is required.｠ is displayed",
                  "durationInMillis": 141,
                  "start": 1491241674184,
                  "end": 1491241674325
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 27,
                  "start": 1491241674325,
                  "end": 1491241674352
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241674352,
                  "end": 1491241674353
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - First Name validation]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|          |adele   |corporation|company.com   |maamxde |bx@gmail.com|",
                "When click checkbox Terms of Use",
                "When click Create New Account on Register Page",
                "Then the message First Name field is required. is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |        |corporation|company.com   |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message Last Name field is required. is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 1996,
                  "start": 1491241674418,
                  "end": 1491241676414
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 911,
                  "start": 1491241676415,
                  "end": 1491241677326
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 890,
                  "start": 1491241677327,
                  "end": 1491241678217
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241678217,
                  "end": 1491241678218
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |        |corporation|company.com   |maamxde |bx@gmail.com|",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |        |corporation|company.com   |maamxde |bx@gmail.com|］",
                  "durationInMillis": 642,
                  "start": 1491241678219,
                  "end": 1491241678861
                },
                {
                  "step": "When click checkbox Terms of Use",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click checkbox Terms of Use",
                  "durationInMillis": 121,
                  "start": 1491241678863,
                  "end": 1491241678984
                },
                {
                  "step": "When click Create New Account on Register Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Create New Account on Register Page",
                  "durationInMillis": 850,
                  "start": 1491241678985,
                  "end": 1491241679835
                },
                {
                  "step": "Then the message Last Name field is required. is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟Last Name field is required.｠ is displayed",
                  "durationInMillis": 145,
                  "start": 1491241679836,
                  "end": 1491241679981
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1491241679982,
                  "end": 1491241680006
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491241680006,
                  "end": 1491241680006
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |        |corporation|company.com   |maamxde |bx@gmail.com|",
                "When click checkbox Terms of Use",
                "When click Create New Account on Register Page",
                "Then the message Last Name field is required. is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |           |company.com   |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message Company Name field is required. is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2773,
                  "start": 1491241680075,
                  "end": 1491241682848
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 836,
                  "start": 1491241682849,
                  "end": 1491241683685
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 890,
                  "start": 1491241683686,
                  "end": 1491241684576
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241684576,
                  "end": 1491241684577
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |           |company.com   |maamxde |bx@gmail.com|",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |           |company.com   |maamxde |bx@gmail.com|］",
                  "durationInMillis": 635,
                  "start": 1491241684578,
                  "end": 1491241685213
                },
                {
                  "step": "When click checkbox Terms of Use",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click checkbox Terms of Use",
                  "durationInMillis": 115,
                  "start": 1491241685215,
                  "end": 1491241685330
                },
                {
                  "step": "When click Create New Account on Register Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Create New Account on Register Page",
                  "durationInMillis": 852,
                  "start": 1491241685330,
                  "end": 1491241686182
                },
                {
                  "step": "Then the message Company Name field is required. is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟Company Name field is required.｠ is displayed",
                  "durationInMillis": 147,
                  "start": 1491241686183,
                  "end": 1491241686330
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25,
                  "start": 1491241686331,
                  "end": 1491241686356
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491241686356,
                  "end": 1491241686356
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |           |company.com   |maamxde |bx@gmail.com|",
                "When click checkbox Terms of Use",
                "When click Create New Account on Register Page",
                "Then the message Company Name field is required. is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Site URL validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|              |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message Company Site URL field is required. is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 3657,
                  "start": 1491241686422,
                  "end": 1491241690079
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 822,
                  "start": 1491241690080,
                  "end": 1491241690902
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 834,
                  "start": 1491241690903,
                  "end": 1491241691737
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241691738,
                  "end": 1491241691739
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|              |maamxde |bx@gmail.com|",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|              |maamxde |bx@gmail.com|］",
                  "durationInMillis": 648,
                  "start": 1491241691739,
                  "end": 1491241692387
                },
                {
                  "step": "When click checkbox Terms of Use",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click checkbox Terms of Use",
                  "durationInMillis": 116,
                  "start": 1491241692389,
                  "end": 1491241692505
                },
                {
                  "step": "When click Create New Account on Register Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Create New Account on Register Page",
                  "durationInMillis": 874,
                  "start": 1491241692506,
                  "end": 1491241693380
                },
                {
                  "step": "Then the message Company Site URL field is required. is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟Company Site URL field is required.｠ is displayed",
                  "durationInMillis": 143,
                  "start": 1491241693381,
                  "end": 1491241693524
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25,
                  "start": 1491241693525,
                  "end": 1491241693550
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241693550,
                  "end": 1491241693551
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Site URL validation]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|              |maamxde |bx@gmail.com|",
                "When click checkbox Terms of Use",
                "When click Create New Account on Register Page",
                "Then the message Company Site URL field is required. is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Username validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|company.com   |        |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message Username field is required. is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2385,
                  "start": 1491241693624,
                  "end": 1491241696009
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 840,
                  "start": 1491241696010,
                  "end": 1491241696850
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 840,
                  "start": 1491241696851,
                  "end": 1491241697691
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241697692,
                  "end": 1491241697693
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|company.com   |        |bx@gmail.com|",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|company.com   |        |bx@gmail.com|］",
                  "durationInMillis": 636,
                  "start": 1491241697693,
                  "end": 1491241698329
                },
                {
                  "step": "When click checkbox Terms of Use",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click checkbox Terms of Use",
                  "durationInMillis": 123,
                  "start": 1491241698331,
                  "end": 1491241698454
                },
                {
                  "step": "When click Create New Account on Register Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Create New Account on Register Page",
                  "durationInMillis": 858,
                  "start": 1491241698455,
                  "end": 1491241699313
                },
                {
                  "step": "Then the message Username field is required. is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟Username field is required.｠ is displayed",
                  "durationInMillis": 147,
                  "start": 1491241699314,
                  "end": 1491241699461
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 29,
                  "start": 1491241699461,
                  "end": 1491241699490
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241699490,
                  "end": 1491241699491
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Username validation]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|company.com   |        |bx@gmail.com|",
                "When click checkbox Terms of Use",
                "When click Create New Account on Register Page",
                "Then the message Username field is required. is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Email validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |            |",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message E-mail address field is required. is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 1996,
                  "start": 1491241699557,
                  "end": 1491241701553
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1276,
                  "start": 1491241701554,
                  "end": 1491241702830
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 821,
                  "start": 1491241702830,
                  "end": 1491241703651
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241703652,
                  "end": 1491241703653
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |            |",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |            |］",
                  "durationInMillis": 619,
                  "start": 1491241703653,
                  "end": 1491241704272
                },
                {
                  "step": "When click checkbox Terms of Use",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click checkbox Terms of Use",
                  "durationInMillis": 112,
                  "start": 1491241704274,
                  "end": 1491241704386
                },
                {
                  "step": "When click Create New Account on Register Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Create New Account on Register Page",
                  "durationInMillis": 834,
                  "start": 1491241704387,
                  "end": 1491241705221
                },
                {
                  "step": "Then the message E-mail address field is required. is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟E-mail address field is required.｠ is displayed",
                  "durationInMillis": 141,
                  "start": 1491241705221,
                  "end": 1491241705362
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21,
                  "start": 1491241705363,
                  "end": 1491241705384
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491241705384,
                  "end": 1491241705384
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Email validation]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |            |",
                "When click checkbox Terms of Use",
                "When click Create New Account on Register Page",
                "Then the message E-mail address field is required. is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 77759,
        "start": 1491241627689,
        "end": 1491241705448
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/EditProfile.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon Edit Profile Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "When navigate to Pantheon Edit Profile page from User Account page",
              "Then check general page elements for Pantheon Edit Profile page"
            ]
          }
        ],
        "name": "EditProfile.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon Edit Profile Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "When navigate to Pantheon Edit Profile page from User Account page",
              "Then check general page elements for Pantheon Edit Profile page"
            ]
          },
          "storyPath": "stories/site/pantheon/EditProfile.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241705451,
                  "end": 1491241705452
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 1897,
                  "start": 1491241705452,
                  "end": 1491241707349
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 941,
                  "start": 1491241707349,
                  "end": 1491241708290
                },
                {
                  "step": "When navigate to Pantheon User Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
                  "durationInMillis": 4666,
                  "start": 1491241708291,
                  "end": 1491241712957
                },
                {
                  "step": "When navigate to Pantheon Edit Profile page from User Account page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Edit Profile page from User Account page",
                  "durationInMillis": 3897,
                  "start": 1491241712958,
                  "end": 1491241716855
                },
                {
                  "step": "Then check general page elements for Pantheon Edit Profile page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon Edit Profile page",
                  "durationInMillis": 20295,
                  "start": 1491241716856,
                  "end": 1491241737151
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 34,
                  "start": 1491241737152,
                  "end": 1491241737186
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491241737186,
                  "end": 1491241737186
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "When navigate to Pantheon User Account page from LogIn page",
                "When navigate to Pantheon Edit Profile page from User Account page",
                "Then check general page elements for Pantheon Edit Profile page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 31804,
        "start": 1491241705451,
        "end": 1491241737255
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/RequestNewPassword.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon Request New Password Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon Request New Password page from LogIn page",
              "Then check general page elements for Pantheon Request New Password page"
            ]
          }
        ],
        "name": "RequestNewPassword.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon Request New Password Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon Request New Password page from LogIn page",
              "Then check general page elements for Pantheon Request New Password page"
            ]
          },
          "storyPath": "stories/site/pantheon/RequestNewPassword.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491241737258,
                  "end": 1491241737258
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2404,
                  "start": 1491241737258,
                  "end": 1491241739662
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 980,
                  "start": 1491241739663,
                  "end": 1491241740643
                },
                {
                  "step": "When navigate to Pantheon Request New Password page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Request New Password page from LogIn page",
                  "durationInMillis": 345,
                  "start": 1491241740644,
                  "end": 1491241740989
                },
                {
                  "step": "Then check general page elements for Pantheon Request New Password page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon Request New Password page",
                  "durationInMillis": 20347,
                  "start": 1491241740990,
                  "end": 1491241761337
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22,
                  "start": 1491241761338,
                  "end": 1491241761360
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241761360,
                  "end": 1491241761361
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "When navigate to Pantheon Request New Password page from LogIn page",
                "Then check general page elements for Pantheon Request New Password page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 24175,
        "start": 1491241737257,
        "end": 1491241761432
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/UserAccount.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon User Account Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [2.2.3.4 Login - Password field - enter valid password]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "Then check general page elements for Pantheon User Account page"
            ]
          }
        ],
        "name": "UserAccount.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon User Account Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "FAILED",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [2.2.3.4 Login - Password field - enter valid password]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "Then check general page elements for Pantheon User Account page"
            ]
          },
          "storyPath": "stories/site/pantheon/UserAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 2,
                  "start": 1491241761435,
                  "end": 1491241761437
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2829,
                  "start": 1491241761437,
                  "end": 1491241764266
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1054,
                  "start": 1491241764267,
                  "end": 1491241765321
                },
                {
                  "step": "When navigate to Pantheon User Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
                  "durationInMillis": 5136,
                  "start": 1491241765322,
                  "end": 1491241770458
                },
                {
                  "step": "Then check general page elements for Pantheon User Account page",
                  "type": "FAILED",
                  "throwable": {
                    "detailMessage": "Then check general page elements for Pantheon User Account page",
                    "cause": {
                      "@class": "org.junit.ComparisonFailure",
                      "detailMessage": "",
                      "stackTrace": [
                        "org.junit.Assert.assertEquals(Assert.java:115)",
                        "org.junit.Assert.assertEquals(Assert.java:144)",
                        "bla.tm.steps.pantheon.UserAccountSteps.checkIfTitleIsCorrect(UserAccountSteps.java:25)",
                        "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$4d58fb7e.CGLIB$checkIfTitleIsCorrect$1(<generated>)",
                        "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$4d58fb7e$$FastClassByCGLIB$$301e3b88.invoke(<generated>)",
                        "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                        "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                        "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                        "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                        "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                        "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                        "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$4d58fb7e.checkIfTitleIsCorrect(<generated>)",
                        "bla.tm.definitions.site.pantheon.UserAccountDefinition.checkGeneralPageElements(UserAccountDefinition.java:27)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "fExpected": "There are no applications here.\nCreate something!",
                      "fActual": "THESE ARE YOUR APPS!\nEXPLORE THEM!"
                    },
                    "stackTrace": [
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "489d2f0f-82b6-46c5-99b7-73b80822013e"
                  },
                  "parametrisedStep": "Then check general page elements for Pantheon User Account page",
                  "durationInMillis": 681,
                  "start": 1491241770459,
                  "end": 1491241771140
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 19,
                  "start": 1491241771150,
                  "end": 1491241771169
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491241771169,
                  "end": 1491241771169
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [2.2.3.4 Login - Password field - enter valid password]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "When navigate to Pantheon User Account page from LogIn page",
                "Then check general page elements for Pantheon User Account page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "FAILED"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 9871,
        "start": 1491241761434,
        "end": 1491241771305
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/UserApps.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "manage my Apps",
          "asA": "user of Ticket Master Developer portal",
          "iWantTo": "perform CRUD operations with my apps",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              "Given open Home page",
              "And navigate to Pantheon LogIn page from Home page",
              "And navigate to Pantheon User Account page from LogIn page"
            ]
          },
          "after": [
            {
              "steps": []
            }
          ]
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/1554/apps/add) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When navigate to Pantheon Add New App page from User Account page",
              "Then check general page elements for Pantheon Add New App page"
            ]
          },
          {
            "title": "(Pantheon|Add new App) Add new App negative [2.1.15 Add New App - The required field is empty]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |appName                  |message                                    |\n|Application name |mamaxF-Appd2             |Callback URL is required for Oauth Product |\n|Redirect URI     |https://ticketmaster.com |Application name field is required.        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "appName",
                "message"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "appName",
                    "mamaxF-Appd2"
                  ],
                  [
                    "message",
                    "Callback URL is required for Oauth Product"
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "appName",
                    "https://ticketmaster.com"
                  ],
                  [
                    "message",
                    "Application name field is required."
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to Pantheon Add New App page from User Account page",
              "When enter to the field <appFormField> value <appName>",
              "When save changes on Edit App Page",
              "Then the message <message> is displayed"
            ]
          },
          {
            "title": "(Pantheon|Add new App) [2.1.5 Add new App with values positive]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to Pantheon Add New App page from User Account page",
              "When enter to the field Application name value uniqueApp",
              "When enter to the field Redirect URI value https://oauth.ticketmaster.com",
              "And save changes on Edit App Page",
              "Then the message App Created! is displayed",
              "Then open my Apps page",
              "And the App is appeared in the list of apps"
            ]
          },
          {
            "title": "(Pantheon|Edit App) Edit app with empty required fields negative",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |formError                                  |\n|Application name |Application name field is required.        |\n|Redirect URI     |Callback URL is required for Oauth Product |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "formError"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "formError",
                    "Application name field is required."
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "formError",
                    "Callback URL is required for Oauth Product"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "And open Edit App Page for the first application",
              "When clear field <appFormField> on Edit App Page",
              "And save changes on Edit App Page",
              "Then the message <formError> is displayed"
            ]
          },
          {
            "title": "(Pantheon|Edit App) Edit app positive [2.1.8 Edit application]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |appValue                       |detailName       |\n|Application name |mamax-Appdf                    |Application Name |\n|Redirect URI     |https://oauth.ticketmaster.com |Callback URL     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "appValue",
                "detailName"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "appValue",
                    "mamax-Appdf"
                  ],
                  [
                    "detailName",
                    "Application Name"
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "appValue",
                    "https://oauth.ticketmaster.com"
                  ],
                  [
                    "detailName",
                    "Callback URL"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "And open Edit App Page for the first application",
              "When clear field <appFormField> on Edit App Page",
              "And enter to the field <appFormField> value <appValue>",
              "And save changes on Edit App Page",
              "And the message App Updated! is displayed",
              "And open my Apps page",
              "And open Details tab on the application",
              "Then <detailName> have been applied on Edit App Page with value <appValue>"
            ]
          },
          {
            "title": "(Pantheon|Delete App) Delete App positive [2.1.9 Delete application]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "When delete first App",
              "Then the message App Deleted! is displayed",
              "And the predefined app is removed from the list of apps"
            ]
          }
        ],
        "name": "UserApps.story"
      },
      "localizedNarrative": "In order to manage my Apps\nAs a user of Ticket Master Developer portal\nI want to perform CRUD operations with my apps",
      "allowed": true,
      "status": "FAILED",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/1554/apps/add) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When navigate to Pantheon Add New App page from User Account page",
              "Then check general page elements for Pantheon Add New App page"
            ]
          },
          "storyPath": "stories/site/pantheon/UserApps.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2341,
                  "start": 1491241772011,
                  "end": 1491241774352
                },
                {
                  "step": "And navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1023,
                  "start": 1491241774355,
                  "end": 1491241775378
                },
                {
                  "step": "And navigate to Pantheon User Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                  "durationInMillis": 4615,
                  "start": 1491241775378,
                  "end": 1491241779993
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241779993,
                  "end": 1491241779994
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When navigate to Pantheon Add New App page from User Account page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Add New App page from User Account page",
                  "durationInMillis": 2302,
                  "start": 1491241779995,
                  "end": 1491241782297
                },
                {
                  "step": "Then check general page elements for Pantheon Add New App page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon Add New App page",
                  "durationInMillis": 20427,
                  "start": 1491241782298,
                  "end": 1491241802725
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 26,
                  "start": 1491241802725,
                  "end": 1491241802751
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241802751,
                  "end": 1491241802752
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/1554/apps/add) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When navigate to Pantheon Add New App page from User Account page",
                "Then check general page elements for Pantheon Add New App page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(Pantheon|Add new App) Add new App negative [2.1.15 Add New App - The required field is empty]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |appName                  |message                                    |\n|Application name |mamaxF-Appd2             |Callback URL is required for Oauth Product |\n|Redirect URI     |https://ticketmaster.com |Application name field is required.        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "appName",
                "message"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "appName",
                    "mamaxF-Appd2"
                  ],
                  [
                    "message",
                    "Callback URL is required for Oauth Product"
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "appName",
                    "https://ticketmaster.com"
                  ],
                  [
                    "message",
                    "Application name field is required."
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to Pantheon Add New App page from User Account page",
              "When enter to the field <appFormField> value <appName>",
              "When save changes on Edit App Page",
              "Then the message <message> is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/UserApps.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "appFormField",
                  "Application name"
                ],
                [
                  "appName",
                  "mamaxF-Appd2"
                ],
                [
                  "message",
                  "Callback URL is required for Oauth Product"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2117,
                    "start": 1491241802818,
                    "end": 1491241804935
                  },
                  {
                    "step": "And navigate to Pantheon LogIn page from Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                    "durationInMillis": 963,
                    "start": 1491241804936,
                    "end": 1491241805899
                  },
                  {
                    "step": "And navigate to Pantheon User Account page from LogIn page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                    "durationInMillis": 4331,
                    "start": 1491241805899,
                    "end": 1491241810230
                  }
                ]
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given navigate to Pantheon Add New App page from User Account page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given navigate to Pantheon Add New App page from User Account page",
                    "durationInMillis": 1948,
                    "start": 1491241810231,
                    "end": 1491241812179
                  },
                  {
                    "step": "When enter to the field <appFormField> value <appName>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When enter to the field ｟Application name｠ value ｟mamaxF-Appd2｠",
                    "durationInMillis": 217,
                    "start": 1491241812180,
                    "end": 1491241812397
                  },
                  {
                    "step": "When save changes on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When save changes on Edit App Page",
                    "durationInMillis": 1975,
                    "start": 1491241812398,
                    "end": 1491241814373
                  },
                  {
                    "step": "Then the message <message> is displayed",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the message ｟Callback URL is required for Oauth Product｠ is displayed",
                    "durationInMillis": 655,
                    "start": 1491241814373,
                    "end": 1491241815028
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(Pantheon|Add new App) Add new App negative [2.1.15 Add New App - The required field is empty]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|appFormField     |appName                  |message                                    |\n|Application name |mamaxF-Appd2             |Callback URL is required for Oauth Product |\n|Redirect URI     |https://ticketmaster.com |Application name field is required.        |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "appFormField",
                    "appName",
                    "message"
                  ],
                  "data": [
                    [
                      [
                        "appFormField",
                        "Application name"
                      ],
                      [
                        "appName",
                        "mamaxF-Appd2"
                      ],
                      [
                        "message",
                        "Callback URL is required for Oauth Product"
                      ]
                    ],
                    [
                      [
                        "appFormField",
                        "Redirect URI"
                      ],
                      [
                        "appName",
                        "https://ticketmaster.com"
                      ],
                      [
                        "message",
                        "Application name field is required."
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given navigate to Pantheon Add New App page from User Account page",
                  "When enter to the field <appFormField> value <appName>",
                  "When save changes on Edit App Page",
                  "Then the message <message> is displayed"
                ]
              }
            },
            {
              "parameters": [
                [
                  "appFormField",
                  "Redirect URI"
                ],
                [
                  "appName",
                  "https://ticketmaster.com"
                ],
                [
                  "message",
                  "Application name field is required."
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2367,
                    "start": 1491241815096,
                    "end": 1491241817463
                  },
                  {
                    "step": "And navigate to Pantheon LogIn page from Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                    "durationInMillis": 1036,
                    "start": 1491241817464,
                    "end": 1491241818500
                  },
                  {
                    "step": "And navigate to Pantheon User Account page from LogIn page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                    "durationInMillis": 4833,
                    "start": 1491241818501,
                    "end": 1491241823334
                  }
                ]
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given navigate to Pantheon Add New App page from User Account page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given navigate to Pantheon Add New App page from User Account page",
                    "durationInMillis": 2072,
                    "start": 1491241823335,
                    "end": 1491241825407
                  },
                  {
                    "step": "When enter to the field <appFormField> value <appName>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When enter to the field ｟Redirect URI｠ value ｟https://ticketmaster.com｠",
                    "durationInMillis": 381,
                    "start": 1491241825408,
                    "end": 1491241825789
                  },
                  {
                    "step": "When save changes on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When save changes on Edit App Page",
                    "durationInMillis": 1930,
                    "start": 1491241825790,
                    "end": 1491241827720
                  },
                  {
                    "step": "Then the message <message> is displayed",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the message ｟Application name field is required.｠ is displayed",
                    "durationInMillis": 873,
                    "start": 1491241827721,
                    "end": 1491241828594
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(Pantheon|Add new App) Add new App negative [2.1.15 Add New App - The required field is empty]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|appFormField     |appName                  |message                                    |\n|Application name |mamaxF-Appd2             |Callback URL is required for Oauth Product |\n|Redirect URI     |https://ticketmaster.com |Application name field is required.        |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "appFormField",
                    "appName",
                    "message"
                  ],
                  "data": [
                    [
                      [
                        "appFormField",
                        "Application name"
                      ],
                      [
                        "appName",
                        "mamaxF-Appd2"
                      ],
                      [
                        "message",
                        "Callback URL is required for Oauth Product"
                      ]
                    ],
                    [
                      [
                        "appFormField",
                        "Redirect URI"
                      ],
                      [
                        "appName",
                        "https://ticketmaster.com"
                      ],
                      [
                        "message",
                        "Application name field is required."
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given navigate to Pantheon Add New App page from User Account page",
                  "When enter to the field <appFormField> value <appName>",
                  "When save changes on Edit App Page",
                  "Then the message <message> is displayed"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(Pantheon|Add new App) [2.1.5 Add new App with values positive]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to Pantheon Add New App page from User Account page",
              "When enter to the field Application name value uniqueApp",
              "When enter to the field Redirect URI value https://oauth.ticketmaster.com",
              "And save changes on Edit App Page",
              "Then the message App Created! is displayed",
              "Then open my Apps page",
              "And the App is appeared in the list of apps"
            ]
          },
          "storyPath": "stories/site/pantheon/UserApps.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 3246,
                  "start": 1491241828665,
                  "end": 1491241831911
                },
                {
                  "step": "And navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1343,
                  "start": 1491241831911,
                  "end": 1491241833254
                },
                {
                  "step": "And navigate to Pantheon User Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                  "durationInMillis": 5050,
                  "start": 1491241833254,
                  "end": 1491241838304
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491241838305,
                  "end": 1491241838305
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given navigate to Pantheon Add New App page from User Account page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given navigate to Pantheon Add New App page from User Account page",
                  "durationInMillis": 1876,
                  "start": 1491241838306,
                  "end": 1491241840182
                },
                {
                  "step": "When enter to the field Application name value uniqueApp",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter to the field ｟Application name｠ value ｟uniqueApp｠",
                  "durationInMillis": 202,
                  "start": 1491241840182,
                  "end": 1491241840384
                },
                {
                  "step": "When enter to the field Redirect URI value https://oauth.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter to the field ｟Redirect URI｠ value ｟https://oauth.ticketmaster.com｠",
                  "durationInMillis": 131,
                  "start": 1491241840385,
                  "end": 1491241840516
                },
                {
                  "step": "And save changes on Edit App Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And save changes on Edit App Page",
                  "durationInMillis": 9743,
                  "start": 1491241840517,
                  "end": 1491241850260
                },
                {
                  "step": "Then the message App Created! is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟App Created!｠ is displayed",
                  "durationInMillis": 661,
                  "start": 1491241850261,
                  "end": 1491241850922
                },
                {
                  "step": "Then open my Apps page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then open my Apps page",
                  "durationInMillis": 113,
                  "start": 1491241850923,
                  "end": 1491241851036
                },
                {
                  "step": "And the App is appeared in the list of apps",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And the App is appeared in the list of apps",
                  "durationInMillis": 189,
                  "start": 1491241851036,
                  "end": 1491241851225
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 78,
                  "start": 1491241851226,
                  "end": 1491241851304
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491241851304,
                  "end": 1491241851304
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(Pantheon|Add new App) [2.1.5 Add new App with values positive]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given navigate to Pantheon Add New App page from User Account page",
                "When enter to the field Application name value uniqueApp",
                "When enter to the field Redirect URI value https://oauth.ticketmaster.com",
                "And save changes on Edit App Page",
                "Then the message App Created! is displayed",
                "Then open my Apps page",
                "And the App is appeared in the list of apps"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(Pantheon|Edit App) Edit app with empty required fields negative",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |formError                                  |\n|Application name |Application name field is required.        |\n|Redirect URI     |Callback URL is required for Oauth Product |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "formError"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "formError",
                    "Application name field is required."
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "formError",
                    "Callback URL is required for Oauth Product"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "And open Edit App Page for the first application",
              "When clear field <appFormField> on Edit App Page",
              "And save changes on Edit App Page",
              "Then the message <formError> is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/UserApps.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "appFormField",
                  "Application name"
                ],
                [
                  "formError",
                  "Application name field is required."
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 4102,
                    "start": 1491241851373,
                    "end": 1491241855475
                  },
                  {
                    "step": "And navigate to Pantheon LogIn page from Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                    "durationInMillis": 1079,
                    "start": 1491241855476,
                    "end": 1491241856555
                  },
                  {
                    "step": "And navigate to Pantheon User Account page from LogIn page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                    "durationInMillis": 5329,
                    "start": 1491241856556,
                    "end": 1491241861885
                  }
                ]
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open my Apps page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open my Apps page",
                    "durationInMillis": 272,
                    "start": 1491241861885,
                    "end": 1491241862157
                  },
                  {
                    "step": "And open Edit App Page for the first application",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And open Edit App Page for the first application",
                    "durationInMillis": 258,
                    "start": 1491241862158,
                    "end": 1491241862416
                  },
                  {
                    "step": "When clear field <appFormField> on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When clear field ｟Application name｠ on Edit App Page",
                    "durationInMillis": 3170,
                    "start": 1491241862416,
                    "end": 1491241865586
                  },
                  {
                    "step": "And save changes on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And save changes on Edit App Page",
                    "durationInMillis": 3839,
                    "start": 1491241865587,
                    "end": 1491241869426
                  },
                  {
                    "step": "Then the message <formError> is displayed",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the message ｟Application name field is required.｠ is displayed",
                    "durationInMillis": 541,
                    "start": 1491241869427,
                    "end": 1491241869968
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(Pantheon|Edit App) Edit app with empty required fields negative",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|appFormField     |formError                                  |\n|Application name |Application name field is required.        |\n|Redirect URI     |Callback URL is required for Oauth Product |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "appFormField",
                    "formError"
                  ],
                  "data": [
                    [
                      [
                        "appFormField",
                        "Application name"
                      ],
                      [
                        "formError",
                        "Application name field is required."
                      ]
                    ],
                    [
                      [
                        "appFormField",
                        "Redirect URI"
                      ],
                      [
                        "formError",
                        "Callback URL is required for Oauth Product"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open my Apps page",
                  "And open Edit App Page for the first application",
                  "When clear field <appFormField> on Edit App Page",
                  "And save changes on Edit App Page",
                  "Then the message <formError> is displayed"
                ]
              }
            },
            {
              "parameters": [
                [
                  "appFormField",
                  "Redirect URI"
                ],
                [
                  "formError",
                  "Callback URL is required for Oauth Product"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2154,
                    "start": 1491241870031,
                    "end": 1491241872185
                  },
                  {
                    "step": "And navigate to Pantheon LogIn page from Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                    "durationInMillis": 963,
                    "start": 1491241872185,
                    "end": 1491241873148
                  },
                  {
                    "step": "And navigate to Pantheon User Account page from LogIn page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                    "durationInMillis": 4899,
                    "start": 1491241873149,
                    "end": 1491241878048
                  }
                ]
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open my Apps page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open my Apps page",
                    "durationInMillis": 231,
                    "start": 1491241878048,
                    "end": 1491241878279
                  },
                  {
                    "step": "And open Edit App Page for the first application",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And open Edit App Page for the first application",
                    "durationInMillis": 273,
                    "start": 1491241878280,
                    "end": 1491241878553
                  },
                  {
                    "step": "When clear field <appFormField> on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When clear field ｟Redirect URI｠ on Edit App Page",
                    "durationInMillis": 3571,
                    "start": 1491241878554,
                    "end": 1491241882125
                  },
                  {
                    "step": "And save changes on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And save changes on Edit App Page",
                    "durationInMillis": 3985,
                    "start": 1491241882126,
                    "end": 1491241886111
                  },
                  {
                    "step": "Then the message <formError> is displayed",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the message ｟Callback URL is required for Oauth Product｠ is displayed",
                    "durationInMillis": 580,
                    "start": 1491241886112,
                    "end": 1491241886692
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(Pantheon|Edit App) Edit app with empty required fields negative",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|appFormField     |formError                                  |\n|Application name |Application name field is required.        |\n|Redirect URI     |Callback URL is required for Oauth Product |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "appFormField",
                    "formError"
                  ],
                  "data": [
                    [
                      [
                        "appFormField",
                        "Application name"
                      ],
                      [
                        "formError",
                        "Application name field is required."
                      ]
                    ],
                    [
                      [
                        "appFormField",
                        "Redirect URI"
                      ],
                      [
                        "formError",
                        "Callback URL is required for Oauth Product"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open my Apps page",
                  "And open Edit App Page for the first application",
                  "When clear field <appFormField> on Edit App Page",
                  "And save changes on Edit App Page",
                  "Then the message <formError> is displayed"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(Pantheon|Edit App) Edit app positive [2.1.8 Edit application]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |appValue                       |detailName       |\n|Application name |mamax-Appdf                    |Application Name |\n|Redirect URI     |https://oauth.ticketmaster.com |Callback URL     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "appValue",
                "detailName"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "appValue",
                    "mamax-Appdf"
                  ],
                  [
                    "detailName",
                    "Application Name"
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "appValue",
                    "https://oauth.ticketmaster.com"
                  ],
                  [
                    "detailName",
                    "Callback URL"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "And open Edit App Page for the first application",
              "When clear field <appFormField> on Edit App Page",
              "And enter to the field <appFormField> value <appValue>",
              "And save changes on Edit App Page",
              "And the message App Updated! is displayed",
              "And open my Apps page",
              "And open Details tab on the application",
              "Then <detailName> have been applied on Edit App Page with value <appValue>"
            ]
          },
          "storyPath": "stories/site/pantheon/UserApps.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "appFormField",
                  "Application name"
                ],
                [
                  "appValue",
                  "mamax-Appdf"
                ],
                [
                  "detailName",
                  "Application Name"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 5202,
                    "start": 1491241886760,
                    "end": 1491241891962
                  },
                  {
                    "step": "And navigate to Pantheon LogIn page from Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                    "durationInMillis": 897,
                    "start": 1491241891963,
                    "end": 1491241892860
                  },
                  {
                    "step": "And navigate to Pantheon User Account page from LogIn page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                    "durationInMillis": 5405,
                    "start": 1491241892861,
                    "end": 1491241898266
                  }
                ]
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open my Apps page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open my Apps page",
                    "durationInMillis": 216,
                    "start": 1491241898266,
                    "end": 1491241898482
                  },
                  {
                    "step": "And open Edit App Page for the first application",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And open Edit App Page for the first application",
                    "durationInMillis": 320,
                    "start": 1491241898483,
                    "end": 1491241898803
                  },
                  {
                    "step": "When clear field <appFormField> on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When clear field ｟Application name｠ on Edit App Page",
                    "durationInMillis": 3118,
                    "start": 1491241898804,
                    "end": 1491241901922
                  },
                  {
                    "step": "And enter to the field <appFormField> value <appValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And enter to the field ｟Application name｠ value ｟mamax-Appdf｠",
                    "durationInMillis": 50,
                    "start": 1491241901923,
                    "end": 1491241901973
                  },
                  {
                    "step": "And save changes on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And save changes on Edit App Page",
                    "durationInMillis": 11906,
                    "start": 1491241901974,
                    "end": 1491241913880
                  },
                  {
                    "step": "And the message App Updated! is displayed",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And the message ｟App Updated!｠ is displayed",
                    "durationInMillis": 620,
                    "start": 1491241913881,
                    "end": 1491241914501
                  },
                  {
                    "step": "And open my Apps page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And open my Apps page",
                    "durationInMillis": 90,
                    "start": 1491241914503,
                    "end": 1491241914593
                  },
                  {
                    "step": "And open Details tab on the application",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And open Details tab on the application",
                    "durationInMillis": 159,
                    "start": 1491241914595,
                    "end": 1491241914754
                  },
                  {
                    "step": "Then <detailName> have been applied on Edit App Page with value <appValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then ｟Application Name｠ have been applied on Edit App Page with value ｟mamax-Appdf｠",
                    "durationInMillis": 138,
                    "start": 1491241914755,
                    "end": 1491241914893
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(Pantheon|Edit App) Edit app positive [2.1.8 Edit application]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|appFormField     |appValue                       |detailName       |\n|Application name |mamax-Appdf                    |Application Name |\n|Redirect URI     |https://oauth.ticketmaster.com |Callback URL     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "appFormField",
                    "appValue",
                    "detailName"
                  ],
                  "data": [
                    [
                      [
                        "appFormField",
                        "Application name"
                      ],
                      [
                        "appValue",
                        "mamax-Appdf"
                      ],
                      [
                        "detailName",
                        "Application Name"
                      ]
                    ],
                    [
                      [
                        "appFormField",
                        "Redirect URI"
                      ],
                      [
                        "appValue",
                        "https://oauth.ticketmaster.com"
                      ],
                      [
                        "detailName",
                        "Callback URL"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open my Apps page",
                  "And open Edit App Page for the first application",
                  "When clear field <appFormField> on Edit App Page",
                  "And enter to the field <appFormField> value <appValue>",
                  "And save changes on Edit App Page",
                  "And the message App Updated! is displayed",
                  "And open my Apps page",
                  "And open Details tab on the application",
                  "Then <detailName> have been applied on Edit App Page with value <appValue>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "appFormField",
                  "Redirect URI"
                ],
                [
                  "appValue",
                  "https://oauth.ticketmaster.com"
                ],
                [
                  "detailName",
                  "Callback URL"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2026,
                    "start": 1491241914958,
                    "end": 1491241916984
                  },
                  {
                    "step": "And navigate to Pantheon LogIn page from Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                    "durationInMillis": 882,
                    "start": 1491241916985,
                    "end": 1491241917867
                  },
                  {
                    "step": "And navigate to Pantheon User Account page from LogIn page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                    "durationInMillis": 3531,
                    "start": 1491241917868,
                    "end": 1491241921399
                  }
                ]
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open my Apps page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open my Apps page",
                    "durationInMillis": 193,
                    "start": 1491241921400,
                    "end": 1491241921593
                  },
                  {
                    "step": "And open Edit App Page for the first application",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And open Edit App Page for the first application",
                    "durationInMillis": 247,
                    "start": 1491241921594,
                    "end": 1491241921841
                  },
                  {
                    "step": "When clear field <appFormField> on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When clear field ｟Redirect URI｠ on Edit App Page",
                    "durationInMillis": 3543,
                    "start": 1491241921842,
                    "end": 1491241925385
                  },
                  {
                    "step": "And enter to the field <appFormField> value <appValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And enter to the field ｟Redirect URI｠ value ｟https://oauth.ticketmaster.com｠",
                    "durationInMillis": 116,
                    "start": 1491241925386,
                    "end": 1491241925502
                  },
                  {
                    "step": "And save changes on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And save changes on Edit App Page",
                    "durationInMillis": 10412,
                    "start": 1491241925502,
                    "end": 1491241935914
                  },
                  {
                    "step": "And the message App Updated! is displayed",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And the message ｟App Updated!｠ is displayed",
                    "durationInMillis": 621,
                    "start": 1491241935915,
                    "end": 1491241936536
                  },
                  {
                    "step": "And open my Apps page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And open my Apps page",
                    "durationInMillis": 89,
                    "start": 1491241936537,
                    "end": 1491241936626
                  },
                  {
                    "step": "And open Details tab on the application",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And open Details tab on the application",
                    "durationInMillis": 146,
                    "start": 1491241936626,
                    "end": 1491241936772
                  },
                  {
                    "step": "Then <detailName> have been applied on Edit App Page with value <appValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then ｟Callback URL｠ have been applied on Edit App Page with value ｟https://oauth.ticketmaster.com｠",
                    "durationInMillis": 154,
                    "start": 1491241936772,
                    "end": 1491241936926
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(Pantheon|Edit App) Edit app positive [2.1.8 Edit application]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|appFormField     |appValue                       |detailName       |\n|Application name |mamax-Appdf                    |Application Name |\n|Redirect URI     |https://oauth.ticketmaster.com |Callback URL     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "appFormField",
                    "appValue",
                    "detailName"
                  ],
                  "data": [
                    [
                      [
                        "appFormField",
                        "Application name"
                      ],
                      [
                        "appValue",
                        "mamax-Appdf"
                      ],
                      [
                        "detailName",
                        "Application Name"
                      ]
                    ],
                    [
                      [
                        "appFormField",
                        "Redirect URI"
                      ],
                      [
                        "appValue",
                        "https://oauth.ticketmaster.com"
                      ],
                      [
                        "detailName",
                        "Callback URL"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open my Apps page",
                  "And open Edit App Page for the first application",
                  "When clear field <appFormField> on Edit App Page",
                  "And enter to the field <appFormField> value <appValue>",
                  "And save changes on Edit App Page",
                  "And the message App Updated! is displayed",
                  "And open my Apps page",
                  "And open Details tab on the application",
                  "Then <detailName> have been applied on Edit App Page with value <appValue>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(Pantheon|Delete App) Delete App positive [2.1.9 Delete application]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "When delete first App",
              "Then the message App Deleted! is displayed",
              "And the predefined app is removed from the list of apps"
            ]
          },
          "storyPath": "stories/site/pantheon/UserApps.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2483,
                  "start": 1491241936991,
                  "end": 1491241939474
                },
                {
                  "step": "And navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 947,
                  "start": 1491241939474,
                  "end": 1491241940421
                },
                {
                  "step": "And navigate to Pantheon User Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                  "durationInMillis": 4063,
                  "start": 1491241940422,
                  "end": 1491241944485
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491241944486,
                  "end": 1491241944486
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open my Apps page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open my Apps page",
                  "durationInMillis": 195,
                  "start": 1491241944487,
                  "end": 1491241944682
                },
                {
                  "step": "When delete first App",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When delete first App",
                  "durationInMillis": 11344,
                  "start": 1491241944683,
                  "end": 1491241956027
                },
                {
                  "step": "Then the message App Deleted! is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟App Deleted!｠ is displayed",
                  "durationInMillis": 630,
                  "start": 1491241956028,
                  "end": 1491241956658
                },
                {
                  "step": "And the predefined app is removed from the list of apps",
                  "type": "FAILED",
                  "throwable": {
                    "detailMessage": "And the predefined app is removed from the list of apps",
                    "cause": {
                      "@class": "java.lang.AssertionError",
                      "stackTrace": [
                        "org.junit.Assert.fail(Assert.java:86)",
                        "org.junit.Assert.assertTrue(Assert.java:41)",
                        "org.junit.Assert.assertFalse(Assert.java:64)",
                        "org.junit.Assert.assertFalse(Assert.java:74)",
                        "bla.tm.steps.pantheon.UserAppsSteps.checkIsAppNotExists(UserAppsSteps.java:76)",
                        "bla.tm.steps.pantheon.UserAppsSteps$$EnhancerByCGLIB$$12fc2311.CGLIB$checkIsAppNotExists$12(<generated>)",
                        "bla.tm.steps.pantheon.UserAppsSteps$$EnhancerByCGLIB$$12fc2311$$FastClassByCGLIB$$e336c291.invoke(<generated>)",
                        "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                        "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                        "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                        "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                        "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                        "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                        "bla.tm.steps.pantheon.UserAppsSteps$$EnhancerByCGLIB$$12fc2311.checkIsAppNotExists(<generated>)",
                        "bla.tm.definitions.site.pantheon.UserAppsDefinition.appIsRemovedFromTheListOfApps(UserAppsDefinition.java:84)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ]
                    },
                    "stackTrace": [
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "8d747795-4a8d-4d52-85b7-ac4624dce620"
                  },
                  "parametrisedStep": "And the predefined app is removed from the list of apps",
                  "durationInMillis": 397,
                  "start": 1491241956661,
                  "end": 1491241957058
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 12,
                  "start": 1491241957059,
                  "end": 1491241957071
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491241957071,
                  "end": 1491241957071
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(Pantheon|Delete App) Delete App positive [2.1.9 Delete application]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open my Apps page",
                "When delete first App",
                "Then the message App Deleted! is displayed",
                "And the predefined app is removed from the list of apps"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "FAILED"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 185128,
        "start": 1491241772011,
        "end": 1491241957139
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/UserLogIn.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon User LonIn Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page"
            ]
          },
          "after": [
            {
              "steps": []
            }
          ]
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Then check general page elements for Pantheon User LogIn page"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.2 Login - Username/Email field - enter invalid username]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When login to Pantheon with invaliduserName and 1234567",
              "Then the message Sorry, unrecognized username or password. Have you forgotten your password? is displayed"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.8 Login - OpenID field - invalid OpenID]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When login to Pantheon using OpenID invalidOpenID",
              "Then the message Sorry, that is not a valid OpenID. Ensure you have spelled your ID correctly. is displayed"
            ]
          }
        ],
        "name": "UserLogIn.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon User LonIn Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Then check general page elements for Pantheon User LogIn page"
            ]
          },
          "storyPath": "stories/site/pantheon/UserLogIn.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 4093,
                  "start": 1491241957714,
                  "end": 1491241961807
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 989,
                  "start": 1491241961808,
                  "end": 1491241962797
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241962797,
                  "end": 1491241962798
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Then check general page elements for Pantheon User LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon User LogIn page",
                  "durationInMillis": 20228,
                  "start": 1491241962798,
                  "end": 1491241983026
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1491241983027,
                  "end": 1491241983051
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241983051,
                  "end": 1491241983052
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Then check general page elements for Pantheon User LogIn page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.2 Login - Username/Email field - enter invalid username]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When login to Pantheon with invaliduserName and 1234567",
              "Then the message Sorry, unrecognized username or password. Have you forgotten your password? is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/UserLogIn.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2155,
                  "start": 1491241983122,
                  "end": 1491241985277
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1220,
                  "start": 1491241985277,
                  "end": 1491241986497
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491241986498,
                  "end": 1491241986498
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When login to Pantheon with invaliduserName and 1234567",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When login to Pantheon with ｟invaliduserName｠ and ｟1234567｠",
                  "durationInMillis": 648,
                  "start": 1491241986499,
                  "end": 1491241987147
                },
                {
                  "step": "Then the message Sorry, unrecognized username or password. Have you forgotten your password? is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟Sorry, unrecognized username or password. Have you forgotten your password?｠ is displayed",
                  "durationInMillis": 360,
                  "start": 1491241987148,
                  "end": 1491241987508
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 29,
                  "start": 1491241987508,
                  "end": 1491241987537
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241987537,
                  "end": 1491241987538
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.2 Login - Username/Email field - enter invalid username]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When login to Pantheon with invaliduserName and 1234567",
                "Then the message Sorry, unrecognized username or password. Have you forgotten your password? is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.8 Login - OpenID field - invalid OpenID]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When login to Pantheon using OpenID invalidOpenID",
              "Then the message Sorry, that is not a valid OpenID. Ensure you have spelled your ID correctly. is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/UserLogIn.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2191,
                  "start": 1491241987603,
                  "end": 1491241989794
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 945,
                  "start": 1491241989794,
                  "end": 1491241990739
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241990739,
                  "end": 1491241990740
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When login to Pantheon using OpenID invalidOpenID",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When login to Pantheon using OpenID ｟invalidOpenID｠",
                  "durationInMillis": 754,
                  "start": 1491241990740,
                  "end": 1491241991494
                },
                {
                  "step": "Then the message Sorry, that is not a valid OpenID. Ensure you have spelled your ID correctly. is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟Sorry, that is not a valid OpenID. Ensure you have spelled your ID correctly.｠ is displayed",
                  "durationInMillis": 361,
                  "start": 1491241991494,
                  "end": 1491241991855
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 19,
                  "start": 1491241991855,
                  "end": 1491241991874
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241991874,
                  "end": 1491241991875
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.8 Login - OpenID field - invalid OpenID]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When login to Pantheon using OpenID invalidOpenID",
                "Then the message Sorry, that is not a valid OpenID. Ensure you have spelled your ID correctly. is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 34227,
        "start": 1491241957713,
        "end": 1491241991940
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Partners Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partners page",
              "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "Partners.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Partners Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partners page",
              "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/partners/Partners.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491241991942,
                  "end": 1491241991943
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Partners page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Partners page",
                  "durationInMillis": 5419,
                  "start": 1491241991943,
                  "end": 1491241997362
                },
                {
                  "step": "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 20209,
                  "start": 1491241997363,
                  "end": 1491242017572
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 30,
                  "start": 1491242017573,
                  "end": 1491242017603
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242017603,
                  "end": 1491242017603
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Partners page",
                "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 25729,
        "start": 1491241991942,
        "end": 1491242017671
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_CertifiedPartners.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Certified Partners Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/certified-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Certified Partners page",
              "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_CertifiedPartners.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Certified Partners Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/certified-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Certified Partners page",
              "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_CertifiedPartners.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242017675,
                  "end": 1491242017676
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Certified Partners page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Certified Partners page",
                  "durationInMillis": 2184,
                  "start": 1491242017676,
                  "end": 1491242019860
                },
                {
                  "step": "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Certified Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10271,
                  "start": 1491242019861,
                  "end": 1491242030132
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25,
                  "start": 1491242030133,
                  "end": 1491242030158
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242030158,
                  "end": 1491242030159
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/certified-partners/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Certified Partners page",
                "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 12547,
        "start": 1491242017674,
        "end": 1491242030221
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_DistributionPartners.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Distribution Partners Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/distribution-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Distribution Partners page",
              "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_DistributionPartners.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Distribution Partners Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/distribution-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Distribution Partners page",
              "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_DistributionPartners.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242030224,
                  "end": 1491242030225
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Distribution Partners page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Distribution Partners page",
                  "durationInMillis": 3481,
                  "start": 1491242030225,
                  "end": 1491242033706
                },
                {
                  "step": "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Distribution Partners Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 636,
                  "start": 1491242033707,
                  "end": 1491242034343
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25,
                  "start": 1491242034344,
                  "end": 1491242034369
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242034369,
                  "end": 1491242034369
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/distribution-partners/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Distribution Partners page",
                "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4207,
        "start": 1491242030224,
        "end": 1491242034431
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_Nexus.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Join The Nexus Program Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Join The Nexus Program page",
              "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_Nexus.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Join The Nexus Program Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Join The Nexus Program page",
              "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_Nexus.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242034433,
                  "end": 1491242034434
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Join The Nexus Program page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Join The Nexus Program page",
                  "durationInMillis": 3701,
                  "start": 1491242034434,
                  "end": 1491242038135
                },
                {
                  "step": "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Join The Nexus Program Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 233,
                  "start": 1491242038135,
                  "end": 1491242038368
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 45,
                  "start": 1491242038369,
                  "end": 1491242038414
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242038414,
                  "end": 1491242038414
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Join The Nexus Program page",
                "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4044,
        "start": 1491242034433,
        "end": 1491242038477
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_StartupsDevelopers.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Startups and Developers Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/startups-and-developers/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Startups and Developers page",
              "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_StartupsDevelopers.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Startups and Developers Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/startups-and-developers/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Startups and Developers page",
              "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_StartupsDevelopers.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242038480,
                  "end": 1491242038480
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Startups and Developers page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Startups and Developers page",
                  "durationInMillis": 5190,
                  "start": 1491242038480,
                  "end": 1491242043670
                },
                {
                  "step": "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Startups and Developers Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 987,
                  "start": 1491242043671,
                  "end": 1491242044658
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 29,
                  "start": 1491242044659,
                  "end": 1491242044688
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242044688,
                  "end": 1491242044689
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/startups-and-developers/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Startups and Developers page",
                "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 6273,
        "start": 1491242038479,
        "end": 1491242044752
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Products and Docs Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Products and Docs page",
              "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "PD.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Products and Docs Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Products and Docs page",
              "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242044755,
                  "end": 1491242044756
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Products and Docs page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Products and Docs page",
                  "durationInMillis": 2704,
                  "start": 1491242044756,
                  "end": 1491242047460
                },
                {
                  "step": "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Products and Docs Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 40346,
                  "start": 1491242047461,
                  "end": 1491242087807
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21,
                  "start": 1491242087808,
                  "end": 1491242087829
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 9,
                  "start": 1491242087829,
                  "end": 1491242087838
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Products and Docs page",
                "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 43154,
        "start": 1491242044754,
        "end": 1491242087908
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_APIExplorer.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test API Explorer Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
            ]
          }
        ],
        "name": "PD_APIExplorer.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test API Explorer Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_APIExplorer.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242087911,
                  "end": 1491242087911
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open API Explorer page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open API Explorer page",
                  "durationInMillis": 5460,
                  "start": 1491242087911,
                  "end": 1491242093371
                },
                {
                  "step": "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for API Explorer Page, where DISQUS = ｟true｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 10378,
                  "start": 1491242093372,
                  "end": 1491242103750
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25,
                  "start": 1491242103750,
                  "end": 1491242103775
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242103775,
                  "end": 1491242103775
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/api-explorer/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open API Explorer page",
                "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 15928,
        "start": 1491242087910,
        "end": 1491242103838
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_APIExplorer_V2.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test API Explorer Page V2 of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/api-explorer/v2) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "Then check general page elements for API Explorer V2 Page, where DISQUS = true and LeftMenu = false"
            ]
          },
          {
            "title": "(/api-explorer/v2) Open Graph support [1.1.51 Verify tags are present in source code]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|tag            |\n|og:title       |\n|og:url         |\n|og:site_name   |\n|og:image       |\n|og:image:type  |\n|og:image:width |\n|og:image:height|",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "tag"
              ],
              "data": [
                [
                  [
                    "tag",
                    "og:title"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:url"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:site_name"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:type"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:width"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:height"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "Then check <tag> is present in the source code page"
            ]
          },
          {
            "title": "(/api-explorer/v2) [5.2.2 API Explorer V2 : The parameters section is opened]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|apiGetMethod              |\n|Get Event Details         |\n|Get Event Images          |\n|Get Attraction Details    |\n|Get Classification Details|\n|Get Venue Details         |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "apiGetMethod"
              ],
              "data": [
                [
                  [
                    "apiGetMethod",
                    "Get Event Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Event Images"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Attraction Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Classification Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Venue Details"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "When I choose <apiGetMethod> to send request",
              "And click GET button",
              "Then the parameters section is opened",
              "And error notification is shown on required fields"
            ]
          },
          {
            "title": "(/api-explorer/v2) [5.2.3 API Explorer V2 : The request list contains url and block]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|apiGetMethod              |\n|Event Search             |\n|Attraction Search        |\n|Classification Search    |\n|Venue Search             |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "apiGetMethod"
              ],
              "data": [
                [
                  [
                    "apiGetMethod",
                    "Event Search"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Attraction Search"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Classification Search"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Venue Search"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "When I choose <apiGetMethod> to send request",
              "And click GET button",
              "Then the request list contains url",
              "And the request list contains response block"
            ]
          }
        ],
        "name": "PD_APIExplorer_V2.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test API Explorer Page V2 of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/api-explorer/v2) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "Then check general page elements for API Explorer V2 Page, where DISQUS = true and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_APIExplorer_V2.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242103841,
                  "end": 1491242103841
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open API Explorer V2 page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open API Explorer V2 page",
                  "durationInMillis": 8535,
                  "start": 1491242103841,
                  "end": 1491242112376
                },
                {
                  "step": "Then check general page elements for API Explorer V2 Page, where DISQUS = true and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for API Explorer V2 Page, where DISQUS = ｟true｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 10312,
                  "start": 1491242112377,
                  "end": 1491242122689
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23,
                  "start": 1491242122690,
                  "end": 1491242122713
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242122713,
                  "end": 1491242122713
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/api-explorer/v2) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open API Explorer V2 page",
                "Then check general page elements for API Explorer V2 Page, where DISQUS = true and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/api-explorer/v2) Open Graph support [1.1.51 Verify tags are present in source code]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|tag            |\n|og:title       |\n|og:url         |\n|og:site_name   |\n|og:image       |\n|og:image:type  |\n|og:image:width |\n|og:image:height|",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "tag"
              ],
              "data": [
                [
                  [
                    "tag",
                    "og:title"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:url"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:site_name"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:type"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:width"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:height"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "Then check <tag> is present in the source code page"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_APIExplorer_V2.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "tag",
                  "og:title"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open API Explorer V2 page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open API Explorer V2 page",
                    "durationInMillis": 3970,
                    "start": 1491242122778,
                    "end": 1491242126748
                  },
                  {
                    "step": "Then check <tag> is present in the source code page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check ｟og:title｠ is present in the source code page",
                    "durationInMillis": 208,
                    "start": 1491242126748,
                    "end": 1491242126956
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/api-explorer/v2) Open Graph support [1.1.51 Verify tags are present in source code]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|tag            |\n|og:title       |\n|og:url         |\n|og:site_name   |\n|og:image       |\n|og:image:type  |\n|og:image:width |\n|og:image:height|",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "tag"
                  ],
                  "data": [
                    [
                      [
                        "tag",
                        "og:title"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:url"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:site_name"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:type"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:width"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:height"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open API Explorer V2 page",
                  "Then check <tag> is present in the source code page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "tag",
                  "og:url"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open API Explorer V2 page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open API Explorer V2 page",
                    "durationInMillis": 2904,
                    "start": 1491242127024,
                    "end": 1491242129928
                  },
                  {
                    "step": "Then check <tag> is present in the source code page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check ｟og:url｠ is present in the source code page",
                    "durationInMillis": 124,
                    "start": 1491242129928,
                    "end": 1491242130052
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/api-explorer/v2) Open Graph support [1.1.51 Verify tags are present in source code]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|tag            |\n|og:title       |\n|og:url         |\n|og:site_name   |\n|og:image       |\n|og:image:type  |\n|og:image:width |\n|og:image:height|",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "tag"
                  ],
                  "data": [
                    [
                      [
                        "tag",
                        "og:title"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:url"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:site_name"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:type"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:width"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:height"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open API Explorer V2 page",
                  "Then check <tag> is present in the source code page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "tag",
                  "og:site_name"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open API Explorer V2 page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open API Explorer V2 page",
                    "durationInMillis": 3597,
                    "start": 1491242130115,
                    "end": 1491242133712
                  },
                  {
                    "step": "Then check <tag> is present in the source code page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check ｟og:site_name｠ is present in the source code page",
                    "durationInMillis": 190,
                    "start": 1491242133713,
                    "end": 1491242133903
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/api-explorer/v2) Open Graph support [1.1.51 Verify tags are present in source code]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|tag            |\n|og:title       |\n|og:url         |\n|og:site_name   |\n|og:image       |\n|og:image:type  |\n|og:image:width |\n|og:image:height|",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "tag"
                  ],
                  "data": [
                    [
                      [
                        "tag",
                        "og:title"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:url"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:site_name"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:type"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:width"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:height"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open API Explorer V2 page",
                  "Then check <tag> is present in the source code page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "tag",
                  "og:image"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open API Explorer V2 page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open API Explorer V2 page",
                    "durationInMillis": 7368,
                    "start": 1491242134048,
                    "end": 1491242141416
                  },
                  {
                    "step": "Then check <tag> is present in the source code page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check ｟og:image｠ is present in the source code page",
                    "durationInMillis": 45,
                    "start": 1491242141417,
                    "end": 1491242141462
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/api-explorer/v2) Open Graph support [1.1.51 Verify tags are present in source code]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|tag            |\n|og:title       |\n|og:url         |\n|og:site_name   |\n|og:image       |\n|og:image:type  |\n|og:image:width |\n|og:image:height|",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "tag"
                  ],
                  "data": [
                    [
                      [
                        "tag",
                        "og:title"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:url"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:site_name"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:type"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:width"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:height"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open API Explorer V2 page",
                  "Then check <tag> is present in the source code page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "tag",
                  "og:image:type"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open API Explorer V2 page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open API Explorer V2 page",
                    "durationInMillis": 8094,
                    "start": 1491242141524,
                    "end": 1491242149618
                  },
                  {
                    "step": "Then check <tag> is present in the source code page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check ｟og:image:type｠ is present in the source code page",
                    "durationInMillis": 48,
                    "start": 1491242149619,
                    "end": 1491242149667
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/api-explorer/v2) Open Graph support [1.1.51 Verify tags are present in source code]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|tag            |\n|og:title       |\n|og:url         |\n|og:site_name   |\n|og:image       |\n|og:image:type  |\n|og:image:width |\n|og:image:height|",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "tag"
                  ],
                  "data": [
                    [
                      [
                        "tag",
                        "og:title"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:url"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:site_name"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:type"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:width"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:height"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open API Explorer V2 page",
                  "Then check <tag> is present in the source code page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "tag",
                  "og:image:width"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open API Explorer V2 page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open API Explorer V2 page",
                    "durationInMillis": 4362,
                    "start": 1491242149735,
                    "end": 1491242154097
                  },
                  {
                    "step": "Then check <tag> is present in the source code page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check ｟og:image:width｠ is present in the source code page",
                    "durationInMillis": 52,
                    "start": 1491242154098,
                    "end": 1491242154150
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/api-explorer/v2) Open Graph support [1.1.51 Verify tags are present in source code]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|tag            |\n|og:title       |\n|og:url         |\n|og:site_name   |\n|og:image       |\n|og:image:type  |\n|og:image:width |\n|og:image:height|",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "tag"
                  ],
                  "data": [
                    [
                      [
                        "tag",
                        "og:title"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:url"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:site_name"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:type"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:width"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:height"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open API Explorer V2 page",
                  "Then check <tag> is present in the source code page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "tag",
                  "og:image:height"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open API Explorer V2 page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open API Explorer V2 page",
                    "durationInMillis": 3607,
                    "start": 1491242154213,
                    "end": 1491242157820
                  },
                  {
                    "step": "Then check <tag> is present in the source code page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check ｟og:image:height｠ is present in the source code page",
                    "durationInMillis": 214,
                    "start": 1491242157821,
                    "end": 1491242158035
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/api-explorer/v2) Open Graph support [1.1.51 Verify tags are present in source code]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|tag            |\n|og:title       |\n|og:url         |\n|og:site_name   |\n|og:image       |\n|og:image:type  |\n|og:image:width |\n|og:image:height|",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "tag"
                  ],
                  "data": [
                    [
                      [
                        "tag",
                        "og:title"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:url"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:site_name"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:type"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:width"
                      ]
                    ],
                    [
                      [
                        "tag",
                        "og:image:height"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open API Explorer V2 page",
                  "Then check <tag> is present in the source code page"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/api-explorer/v2) [5.2.2 API Explorer V2 : The parameters section is opened]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|apiGetMethod              |\n|Get Event Details         |\n|Get Event Images          |\n|Get Attraction Details    |\n|Get Classification Details|\n|Get Venue Details         |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "apiGetMethod"
              ],
              "data": [
                [
                  [
                    "apiGetMethod",
                    "Get Event Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Event Images"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Attraction Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Classification Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Venue Details"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "When I choose <apiGetMethod> to send request",
              "And click GET button",
              "Then the parameters section is opened",
              "And error notification is shown on required fields"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_APIExplorer_V2.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "apiGetMethod",
                  "Get Event Details"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open API Explorer V2 page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open API Explorer V2 page",
                    "durationInMillis": 4368,
                    "start": 1491242158199,
                    "end": 1491242162567
                  },
                  {
                    "step": "When I choose <apiGetMethod> to send request",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When I choose ｟Get Event Details｠ to send request",
                    "durationInMillis": 338,
                    "start": 1491242162568,
                    "end": 1491242162906
                  },
                  {
                    "step": "And click GET button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And click GET button",
                    "durationInMillis": 210,
                    "start": 1491242162907,
                    "end": 1491242163117
                  },
                  {
                    "step": "Then the parameters section is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the parameters section is opened",
                    "durationInMillis": 285,
                    "start": 1491242163118,
                    "end": 1491242163403
                  },
                  {
                    "step": "And error notification is shown on required fields",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And error notification is shown on required fields",
                    "durationInMillis": 25,
                    "start": 1491242163403,
                    "end": 1491242163428
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/api-explorer/v2) [5.2.2 API Explorer V2 : The parameters section is opened]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|apiGetMethod              |\n|Get Event Details         |\n|Get Event Images          |\n|Get Attraction Details    |\n|Get Classification Details|\n|Get Venue Details         |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "apiGetMethod"
                  ],
                  "data": [
                    [
                      [
                        "apiGetMethod",
                        "Get Event Details"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Event Images"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Attraction Details"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Classification Details"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Venue Details"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open API Explorer V2 page",
                  "When I choose <apiGetMethod> to send request",
                  "And click GET button",
                  "Then the parameters section is opened",
                  "And error notification is shown on required fields"
                ]
              }
            },
            {
              "parameters": [
                [
                  "apiGetMethod",
                  "Get Event Images"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open API Explorer V2 page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open API Explorer V2 page",
                    "durationInMillis": 2891,
                    "start": 1491242163489,
                    "end": 1491242166380
                  },
                  {
                    "step": "When I choose <apiGetMethod> to send request",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When I choose ｟Get Event Images｠ to send request",
                    "durationInMillis": 515,
                    "start": 1491242166381,
                    "end": 1491242166896
                  },
                  {
                    "step": "And click GET button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And click GET button",
                    "durationInMillis": 245,
                    "start": 1491242166897,
                    "end": 1491242167142
                  },
                  {
                    "step": "Then the parameters section is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the parameters section is opened",
                    "durationInMillis": 284,
                    "start": 1491242167142,
                    "end": 1491242167426
                  },
                  {
                    "step": "And error notification is shown on required fields",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And error notification is shown on required fields",
                    "durationInMillis": 26,
                    "start": 1491242167427,
                    "end": 1491242167453
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/api-explorer/v2) [5.2.2 API Explorer V2 : The parameters section is opened]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|apiGetMethod              |\n|Get Event Details         |\n|Get Event Images          |\n|Get Attraction Details    |\n|Get Classification Details|\n|Get Venue Details         |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "apiGetMethod"
                  ],
                  "data": [
                    [
                      [
                        "apiGetMethod",
                        "Get Event Details"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Event Images"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Attraction Details"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Classification Details"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Venue Details"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open API Explorer V2 page",
                  "When I choose <apiGetMethod> to send request",
                  "And click GET button",
                  "Then the parameters section is opened",
                  "And error notification is shown on required fields"
                ]
              }
            },
            {
              "parameters": [
                [
                  "apiGetMethod",
                  "Get Attraction Details"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open API Explorer V2 page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open API Explorer V2 page",
                    "durationInMillis": 3590,
                    "start": 1491242167515,
                    "end": 1491242171105
                  },
                  {
                    "step": "When I choose <apiGetMethod> to send request",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When I choose ｟Get Attraction Details｠ to send request",
                    "durationInMillis": 389,
                    "start": 1491242171105,
                    "end": 1491242171494
                  },
                  {
                    "step": "And click GET button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And click GET button",
                    "durationInMillis": 291,
                    "start": 1491242171495,
                    "end": 1491242171786
                  },
                  {
                    "step": "Then the parameters section is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the parameters section is opened",
                    "durationInMillis": 284,
                    "start": 1491242171787,
                    "end": 1491242172071
                  },
                  {
                    "step": "And error notification is shown on required fields",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And error notification is shown on required fields",
                    "durationInMillis": 21,
                    "start": 1491242172072,
                    "end": 1491242172093
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/api-explorer/v2) [5.2.2 API Explorer V2 : The parameters section is opened]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|apiGetMethod              |\n|Get Event Details         |\n|Get Event Images          |\n|Get Attraction Details    |\n|Get Classification Details|\n|Get Venue Details         |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "apiGetMethod"
                  ],
                  "data": [
                    [
                      [
                        "apiGetMethod",
                        "Get Event Details"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Event Images"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Attraction Details"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Classification Details"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Venue Details"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open API Explorer V2 page",
                  "When I choose <apiGetMethod> to send request",
                  "And click GET button",
                  "Then the parameters section is opened",
                  "And error notification is shown on required fields"
                ]
              }
            },
            {
              "parameters": [
                [
                  "apiGetMethod",
                  "Get Classification Details"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open API Explorer V2 page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open API Explorer V2 page",
                    "durationInMillis": 6185,
                    "start": 1491242172154,
                    "end": 1491242178339
                  },
                  {
                    "step": "When I choose <apiGetMethod> to send request",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When I choose ｟Get Classification Details｠ to send request",
                    "durationInMillis": 276,
                    "start": 1491242178340,
                    "end": 1491242178616
                  },
                  {
                    "step": "And click GET button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And click GET button",
                    "durationInMillis": 492,
                    "start": 1491242178616,
                    "end": 1491242179108
                  },
                  {
                    "step": "Then the parameters section is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the parameters section is opened",
                    "durationInMillis": 280,
                    "start": 1491242179109,
                    "end": 1491242179389
                  },
                  {
                    "step": "And error notification is shown on required fields",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And error notification is shown on required fields",
                    "durationInMillis": 29,
                    "start": 1491242179390,
                    "end": 1491242179419
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/api-explorer/v2) [5.2.2 API Explorer V2 : The parameters section is opened]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|apiGetMethod              |\n|Get Event Details         |\n|Get Event Images          |\n|Get Attraction Details    |\n|Get Classification Details|\n|Get Venue Details         |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "apiGetMethod"
                  ],
                  "data": [
                    [
                      [
                        "apiGetMethod",
                        "Get Event Details"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Event Images"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Attraction Details"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Classification Details"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Venue Details"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open API Explorer V2 page",
                  "When I choose <apiGetMethod> to send request",
                  "And click GET button",
                  "Then the parameters section is opened",
                  "And error notification is shown on required fields"
                ]
              }
            },
            {
              "parameters": [
                [
                  "apiGetMethod",
                  "Get Venue Details"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open API Explorer V2 page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open API Explorer V2 page",
                    "durationInMillis": 6048,
                    "start": 1491242179482,
                    "end": 1491242185530
                  },
                  {
                    "step": "When I choose <apiGetMethod> to send request",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When I choose ｟Get Venue Details｠ to send request",
                    "durationInMillis": 357,
                    "start": 1491242185531,
                    "end": 1491242185888
                  },
                  {
                    "step": "And click GET button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And click GET button",
                    "durationInMillis": 236,
                    "start": 1491242185889,
                    "end": 1491242186125
                  },
                  {
                    "step": "Then the parameters section is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the parameters section is opened",
                    "durationInMillis": 309,
                    "start": 1491242186126,
                    "end": 1491242186435
                  },
                  {
                    "step": "And error notification is shown on required fields",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And error notification is shown on required fields",
                    "durationInMillis": 31,
                    "start": 1491242186435,
                    "end": 1491242186466
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/api-explorer/v2) [5.2.2 API Explorer V2 : The parameters section is opened]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|apiGetMethod              |\n|Get Event Details         |\n|Get Event Images          |\n|Get Attraction Details    |\n|Get Classification Details|\n|Get Venue Details         |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "apiGetMethod"
                  ],
                  "data": [
                    [
                      [
                        "apiGetMethod",
                        "Get Event Details"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Event Images"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Attraction Details"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Classification Details"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Get Venue Details"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open API Explorer V2 page",
                  "When I choose <apiGetMethod> to send request",
                  "And click GET button",
                  "Then the parameters section is opened",
                  "And error notification is shown on required fields"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/api-explorer/v2) [5.2.3 API Explorer V2 : The request list contains url and block]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|apiGetMethod              |\n|Event Search             |\n|Attraction Search        |\n|Classification Search    |\n|Venue Search             |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "apiGetMethod"
              ],
              "data": [
                [
                  [
                    "apiGetMethod",
                    "Event Search"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Attraction Search"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Classification Search"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Venue Search"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "When I choose <apiGetMethod> to send request",
              "And click GET button",
              "Then the request list contains url",
              "And the request list contains response block"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_APIExplorer_V2.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "apiGetMethod",
                  "Event Search"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open API Explorer V2 page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open API Explorer V2 page",
                    "durationInMillis": 4385,
                    "start": 1491242186530,
                    "end": 1491242190915
                  },
                  {
                    "step": "When I choose <apiGetMethod> to send request",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When I choose ｟Event Search｠ to send request",
                    "durationInMillis": 778,
                    "start": 1491242190916,
                    "end": 1491242191694
                  },
                  {
                    "step": "And click GET button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And click GET button",
                    "durationInMillis": 261,
                    "start": 1491242191694,
                    "end": 1491242191955
                  },
                  {
                    "step": "Then the request list contains url",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the request list contains url",
                    "durationInMillis": 2469,
                    "start": 1491242191955,
                    "end": 1491242194424
                  },
                  {
                    "step": "And the request list contains response block",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And the request list contains response block",
                    "durationInMillis": 671,
                    "start": 1491242194425,
                    "end": 1491242195096
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/api-explorer/v2) [5.2.3 API Explorer V2 : The request list contains url and block]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|apiGetMethod              |\n|Event Search             |\n|Attraction Search        |\n|Classification Search    |\n|Venue Search             |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "apiGetMethod"
                  ],
                  "data": [
                    [
                      [
                        "apiGetMethod",
                        "Event Search"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Attraction Search"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Classification Search"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Venue Search"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open API Explorer V2 page",
                  "When I choose <apiGetMethod> to send request",
                  "And click GET button",
                  "Then the request list contains url",
                  "And the request list contains response block"
                ]
              }
            },
            {
              "parameters": [
                [
                  "apiGetMethod",
                  "Attraction Search"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open API Explorer V2 page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open API Explorer V2 page",
                    "durationInMillis": 3534,
                    "start": 1491242195161,
                    "end": 1491242198695
                  },
                  {
                    "step": "When I choose <apiGetMethod> to send request",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When I choose ｟Attraction Search｠ to send request",
                    "durationInMillis": 147,
                    "start": 1491242198696,
                    "end": 1491242198843
                  },
                  {
                    "step": "And click GET button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And click GET button",
                    "durationInMillis": 290,
                    "start": 1491242198846,
                    "end": 1491242199136
                  },
                  {
                    "step": "Then the request list contains url",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the request list contains url",
                    "durationInMillis": 1245,
                    "start": 1491242199137,
                    "end": 1491242200382
                  },
                  {
                    "step": "And the request list contains response block",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And the request list contains response block",
                    "durationInMillis": 125,
                    "start": 1491242200383,
                    "end": 1491242200508
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/api-explorer/v2) [5.2.3 API Explorer V2 : The request list contains url and block]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|apiGetMethod              |\n|Event Search             |\n|Attraction Search        |\n|Classification Search    |\n|Venue Search             |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "apiGetMethod"
                  ],
                  "data": [
                    [
                      [
                        "apiGetMethod",
                        "Event Search"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Attraction Search"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Classification Search"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Venue Search"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open API Explorer V2 page",
                  "When I choose <apiGetMethod> to send request",
                  "And click GET button",
                  "Then the request list contains url",
                  "And the request list contains response block"
                ]
              }
            },
            {
              "parameters": [
                [
                  "apiGetMethod",
                  "Classification Search"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open API Explorer V2 page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open API Explorer V2 page",
                    "durationInMillis": 3341,
                    "start": 1491242200572,
                    "end": 1491242203913
                  },
                  {
                    "step": "When I choose <apiGetMethod> to send request",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When I choose ｟Classification Search｠ to send request",
                    "durationInMillis": 596,
                    "start": 1491242203914,
                    "end": 1491242204510
                  },
                  {
                    "step": "And click GET button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And click GET button",
                    "durationInMillis": 194,
                    "start": 1491242204511,
                    "end": 1491242204705
                  },
                  {
                    "step": "Then the request list contains url",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the request list contains url",
                    "durationInMillis": 4081,
                    "start": 1491242204706,
                    "end": 1491242208787
                  },
                  {
                    "step": "And the request list contains response block",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And the request list contains response block",
                    "durationInMillis": 404,
                    "start": 1491242208788,
                    "end": 1491242209192
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/api-explorer/v2) [5.2.3 API Explorer V2 : The request list contains url and block]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|apiGetMethod              |\n|Event Search             |\n|Attraction Search        |\n|Classification Search    |\n|Venue Search             |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "apiGetMethod"
                  ],
                  "data": [
                    [
                      [
                        "apiGetMethod",
                        "Event Search"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Attraction Search"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Classification Search"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Venue Search"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open API Explorer V2 page",
                  "When I choose <apiGetMethod> to send request",
                  "And click GET button",
                  "Then the request list contains url",
                  "And the request list contains response block"
                ]
              }
            },
            {
              "parameters": [
                [
                  "apiGetMethod",
                  "Venue Search"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open API Explorer V2 page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open API Explorer V2 page",
                    "durationInMillis": 8777,
                    "start": 1491242209304,
                    "end": 1491242218081
                  },
                  {
                    "step": "When I choose <apiGetMethod> to send request",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When I choose ｟Venue Search｠ to send request",
                    "durationInMillis": 463,
                    "start": 1491242218082,
                    "end": 1491242218545
                  },
                  {
                    "step": "And click GET button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And click GET button",
                    "durationInMillis": 392,
                    "start": 1491242218546,
                    "end": 1491242218938
                  },
                  {
                    "step": "Then the request list contains url",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the request list contains url",
                    "durationInMillis": 1536,
                    "start": 1491242218939,
                    "end": 1491242220475
                  },
                  {
                    "step": "And the request list contains response block",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And the request list contains response block",
                    "durationInMillis": 94,
                    "start": 1491242220476,
                    "end": 1491242220570
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/api-explorer/v2) [5.2.3 API Explorer V2 : The request list contains url and block]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|apiGetMethod              |\n|Event Search             |\n|Attraction Search        |\n|Classification Search    |\n|Venue Search             |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "apiGetMethod"
                  ],
                  "data": [
                    [
                      [
                        "apiGetMethod",
                        "Event Search"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Attraction Search"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Classification Search"
                      ]
                    ],
                    [
                      [
                        "apiGetMethod",
                        "Venue Search"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open API Explorer V2 page",
                  "When I choose <apiGetMethod> to send request",
                  "And click GET button",
                  "Then the request list contains url",
                  "And the request list contains response block"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 116793,
        "start": 1491242103840,
        "end": 1491242220633
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_ChangeLog.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test ChangeLog Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open ChangeLog page",
              "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_ChangeLog.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test ChangeLog Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open ChangeLog page",
              "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_ChangeLog.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242220635,
                  "end": 1491242220636
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open ChangeLog page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open ChangeLog page",
                  "durationInMillis": 4007,
                  "start": 1491242220636,
                  "end": 1491242224643
                },
                {
                  "step": "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for ChangeLog Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 176,
                  "start": 1491242224644,
                  "end": 1491242224820
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21,
                  "start": 1491242224820,
                  "end": 1491242224841
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242224841,
                  "end": 1491242224841
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open ChangeLog page",
                "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4278,
        "start": 1491242220635,
        "end": 1491242224913
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_CommerceAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Commerce API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_CommerceAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Commerce API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_CommerceAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242224917,
                  "end": 1491242224918
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Commerce API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Commerce API page",
                  "durationInMillis": 4406,
                  "start": 1491242224918,
                  "end": 1491242229324
                },
                {
                  "step": "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Commerce API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 880,
                  "start": 1491242229325,
                  "end": 1491242230205
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21,
                  "start": 1491242230205,
                  "end": 1491242230226
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242230226,
                  "end": 1491242230227
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Commerce API page",
                "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5373,
        "start": 1491242224916,
        "end": 1491242230289
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_DiscoveryAPIV1.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Discovery API v1 Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/discovery-api/v1/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_DiscoveryAPIV1.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Discovery API v1 Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/discovery-api/v1/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV1.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242230291,
                  "end": 1491242230292
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Discovery API v1 page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Discovery API v1 page",
                  "durationInMillis": 3668,
                  "start": 1491242230292,
                  "end": 1491242233960
                },
                {
                  "step": "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Discovery API v1 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 861,
                  "start": 1491242233960,
                  "end": 1491242234821
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 31,
                  "start": 1491242234822,
                  "end": 1491242234853
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242234853,
                  "end": 1491242234853
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/discovery-api/v1/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Discovery API v1 page",
                "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4631,
        "start": 1491242230291,
        "end": 1491242234922
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_DiscoveryAPIV2.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Discovery API v2 Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_DiscoveryAPIV2.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Discovery API v2 Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV2.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242234926,
                  "end": 1491242234927
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Discovery API v2 page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Discovery API v2 page",
                  "durationInMillis": 4997,
                  "start": 1491242234927,
                  "end": 1491242239924
                },
                {
                  "step": "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Discovery API v2 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 2315,
                  "start": 1491242239925,
                  "end": 1491242242240
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 77,
                  "start": 1491242242241,
                  "end": 1491242242318
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242242318,
                  "end": 1491242242319
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Discovery API v2 page",
                "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 7461,
        "start": 1491242234926,
        "end": 1491242242387
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_GettingStarted.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Getting Started Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "When Commerce API menu has list of methods",
              "And open Getting Started page",
              "Then all the Commerce API methods are shown on Getting Started page"
            ]
          },
          {
            "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_GettingStarted.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Getting Started Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "When Commerce API menu has list of methods",
              "And open Getting Started page",
              "Then all the Commerce API methods are shown on Getting Started page"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242242390,
                  "end": 1491242242391
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Commerce API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Commerce API page",
                  "durationInMillis": 6807,
                  "start": 1491242242391,
                  "end": 1491242249198
                },
                {
                  "step": "When Commerce API menu has list of methods",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When Commerce API menu has list of methods",
                  "durationInMillis": 147717,
                  "start": 1491242249198,
                  "end": 1491242396915
                },
                {
                  "step": "And open Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And open Getting Started page",
                  "durationInMillis": 650,
                  "start": 1491242396916,
                  "end": 1491242397566
                },
                {
                  "step": "Then all the Commerce API methods are shown on Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then all the Commerce API methods are shown on Getting Started page",
                  "durationInMillis": 54982,
                  "start": 1491242397567,
                  "end": 1491242452549
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1077,
                  "start": 1491242452549,
                  "end": 1491242453626
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242453626,
                  "end": 1491242453627
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Commerce API page",
                "When Commerce API menu has list of methods",
                "And open Getting Started page",
                "Then all the Commerce API methods are shown on Getting Started page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242453693,
                  "end": 1491242453694
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Getting Started page",
                  "durationInMillis": 1774,
                  "start": 1491242453694,
                  "end": 1491242455468
                },
                {
                  "step": "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Getting Started Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 1388,
                  "start": 1491242455469,
                  "end": 1491242456857
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 26,
                  "start": 1491242456858,
                  "end": 1491242456884
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242456884,
                  "end": 1491242456885
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Getting Started page",
                "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 214558,
        "start": 1491242242390,
        "end": 1491242456948
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_InteractiveAPIConsole.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Interactive API Console Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": [
            {
              "@name": "NotImplemented",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/interactive-console/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Interactive API Console page",
              "Then check general page elements for Interactive API Console Page, where DISQUS = true and LeftMenu = false"
            ]
          }
        ],
        "name": "PD_InteractiveAPIConsole.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Interactive API Console Page of Ticket Master Developer's site",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0,
        "start": 0,
        "end": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_InternationalDiscoveryAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test International Discovery API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open International Discovery API page",
              "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_InternationalDiscoveryAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test International Discovery API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open International Discovery API page",
              "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_InternationalDiscoveryAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242456951,
                  "end": 1491242456952
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open International Discovery API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open International Discovery API page",
                  "durationInMillis": 4185,
                  "start": 1491242456952,
                  "end": 1491242461137
                },
                {
                  "step": "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for International Discovery API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 1600,
                  "start": 1491242461138,
                  "end": 1491242462738
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 105,
                  "start": 1491242462738,
                  "end": 1491242462843
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242462843,
                  "end": 1491242462844
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open International Discovery API page",
                "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5969,
        "start": 1491242456951,
        "end": 1491242462920
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_InventoryStatusAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Inventory Status API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Inventory Status API page",
              "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_InventoryStatusAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Inventory Status API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Inventory Status API page",
              "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_InventoryStatusAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242462924,
                  "end": 1491242462924
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Inventory Status API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Inventory Status API page",
                  "durationInMillis": 4361,
                  "start": 1491242462924,
                  "end": 1491242467285
                },
                {
                  "step": "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Inventory Status API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 360,
                  "start": 1491242467287,
                  "end": 1491242467647
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 45,
                  "start": 1491242467648,
                  "end": 1491242467693
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242467693,
                  "end": 1491242467693
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Inventory Status API page",
                "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4834,
        "start": 1491242462923,
        "end": 1491242467757
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_OauthAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Oauth API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Oauth API page",
              "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_OauthAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Oauth API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Oauth API page",
              "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_OauthAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242467760,
                  "end": 1491242467761
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Oauth API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Oauth API page",
                  "durationInMillis": 3467,
                  "start": 1491242467761,
                  "end": 1491242471228
                },
                {
                  "step": "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Oauth API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 369,
                  "start": 1491242471229,
                  "end": 1491242471598
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21,
                  "start": 1491242471598,
                  "end": 1491242471619
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242471619,
                  "end": 1491242471620
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Oauth API page",
                "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3952,
        "start": 1491242467760,
        "end": 1491242471712
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_PartnerAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Partner API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API page",
              "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_PartnerAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Partner API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API page",
              "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_PartnerAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242471715,
                  "end": 1491242471715
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Partner API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Partner API page",
                  "durationInMillis": 5164,
                  "start": 1491242471716,
                  "end": 1491242476880
                },
                {
                  "step": "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Partner API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 474,
                  "start": 1491242476881,
                  "end": 1491242477355
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 27,
                  "start": 1491242477355,
                  "end": 1491242477382
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242477382,
                  "end": 1491242477383
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Partner API page",
                "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5732,
        "start": 1491242471714,
        "end": 1491242477446
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_PublishAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Publish API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Publish API page",
              "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_PublishAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Publish API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Publish API page",
              "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_PublishAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242477448,
                  "end": 1491242477449
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Publish API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Publish API page",
                  "durationInMillis": 2533,
                  "start": 1491242477449,
                  "end": 1491242479982
                },
                {
                  "step": "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Publish API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 744,
                  "start": 1491242479983,
                  "end": 1491242480727
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 104,
                  "start": 1491242480727,
                  "end": 1491242480831
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242480831,
                  "end": 1491242480831
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Publish API page",
                "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3445,
        "start": 1491242477448,
        "end": 1491242480893
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_SDKs.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test SDK-s Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/sdks/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_SDKs.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test SDK-s Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/sdks/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242480895,
                  "end": 1491242480896
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open SDKs page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open SDKs page",
                  "durationInMillis": 2937,
                  "start": 1491242480896,
                  "end": 1491242483833
                },
                {
                  "step": "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for SDKs Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 497,
                  "start": 1491242483833,
                  "end": 1491242484330
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 57,
                  "start": 1491242484331,
                  "end": 1491242484388
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242484388,
                  "end": 1491242484388
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/sdks/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open SDKs page",
                "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "SDK-Java Image"
                ],
                [
                  "pageURL",
                  "https://github.com/ticketmaster-api/sdk-java"
                ],
                [
                  "pageTitle",
                  "//h1[@class='public ']/strong/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open SDKs page",
                    "durationInMillis": 2190,
                    "start": 1491242484459,
                    "end": 1491242486649
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟SDK-Java Image｠ element of SDKs page",
                    "durationInMillis": 1628,
                    "start": 1491242486650,
                    "end": 1491242488278
                  },
                  {
                    "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-java｠ and ｟//h1[@class='public ']/strong/a｠",
                    "durationInMillis": 1046,
                    "start": 1491242488279,
                    "end": 1491242489325
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(products-and-docs/sdks/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "SDK-Java Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-java"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-JavaScript Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-javascript"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-Scala Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-scala"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open SDKs page",
                  "When check visibility and click <elementKey> element of SDKs page",
                  "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "SDK-JavaScript Image"
                ],
                [
                  "pageURL",
                  "https://github.com/ticketmaster-api/sdk-javascript"
                ],
                [
                  "pageTitle",
                  "//h1[@class='public ']/strong/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open SDKs page",
                    "durationInMillis": 1911,
                    "start": 1491242489393,
                    "end": 1491242491304
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟SDK-JavaScript Image｠ element of SDKs page",
                    "durationInMillis": 1616,
                    "start": 1491242491305,
                    "end": 1491242492921
                  },
                  {
                    "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-javascript｠ and ｟//h1[@class='public ']/strong/a｠",
                    "durationInMillis": 1079,
                    "start": 1491242492922,
                    "end": 1491242494001
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(products-and-docs/sdks/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "SDK-Java Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-java"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-JavaScript Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-javascript"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-Scala Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-scala"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open SDKs page",
                  "When check visibility and click <elementKey> element of SDKs page",
                  "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "SDK-Scala Image"
                ],
                [
                  "pageURL",
                  "https://github.com/ticketmaster-api/sdk-scala"
                ],
                [
                  "pageTitle",
                  "//h1[@class='public ']/strong/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open SDKs page",
                    "durationInMillis": 3166,
                    "start": 1491242494069,
                    "end": 1491242497235
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟SDK-Scala Image｠ element of SDKs page",
                    "durationInMillis": 1197,
                    "start": 1491242497236,
                    "end": 1491242498433
                  },
                  {
                    "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-scala｠ and ｟//h1[@class='public ']/strong/a｠",
                    "durationInMillis": 1083,
                    "start": 1491242498434,
                    "end": 1491242499517
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(products-and-docs/sdks/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "SDK-Java Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-java"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-JavaScript Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-javascript"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-Scala Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-scala"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open SDKs page",
                  "When check visibility and click <elementKey> element of SDKs page",
                  "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 18685,
        "start": 1491242480895,
        "end": 1491242499580
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_SeasonTicketingAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Season Ticketing API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Season Ticketing API page",
              "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_SeasonTicketingAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Season Ticketing API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Season Ticketing API page",
              "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_SeasonTicketingAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242499583,
                  "end": 1491242499583
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Season Ticketing API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Season Ticketing API page",
                  "durationInMillis": 4465,
                  "start": 1491242499584,
                  "end": 1491242504049
                },
                {
                  "step": "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Season Ticketing API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 338,
                  "start": 1491242504049,
                  "end": 1491242504387
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 17,
                  "start": 1491242504388,
                  "end": 1491242504405
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242504405,
                  "end": 1491242504406
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/api-explorer/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Season Ticketing API page",
                "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4886,
        "start": 1491242499582,
        "end": 1491242504468
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_TopPicksAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Top Picks API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Top Picks API page",
              "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_TopPicksAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Top Picks API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Top Picks API page",
              "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_TopPicksAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242504470,
                  "end": 1491242504471
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Top Picks API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Top Picks API page",
                  "durationInMillis": 3711,
                  "start": 1491242504471,
                  "end": 1491242508182
                },
                {
                  "step": "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Top Picks API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 202,
                  "start": 1491242508183,
                  "end": 1491242508385
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22,
                  "start": 1491242508385,
                  "end": 1491242508407
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242508407,
                  "end": 1491242508408
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/api-explorer/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Top Picks API page",
                "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4002,
        "start": 1491242504470,
        "end": 1491242508472
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Tutorials.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242508475,
                  "end": 1491242508475
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials page",
                  "durationInMillis": 3270,
                  "start": 1491242508475,
                  "end": 1491242511745
                },
                {
                  "step": "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10245,
                  "start": 1491242511746,
                  "end": 1491242521991
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 39,
                  "start": 1491242521992,
                  "end": 1491242522031
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242522031,
                  "end": 1491242522032
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials page",
                "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 4270,
                    "start": 1491242522112,
                    "end": 1491242526382
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials page",
                    "durationInMillis": 1329,
                    "start": 1491242526383,
                    "end": 1491242527712
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 52,
                    "start": 1491242527714,
                    "end": 1491242527766
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 2131,
                    "start": 1491242527831,
                    "end": 1491242529962
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials page",
                    "durationInMillis": 1560,
                    "start": 1491242529963,
                    "end": 1491242531523
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 27,
                    "start": 1491242531523,
                    "end": 1491242531550
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 2317,
                    "start": 1491242531611,
                    "end": 1491242533928
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials page",
                    "durationInMillis": 1697,
                    "start": 1491242533928,
                    "end": 1491242535625
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 59,
                    "start": 1491242535625,
                    "end": 1491242535684
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 2147,
                    "start": 1491242535759,
                    "end": 1491242537906
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials page",
                    "durationInMillis": 3095,
                    "start": 1491242537907,
                    "end": 1491242541002
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 40,
                    "start": 1491242541003,
                    "end": 1491242541043
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 3133,
                    "start": 1491242541105,
                    "end": 1491242544238
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials page",
                    "durationInMillis": 737,
                    "start": 1491242544239,
                    "end": 1491242544976
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 2586,
                    "start": 1491242544977,
                    "end": 1491242547563
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 3017,
                    "start": 1491242547629,
                    "end": 1491242550646
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials page",
                    "durationInMillis": 716,
                    "start": 1491242550647,
                    "end": 1491242551363
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 2903,
                    "start": 1491242551363,
                    "end": 1491242554266
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 2544,
                    "start": 1491242554443,
                    "end": 1491242556987
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials page",
                    "durationInMillis": 2271,
                    "start": 1491242556988,
                    "end": 1491242559259
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 323,
                    "start": 1491242559260,
                    "end": 1491242559583
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 1723,
                    "start": 1491242559649,
                    "end": 1491242561372
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials page",
                    "durationInMillis": 1484,
                    "start": 1491242561373,
                    "end": 1491242562857
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 41,
                    "start": 1491242562858,
                    "end": 1491242562899
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 1755,
                    "start": 1491242562961,
                    "end": 1491242564716
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials page",
                    "durationInMillis": 3209,
                    "start": 1491242564717,
                    "end": 1491242567926
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 223,
                    "start": 1491242567927,
                    "end": 1491242568150
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 59779,
        "start": 1491242508474,
        "end": 1491242568253
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials EventSearch Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Tutorials_EventSearch.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials EventSearch Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242568256,
                  "end": 1491242568257
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials EventSearch page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials EventSearch page",
                  "durationInMillis": 1784,
                  "start": 1491242568257,
                  "end": 1491242570041
                },
                {
                  "step": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10195,
                  "start": 1491242570042,
                  "end": 1491242580237
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25,
                  "start": 1491242580237,
                  "end": 1491242580262
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242580262,
                  "end": 1491242580263
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials EventSearch page",
                "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 2615,
                    "start": 1491242580329,
                    "end": 1491242582944
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials EventSearch page",
                    "durationInMillis": 3834,
                    "start": 1491242582945,
                    "end": 1491242586779
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 38,
                    "start": 1491242586779,
                    "end": 1491242586817
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 3982,
                    "start": 1491242586883,
                    "end": 1491242590865
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 2160,
                    "start": 1491242590865,
                    "end": 1491242593025
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 67,
                    "start": 1491242593025,
                    "end": 1491242593092
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 2504,
                    "start": 1491242593155,
                    "end": 1491242595659
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 1426,
                    "start": 1491242595660,
                    "end": 1491242597086
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 33,
                    "start": 1491242597087,
                    "end": 1491242597120
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 1693,
                    "start": 1491242597180,
                    "end": 1491242598873
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials EventSearch page",
                    "durationInMillis": 1453,
                    "start": 1491242598874,
                    "end": 1491242600327
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 40,
                    "start": 1491242600327,
                    "end": 1491242600367
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 3446,
                    "start": 1491242600427,
                    "end": 1491242603873
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 1725,
                    "start": 1491242603874,
                    "end": 1491242605599
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 285,
                    "start": 1491242605599,
                    "end": 1491242605884
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 1798,
                    "start": 1491242605951,
                    "end": 1491242607749
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 1664,
                    "start": 1491242607750,
                    "end": 1491242609414
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 413,
                    "start": 1491242609416,
                    "end": 1491242609829
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 41640,
        "start": 1491242568255,
        "end": 1491242609895
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventInSomeLocation.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials EventSearch SearchEventInSomeLocation Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Tutorials_EventSearch_SearchEventInSomeLocation.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials EventSearch SearchEventInSomeLocation Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventInSomeLocation.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242609900,
                  "end": 1491242609901
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
                  "durationInMillis": 2572,
                  "start": 1491242609901,
                  "end": 1491242612473
                },
                {
                  "step": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 618,
                  "start": 1491242612473,
                  "end": 1491242613091
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22,
                  "start": 1491242613091,
                  "end": 1491242613113
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242613113,
                  "end": 1491242613113
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials EventSearch SearchEventInSomeLocation page",
                "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3281,
        "start": 1491242609899,
        "end": 1491242613180
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials EventSearch SearchEventWithDiscoveryAPI Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials EventSearch SearchEventWithDiscoveryAPI Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242613184,
                  "end": 1491242613185
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
                  "durationInMillis": 4438,
                  "start": 1491242613185,
                  "end": 1491242617623
                },
                {
                  "step": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 267,
                  "start": 1491242617624,
                  "end": 1491242617891
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 19,
                  "start": 1491242617891,
                  "end": 1491242617910
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242617910,
                  "end": 1491242617910
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
                "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4789,
        "start": 1491242613183,
        "end": 1491242617972
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials Widgets Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Tutorials_Widgets.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials Widgets Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242617975,
                  "end": 1491242617976
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 3226,
                  "start": 1491242617976,
                  "end": 1491242621202
                },
                {
                  "step": "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10175,
                  "start": 1491242621203,
                  "end": 1491242631378
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23,
                  "start": 1491242631378,
                  "end": 1491242631401
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242631401,
                  "end": 1491242631402
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials Widgets page",
                    "durationInMillis": 1732,
                    "start": 1491242631465,
                    "end": 1491242633197
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials Widgets page",
                    "durationInMillis": 928,
                    "start": 1491242633198,
                    "end": 1491242634126
                  },
                  {
                    "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 418,
                    "start": 1491242634127,
                    "end": 1491242634545
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials Widgets page",
                  "When check visibility and click <elementKey> element of Tutorials Widgets page",
                  "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials Widgets page",
                    "durationInMillis": 4545,
                    "start": 1491242634608,
                    "end": 1491242639153
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials Widgets page",
                    "durationInMillis": 1069,
                    "start": 1491242639154,
                    "end": 1491242640223
                  },
                  {
                    "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 383,
                    "start": 1491242640224,
                    "end": 1491242640607
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials Widgets page",
                  "When check visibility and click <elementKey> element of Tutorials Widgets page",
                  "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials Widgets page",
                    "durationInMillis": 1976,
                    "start": 1491242640670,
                    "end": 1491242642646
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials Widgets page",
                    "durationInMillis": 1263,
                    "start": 1491242642647,
                    "end": 1491242643910
                  },
                  {
                    "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 146,
                    "start": 1491242643911,
                    "end": 1491242644057
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials Widgets page",
                  "When check visibility and click <elementKey> element of Tutorials Widgets page",
                  "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 26147,
        "start": 1491242617975,
        "end": 1491242644122
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_Widgets_EventDiscoveryWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials Widgets EventDiscoveryWidget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets EventDiscoveryWidget page",
              "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Tutorials_Widgets_EventDiscoveryWidget.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials Widgets EventDiscoveryWidget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets EventDiscoveryWidget page",
              "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets_EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242644126,
                  "end": 1491242644127
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets EventDiscoveryWidget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets EventDiscoveryWidget page",
                  "durationInMillis": 2459,
                  "start": 1491242644127,
                  "end": 1491242646586
                },
                {
                  "step": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 336,
                  "start": 1491242646586,
                  "end": 1491242646922
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 67,
                  "start": 1491242646922,
                  "end": 1491242646989
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242646989,
                  "end": 1491242646990
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets EventDiscoveryWidget page",
                "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 2936,
        "start": 1491242644125,
        "end": 1491242647061
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_Calendar.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Calendar Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/calendar/) [3.2.1.9 Disqus is present on calendar widget]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_Calendar.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Calendar Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) [3.2.1.9 Disqus is present on calendar widget]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_Calendar.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242647063,
                  "end": 1491242647064
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 3258,
                  "start": 1491242647064,
                  "end": 1491242650322
                },
                {
                  "step": "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Calendar Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 547,
                  "start": 1491242650323,
                  "end": 1491242650870
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 20,
                  "start": 1491242650871,
                  "end": 1491242650891
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242650891,
                  "end": 1491242650891
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) [3.2.1.9 Disqus is present on calendar widget]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3898,
        "start": 1491242647063,
        "end": 1491242650961
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_Countdown.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Countdown Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_Countdown.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Countdown Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_Countdown.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242650965,
                  "end": 1491242650965
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 2958,
                  "start": 1491242650966,
                  "end": 1491242653924
                },
                {
                  "step": "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Countdown Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 397,
                  "start": 1491242653925,
                  "end": 1491242654322
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 52,
                  "start": 1491242654322,
                  "end": 1491242654374
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242654374,
                  "end": 1491242654375
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3474,
        "start": 1491242650964,
        "end": 1491242654438
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_EventDiscovery.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Event Discovery Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_EventDiscovery.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Event Discovery Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_EventDiscovery.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242654441,
                  "end": 1491242654441
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 5604,
                  "start": 1491242654441,
                  "end": 1491242660045
                },
                {
                  "step": "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Event Discovery Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 570,
                  "start": 1491242660046,
                  "end": 1491242660616
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1491242660616,
                  "end": 1491242660640
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242660640,
                  "end": 1491242660641
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 6266,
        "start": 1491242654440,
        "end": 1491242660706
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_UniversalCheckout.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Universal Checkout Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/checkout/) [3.1.3 Widget checkout : Verification for general page's elements]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Universal Checkout page",
              "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_UniversalCheckout.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Universal Checkout Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/checkout/) [3.1.3 Widget checkout : Verification for general page's elements]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Universal Checkout page",
              "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_UniversalCheckout.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242660709,
                  "end": 1491242660710
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Universal Checkout page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Universal Checkout page",
                  "durationInMillis": 4322,
                  "start": 1491242660710,
                  "end": 1491242665032
                },
                {
                  "step": "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Universal Checkout Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 632,
                  "start": 1491242665033,
                  "end": 1491242665665
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1491242665665,
                  "end": 1491242665689
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242665689,
                  "end": 1491242665690
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/checkout/) [3.1.3 Widget checkout : Verification for general page's elements]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Universal Checkout page",
                "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5043,
        "start": 1491242660709,
        "end": 1491242665752
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_WordPress.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test WordPress Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/wordpress/) [3.1.4 Wordpress widget : Verification for general page's elements]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open WordPress Widget page",
              "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_WordPress.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test WordPress Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/wordpress/) [3.1.4 Wordpress widget : Verification for general page's elements]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open WordPress Widget page",
              "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_WordPress.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242665755,
                  "end": 1491242665755
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open WordPress Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open WordPress Widget page",
                  "durationInMillis": 2901,
                  "start": 1491242665755,
                  "end": 1491242668656
                },
                {
                  "step": "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for WordPress Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 573,
                  "start": 1491242668657,
                  "end": 1491242669230
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1491242669230,
                  "end": 1491242669254
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242669254,
                  "end": 1491242669254
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/wordpress/) [3.1.4 Wordpress widget : Verification for general page's elements]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open WordPress Widget page",
                "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3622,
        "start": 1491242665754,
        "end": 1491242669376
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widgets.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Widgets Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click DirectPaymentButton element of Widgets page",
              "Then check that new page opened from Direct Payment Button has has appropriate url"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Widgets.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Widgets Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242669379,
                  "end": 1491242669379
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Widgets page",
                  "durationInMillis": 1751,
                  "start": 1491242669379,
                  "end": 1491242671130
                },
                {
                  "step": "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10189,
                  "start": 1491242671131,
                  "end": 1491242681320
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 26,
                  "start": 1491242681320,
                  "end": 1491242681346
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242681346,
                  "end": 1491242681347
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Widgets page",
                "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click DirectPaymentButton element of Widgets page",
              "Then check that new page opened from Direct Payment Button has has appropriate url"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242681410,
                  "end": 1491242681410
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Widgets page",
                  "durationInMillis": 1726,
                  "start": 1491242681410,
                  "end": 1491242683136
                },
                {
                  "step": "When check visibility and click DirectPaymentButton element of Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When check visibility and click ｟DirectPaymentButton｠ element of Widgets page",
                  "durationInMillis": 829,
                  "start": 1491242683137,
                  "end": 1491242683966
                },
                {
                  "step": "Then check that new page opened from Direct Payment Button has has appropriate url",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check that new page opened from Direct Payment Button has has appropriate url",
                  "durationInMillis": 1110,
                  "start": 1491242683966,
                  "end": 1491242685076
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21,
                  "start": 1491242685077,
                  "end": 1491242685098
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242685098,
                  "end": 1491242685098
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Widgets page",
                "When check visibility and click DirectPaymentButton element of Widgets page",
                "Then check that new page opened from Direct Payment Button has has appropriate url"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Checkout Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/checkout/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 4439,
                    "start": 1491242685213,
                    "end": 1491242689652
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Checkout Widget Button｠ element of Widgets page",
                    "durationInMillis": 2571,
                    "start": 1491242689653,
                    "end": 1491242692224
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/checkout/｠ and ｟//h1｠",
                    "durationInMillis": 221,
                    "start": 1491242692225,
                    "end": 1491242692446
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Discovery Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/event-discovery/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 4449,
                    "start": 1491242692525,
                    "end": 1491242696974
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Discovery Widget Button｠ element of Widgets page",
                    "durationInMillis": 3879,
                    "start": 1491242696975,
                    "end": 1491242700854
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/event-discovery/｠ and ｟//h1｠",
                    "durationInMillis": 1792,
                    "start": 1491242700855,
                    "end": 1491242702647
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Countdown Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/countdown/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 4073,
                    "start": 1491242702713,
                    "end": 1491242706786
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Countdown Widget Button｠ element of Widgets page",
                    "durationInMillis": 1440,
                    "start": 1491242706787,
                    "end": 1491242708227
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/countdown/｠ and ｟//h1｠",
                    "durationInMillis": 29,
                    "start": 1491242708227,
                    "end": 1491242708256
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Calendar Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/calendar/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 3499,
                    "start": 1491242708317,
                    "end": 1491242711816
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Calendar Widget Button｠ element of Widgets page",
                    "durationInMillis": 1865,
                    "start": 1491242711817,
                    "end": 1491242713682
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/calendar/｠ and ｟//h1｠",
                    "durationInMillis": 748,
                    "start": 1491242713683,
                    "end": 1491242714431
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "WordPress Widget Learn Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/wordpress/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 1860,
                    "start": 1491242715317,
                    "end": 1491242717177
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟WordPress Widget Learn Button｠ element of Widgets page",
                    "durationInMillis": 1457,
                    "start": 1491242717177,
                    "end": 1491242718634
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/wordpress/｠ and ｟//h1｠",
                    "durationInMillis": 21,
                    "start": 1491242718635,
                    "end": 1491242718656
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 51195,
        "start": 1491242669378,
        "end": 1491242720573
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Support Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Support page",
              "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Support Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Support page",
              "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242720575,
                  "end": 1491242720576
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Support page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Support page",
                  "durationInMillis": 4346,
                  "start": 1491242720576,
                  "end": 1491242724922
                },
                {
                  "step": "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Support Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 423,
                  "start": 1491242724923,
                  "end": 1491242725346
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 45,
                  "start": 1491242725346,
                  "end": 1491242725391
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242725391,
                  "end": 1491242725391
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Support page",
                "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4885,
        "start": 1491242720575,
        "end": 1491242725460
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_BrandingGuide.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Branding Guide Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/branding-guide/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Branding Guide page",
              "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_BrandingGuide.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Branding Guide Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/branding-guide/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Branding Guide page",
              "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_BrandingGuide.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242725463,
                  "end": 1491242725463
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Branding Guide page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Branding Guide page",
                  "durationInMillis": 3019,
                  "start": 1491242725463,
                  "end": 1491242728482
                },
                {
                  "step": "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Branding Guide Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 295,
                  "start": 1491242728483,
                  "end": 1491242728778
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 55,
                  "start": 1491242728778,
                  "end": 1491242728833
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242728833,
                  "end": 1491242728834
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/branding-guide/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Branding Guide page",
                "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3434,
        "start": 1491242725462,
        "end": 1491242728896
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_ContactUs.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Contact Us Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/contact-us/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Contact Us page",
              "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_ContactUs.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Contact Us Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/contact-us/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Contact Us page",
              "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_ContactUs.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242728898,
                  "end": 1491242728899
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Contact Us page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Contact Us page",
                  "durationInMillis": 4527,
                  "start": 1491242728899,
                  "end": 1491242733426
                },
                {
                  "step": "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Contact Us Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10247,
                  "start": 1491242733427,
                  "end": 1491242743674
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23,
                  "start": 1491242743675,
                  "end": 1491242743698
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242743698,
                  "end": 1491242743698
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/contact-us/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Contact Us page",
                "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 14863,
        "start": 1491242728898,
        "end": 1491242743761
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_FAQ.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test FAQ Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/faq/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open FAQ page",
              "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_FAQ.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test FAQ Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/faq/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open FAQ page",
              "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_FAQ.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242743763,
                  "end": 1491242743764
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open FAQ page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open FAQ page",
                  "durationInMillis": 1602,
                  "start": 1491242743764,
                  "end": 1491242745366
                },
                {
                  "step": "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for FAQ Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 651,
                  "start": 1491242745366,
                  "end": 1491242746017
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 194,
                  "start": 1491242746017,
                  "end": 1491242746211
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242746211,
                  "end": 1491242746212
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/faq/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open FAQ page",
                "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 2511,
        "start": 1491242743763,
        "end": 1491242746274
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_GeneralTermsOfUse.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test General Terms Of Use Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/terms-of-use/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open General Terms Of Use page",
              "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_GeneralTermsOfUse.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test General Terms Of Use Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/terms-of-use/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open General Terms Of Use page",
              "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_GeneralTermsOfUse.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242746287,
                  "end": 1491242746288
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open General Terms Of Use page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open General Terms Of Use page",
                  "durationInMillis": 2495,
                  "start": 1491242746288,
                  "end": 1491242748783
                },
                {
                  "step": "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for General Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 721,
                  "start": 1491242748784,
                  "end": 1491242749505
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 43,
                  "start": 1491242749505,
                  "end": 1491242749548
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242749548,
                  "end": 1491242749549
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/terms-of-use/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open General Terms Of Use page",
                "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3335,
        "start": 1491242746276,
        "end": 1491242749611
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_PartnerAPITermsOfUse.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Partner API Terms Of Use Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API Terms Of Use page",
              "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_PartnerAPITermsOfUse.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Partner API Terms Of Use Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API Terms Of Use page",
              "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_PartnerAPITermsOfUse.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242749613,
                  "end": 1491242749614
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Partner API Terms Of Use page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Partner API Terms Of Use page",
                  "durationInMillis": 1637,
                  "start": 1491242749614,
                  "end": 1491242751251
                },
                {
                  "step": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 265,
                  "start": 1491242751252,
                  "end": 1491242751517
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 255,
                  "start": 1491242751517,
                  "end": 1491242751772
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242751772,
                  "end": 1491242751772
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Partner API Terms Of Use page",
                "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 2246,
        "start": 1491242749613,
        "end": 1491242751859
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/APIKeyReplacementNegative.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test API Key is NOT replaced on the page"
        },
        "meta": {
          "properties": [
            {
              "@name": "prod",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(APi Key - Commerce API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "When User is logged to site (Commerce API)",
              "Then check that API key is provided for all placeholders on Commerce API page"
            ]
          },
          {
            "title": "(APi Key - Top Picks API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Top Picks API page",
              "When User is logged to site (Top Picks API)",
              "Then check that API key is provided for all placeholders on Top Picks API page"
            ]
          },
          {
            "title": "(APi Key - Season Ticketing API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Season Ticketing API page",
              "When User is logged to site (Season Ticketing API)",
              "Then check that API key is provided for all placeholders on Season Ticketing API page"
            ]
          },
          {
            "title": "(APi Key - International Discovery API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open International Discovery API page",
              "When User is logged to site (International Discovery API)",
              "Then check that API key is provided for all placeholders on International Discovery API page"
            ]
          },
          {
            "title": "(APi Key - Publish API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Publish API page",
              "When User is logged to site (Publish API)",
              "Then check that API key is provided for all placeholders on Publish API page"
            ]
          },
          {
            "title": "(APi Key - Partner API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API page",
              "When User is logged to site (Partner API)",
              "Then check that API key is provided for all placeholders on Partner API page"
            ]
          },
          {
            "title": "(APi Key - Inventory Status API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Inventory Status API page",
              "When User is logged to site (Inventory Status API)",
              "Then check that API key is provided for all placeholder on Inventory Status API page"
            ]
          }
        ],
        "name": "APIKeyReplacementNegative.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test API Key is NOT replaced on the page",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0,
        "start": 0,
        "end": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/APIKeyReplacementPositive.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test API Key is NOT replaced on the page"
        },
        "meta": {
          "properties": [
            {
              "@name": "prod",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(APi Key - Geting Started page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is not logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Geting Started page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Geting Started page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is not logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Geting Started page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Interactive API Console page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Interactive API Console page",
              "When User is not logged to site (Interactive API Console)",
              "Then check that API key is provided for all placeholders on Interactive API Console page"
            ]
          },
          {
            "title": "(APi Key - Interactive API Console page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Interactive API Console page",
              "When User is logged to site (Interactive API Console)",
              "Then check that API key is provided for all placeholders on Interactive API Console page"
            ]
          },
          {
            "title": "(APi Key - API Explorer) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "When User is not logged to site (API Explorer)",
              "Then check that API key is provided for all placeholders on API Explorer page"
            ]
          },
          {
            "title": "(APi Key - API Explorer) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "When User is logged to site (API Explorer)",
              "Then check that API key is provided for all placeholders on API Explorer page"
            ]
          },
          {
            "title": "(APi Key - Countdown Widget) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When User is not logged to site (Countdown Widget)",
              "Then check that API key is provided for all placeholders on Countdown Widget page"
            ]
          },
          {
            "title": "(APi Key - Countdown Widget) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When User is logged to site (Countdown Widget)",
              "Then check that API key is provided for all placeholders on Countdown Widget page"
            ]
          },
          {
            "title": "(APi Key - Event Discovery Widget) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When User is not logged to site (Event Discovery Widget)",
              "Then check that API key is provided for all placeholders on Event Discovery Widget page"
            ]
          },
          {
            "title": "(APi Key - Event Discovery Widget) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When User is logged to site (Event Discovery Widget)",
              "Then check that API key is provided for all placeholders on Event Discovery Widget page"
            ]
          },
          {
            "title": "(APi Key - Calendar Widget) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When User is not logged to site (Calendar Widget)",
              "Then check that API key is provided for all placeholders on Calendar Widget page"
            ]
          },
          {
            "title": "(APi Key - Calendar Widget) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When User is logged to site (Calendar Widget)",
              "Then check that API key is provided for all placeholders on Calendar Widget page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v2 page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "When User is not logged to site (Discovery API v2)",
              "Then check that API key is provided for all placeholders on Discovery API v2 page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v2 page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "When User is logged to site (Discovery API v2)",
              "Then check that API key is provided for all placeholders on Discovery API v2 page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v1 page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "When User is not logged to site (Discovery API v1)",
              "Then check that API key is provided for all placeholders on Discovery API v1 page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v1 page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "When User is logged to site (Discovery API v1)",
              "Then check that API key is provided for all placeholders on Discovery API v1 page"
            ]
          }
        ],
        "name": "APIKeyReplacementPositive.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test API Key is NOT replaced on the page",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0,
        "start": 0,
        "end": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/CalendarWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "setup Calendar Widget",
          "asA": "developer",
          "iWantTo": "use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then the required fields are not empty on the Calendar Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And change values for: apiKey,keyword,postalCodeApi",
              "And store values of: apiKey,keyword,postalCodeApi",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,postalCodeApi",
              "And change values for: apiKey,keyword,postalCodeApi",
              "When click reset button",
              "Then values of fields: apiKey,keyword,postalCodeApi equals stored values"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,postalCodeApi",
              "And change values for: apiKey,keyword,postalCodeApi",
              "When click reset button on Calendar Widget Page",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And enter custom ApiKey invalidApiKey123",
              "Then the event message is shown \"No results were found\""
            ]
          }
        ],
        "name": "CalendarWidget.story"
      },
      "localizedNarrative": "In order to setup Calendar Widget\nAs a developer\nI want to use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then the required fields are not empty on the Calendar Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242751861,
                  "end": 1491242751862
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 3613,
                  "start": 1491242751862,
                  "end": 1491242755475
                },
                {
                  "step": "Then the required fields are not empty on the Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the required fields are not empty on the Calendar Widget page",
                  "durationInMillis": 392,
                  "start": 1491242755476,
                  "end": 1491242755868
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 33,
                  "start": 1491242755869,
                  "end": 1491242755902
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242755902,
                  "end": 1491242755902
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "Then the required fields are not empty on the Calendar Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And change values for: apiKey,keyword,postalCodeApi",
              "And store values of: apiKey,keyword,postalCodeApi",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242755974,
                  "end": 1491242755974
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 3803,
                  "start": 1491242755974,
                  "end": 1491242759777
                },
                {
                  "step": "And change values for: apiKey,keyword,postalCodeApi",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for: ｟apiKey,keyword,postalCodeApi｠",
                  "durationInMillis": 2068,
                  "start": 1491242759777,
                  "end": 1491242761845
                },
                {
                  "step": "And store values of: apiKey,keyword,postalCodeApi",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values of: ｟apiKey,keyword,postalCodeApi｠",
                  "durationInMillis": 176,
                  "start": 1491242761845,
                  "end": 1491242762021
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 800,
                  "start": 1491242762022,
                  "end": 1491242762822
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 483,
                  "start": 1491242762823,
                  "end": 1491242763306
                },
                {
                  "step": "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,postalCodeApi｠",
                  "durationInMillis": 248,
                  "start": 1491242763306,
                  "end": 1491242763554
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23,
                  "start": 1491242763555,
                  "end": 1491242763578
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242763578,
                  "end": 1491242763579
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And change values for: apiKey,keyword,postalCodeApi",
                "And store values of: apiKey,keyword,postalCodeApi",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,postalCodeApi",
              "And change values for: apiKey,keyword,postalCodeApi",
              "When click reset button",
              "Then values of fields: apiKey,keyword,postalCodeApi equals stored values"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242763645,
                  "end": 1491242763646
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 4871,
                  "start": 1491242763646,
                  "end": 1491242768517
                },
                {
                  "step": "And store values of: apiKey,keyword,postalCodeApi",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values of: ｟apiKey,keyword,postalCodeApi｠",
                  "durationInMillis": 186,
                  "start": 1491242768518,
                  "end": 1491242768704
                },
                {
                  "step": "And change values for: apiKey,keyword,postalCodeApi",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for: ｟apiKey,keyword,postalCodeApi｠",
                  "durationInMillis": 1950,
                  "start": 1491242768705,
                  "end": 1491242770655
                },
                {
                  "step": "When click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click reset button",
                  "durationInMillis": 1711,
                  "start": 1491242770656,
                  "end": 1491242772367
                },
                {
                  "step": "Then values of fields: apiKey,keyword,postalCodeApi equals stored values",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then values of fields: ｟apiKey,keyword,postalCodeApi｠ equals stored values",
                  "durationInMillis": 99,
                  "start": 1491242772371,
                  "end": 1491242772470
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 20,
                  "start": 1491242772471,
                  "end": 1491242772491
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242772491,
                  "end": 1491242772492
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And store values of: apiKey,keyword,postalCodeApi",
                "And change values for: apiKey,keyword,postalCodeApi",
                "When click reset button",
                "Then values of fields: apiKey,keyword,postalCodeApi equals stored values"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,postalCodeApi",
              "And change values for: apiKey,keyword,postalCodeApi",
              "When click reset button on Calendar Widget Page",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242772555,
                  "end": 1491242772556
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 2820,
                  "start": 1491242772556,
                  "end": 1491242775376
                },
                {
                  "step": "And store values of: apiKey,keyword,postalCodeApi",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values of: ｟apiKey,keyword,postalCodeApi｠",
                  "durationInMillis": 448,
                  "start": 1491242775377,
                  "end": 1491242775825
                },
                {
                  "step": "And change values for: apiKey,keyword,postalCodeApi",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for: ｟apiKey,keyword,postalCodeApi｠",
                  "durationInMillis": 2605,
                  "start": 1491242775826,
                  "end": 1491242778431
                },
                {
                  "step": "When click reset button on Calendar Widget Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click reset button on Calendar Widget Page",
                  "durationInMillis": 1149,
                  "start": 1491242778432,
                  "end": 1491242779581
                },
                {
                  "step": "And click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click on \"Get code\" button",
                  "durationInMillis": 787,
                  "start": 1491242779582,
                  "end": 1491242780369
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 444,
                  "start": 1491242780371,
                  "end": 1491242780815
                },
                {
                  "step": "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,postalCodeApi｠",
                  "durationInMillis": 287,
                  "start": 1491242780816,
                  "end": 1491242781103
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 61,
                  "start": 1491242781104,
                  "end": 1491242781165
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242781165,
                  "end": 1491242781166
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And store values of: apiKey,keyword,postalCodeApi",
                "And change values for: apiKey,keyword,postalCodeApi",
                "When click reset button on Calendar Widget Page",
                "And click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 34,
                  "start": 1491242781242,
                  "end": 1491242781276
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 4835,
                  "start": 1491242781277,
                  "end": 1491242786112
                },
                {
                  "step": "When I click on the 'Get your own' link to get api key",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When I click on the 'Get your own' link to get api key",
                  "durationInMillis": 307,
                  "start": 1491242786113,
                  "end": 1491242786420
                },
                {
                  "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
                  "durationInMillis": 727,
                  "start": 1491242786420,
                  "end": 1491242787147
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 19,
                  "start": 1491242787148,
                  "end": 1491242787167
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242787167,
                  "end": 1491242787167
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "When I click on the 'Get your own' link to get api key",
                "Then The page is opened with url https://developer-acct.ticketmaster.com"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And enter custom ApiKey invalidApiKey123",
              "Then the event message is shown \"No results were found\""
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242787230,
                  "end": 1491242787231
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 2951,
                  "start": 1491242787231,
                  "end": 1491242790182
                },
                {
                  "step": "And enter custom ApiKey invalidApiKey123",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And enter custom ApiKey ｟invalidApiKey123｠",
                  "durationInMillis": 590,
                  "start": 1491242790183,
                  "end": 1491242790773
                },
                {
                  "step": "Then the event message is shown \"No results were found\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"No results were found\"",
                  "durationInMillis": 1562,
                  "start": 1491242790774,
                  "end": 1491242792336
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 28,
                  "start": 1491242792337,
                  "end": 1491242792365
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242792365,
                  "end": 1491242792366
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And enter custom ApiKey invalidApiKey123",
                "Then the event message is shown \"No results were found\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 40568,
        "start": 1491242751861,
        "end": 1491242792429
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/CountdownWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "setup Countdown Widget",
          "asA": "developer",
          "iWantTo": "use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/countdown/) [3.3.1 Countdown widget layout]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then check general page elements for page, where DISQUS = true and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) [3.3.2 Countdown widget : Common functionality is not broken]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then the required fields are not empty on the Countdown Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "Then the ApiKey and EventId fields have stored values"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When get eventId by keyword ZZ TOP",
              "And set first eventId from list",
              "Then the event poster contains ZZ TOP"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to full-width",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored theme"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) [3.3.4 Countdown widget : Full-width]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|fullwidth       |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "fullwidth"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom ApiKey {InvalidApiKey123}",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom EventId invalidEventId123",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          }
        ],
        "name": "CountdownWidget.story"
      },
      "localizedNarrative": "In order to setup Countdown Widget\nAs a developer\nI want to use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
      "allowed": true,
      "status": "FAILED",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) [3.3.1 Countdown widget layout]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then check general page elements for page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242792432,
                  "end": 1491242792432
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 3234,
                  "start": 1491242792433,
                  "end": 1491242795667
                },
                {
                  "step": "Then check general page elements for page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 237,
                  "start": 1491242795668,
                  "end": 1491242795905
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 18,
                  "start": 1491242795905,
                  "end": 1491242795923
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242795923,
                  "end": 1491242795923
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) [3.3.1 Countdown widget layout]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "Then check general page elements for page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) [3.3.2 Countdown widget : Common functionality is not broken]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then the required fields are not empty on the Countdown Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242795984,
                  "end": 1491242795985
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 3557,
                  "start": 1491242795985,
                  "end": 1491242799542
                },
                {
                  "step": "Then the required fields are not empty on the Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the required fields are not empty on the Countdown Widget page",
                  "durationInMillis": 184,
                  "start": 1491242799543,
                  "end": 1491242799727
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25,
                  "start": 1491242799727,
                  "end": 1491242799752
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242799752,
                  "end": 1491242799753
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) [3.3.2 Countdown widget : Common functionality is not broken]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "Then the required fields are not empty on the Countdown Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242799816,
                  "end": 1491242799816
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 4628,
                  "start": 1491242799816,
                  "end": 1491242804444
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 115,
                  "start": 1491242804445,
                  "end": 1491242804560
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 716,
                  "start": 1491242804561,
                  "end": 1491242805277
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 1038,
                  "start": 1491242805278,
                  "end": 1491242806316
                },
                {
                  "step": "And embedded html code contains stored ApiKey and EventId",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
                  "durationInMillis": 111,
                  "start": 1491242806316,
                  "end": 1491242806427
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 20,
                  "start": 1491242806427,
                  "end": 1491242806447
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242806447,
                  "end": 1491242806447
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored ApiKey and EventId"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242806509,
                  "end": 1491242806510
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 2969,
                  "start": 1491242806510,
                  "end": 1491242809479
                },
                {
                  "step": "And change value for ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 570,
                  "start": 1491242809480,
                  "end": 1491242810050
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 77,
                  "start": 1491242810051,
                  "end": 1491242810128
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 686,
                  "start": 1491242810129,
                  "end": 1491242810815
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 323,
                  "start": 1491242810816,
                  "end": 1491242811139
                },
                {
                  "step": "And embedded html code contains stored ApiKey and EventId",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
                  "durationInMillis": 126,
                  "start": 1491242811140,
                  "end": 1491242811266
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 19,
                  "start": 1491242811266,
                  "end": 1491242811285
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242811285,
                  "end": 1491242811286
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And change value for ApiKey and EventId on Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored ApiKey and EventId"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "Then the ApiKey and EventId fields have stored values"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242811348,
                  "end": 1491242811349
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 2404,
                  "start": 1491242811349,
                  "end": 1491242813753
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 808,
                  "start": 1491242813754,
                  "end": 1491242814562
                },
                {
                  "step": "And change value for ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 487,
                  "start": 1491242814563,
                  "end": 1491242815050
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 116,
                  "start": 1491242815050,
                  "end": 1491242815166
                },
                {
                  "step": "And click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click reset button",
                  "durationInMillis": 1789,
                  "start": 1491242815166,
                  "end": 1491242816955
                },
                {
                  "step": "Then the ApiKey and EventId fields have stored values",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the ApiKey and EventId fields have stored values",
                  "durationInMillis": 62,
                  "start": 1491242816956,
                  "end": 1491242817018
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 20,
                  "start": 1491242817019,
                  "end": 1491242817039
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242817039,
                  "end": 1491242817040
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "And change value for ApiKey and EventId on Countdown Widget page",
                "When submit form",
                "And click reset button",
                "Then the ApiKey and EventId fields have stored values"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242817102,
                  "end": 1491242817103
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 4425,
                  "start": 1491242817103,
                  "end": 1491242821528
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 279,
                  "start": 1491242821528,
                  "end": 1491242821807
                },
                {
                  "step": "And change value for ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 541,
                  "start": 1491242821808,
                  "end": 1491242822349
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 71,
                  "start": 1491242822350,
                  "end": 1491242822421
                },
                {
                  "step": "And click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click reset button",
                  "durationInMillis": 1714,
                  "start": 1491242822422,
                  "end": 1491242824136
                },
                {
                  "step": "And click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click on \"Get code\" button",
                  "durationInMillis": 670,
                  "start": 1491242824137,
                  "end": 1491242824807
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 346,
                  "start": 1491242824808,
                  "end": 1491242825154
                },
                {
                  "step": "And embedded html code contains stored ApiKey and EventId",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
                  "durationInMillis": 148,
                  "start": 1491242825155,
                  "end": 1491242825303
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 18,
                  "start": 1491242825304,
                  "end": 1491242825322
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242825322,
                  "end": 1491242825322
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "And change value for ApiKey and EventId on Countdown Widget page",
                "When submit form",
                "And click reset button",
                "And click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored ApiKey and EventId"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When get eventId by keyword ZZ TOP",
              "And set first eventId from list",
              "Then the event poster contains ZZ TOP"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242825385,
                  "end": 1491242825386
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 1980,
                  "start": 1491242825386,
                  "end": 1491242827366
                },
                {
                  "step": "When get eventId by keyword ZZ TOP",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When get eventId by keyword ｟ZZ TOP｠",
                  "durationInMillis": 1394,
                  "start": 1491242827367,
                  "end": 1491242828761
                },
                {
                  "step": "And set first eventId from list",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And set first eventId from list",
                  "durationInMillis": 1758,
                  "start": 1491242828762,
                  "end": 1491242830520
                },
                {
                  "step": "Then the event poster contains ZZ TOP",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event poster contains ｟ZZ TOP｠",
                  "durationInMillis": 356,
                  "start": 1491242830521,
                  "end": 1491242830877
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1491242830877,
                  "end": 1491242830901
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242830901,
                  "end": 1491242830901
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "When get eventId by keyword ZZ TOP",
                "And set first eventId from list",
                "Then the event poster contains ZZ TOP"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242830963,
                  "end": 1491242830964
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 3482,
                  "start": 1491242830964,
                  "end": 1491242834446
                },
                {
                  "step": "When I click on the 'Get your own' link to get api key",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When I click on the 'Get your own' link to get api key",
                  "durationInMillis": 301,
                  "start": 1491242834446,
                  "end": 1491242834747
                },
                {
                  "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
                  "durationInMillis": 1412,
                  "start": 1491242834748,
                  "end": 1491242836160
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 19,
                  "start": 1491242836161,
                  "end": 1491242836180
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242836180,
                  "end": 1491242836180
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "When I click on the 'Get your own' link to get api key",
                "Then The page is opened with url https://developer-acct.ticketmaster.com"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to full-width",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored theme"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242836243,
                  "end": 1491242836244
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 4689,
                  "start": 1491242836244,
                  "end": 1491242840933
                },
                {
                  "step": "And switch to VISUAL Tab",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And switch to VISUAL Tab",
                  "durationInMillis": 263,
                  "start": 1491242840934,
                  "end": 1491242841197
                },
                {
                  "step": "And set theme to full-width",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And set theme to full-width",
                  "durationInMillis": 893,
                  "start": 1491242841198,
                  "end": 1491242842091
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 1131,
                  "start": 1491242842091,
                  "end": 1491242843222
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 727,
                  "start": 1491242843223,
                  "end": 1491242843950
                },
                {
                  "step": "And embedded html code contains stored theme",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored theme",
                  "durationInMillis": 98,
                  "start": 1491242843951,
                  "end": 1491242844049
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21,
                  "start": 1491242844049,
                  "end": 1491242844070
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242844070,
                  "end": 1491242844070
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And switch to VISUAL Tab",
                "And set theme to full-width",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored theme"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) [3.3.4 Countdown widget : Full-width]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|fullwidth       |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "fullwidth"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x600"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 2091,
                    "start": 1491242844134,
                    "end": 1491242846225
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 829,
                    "start": 1491242846226,
                    "end": 1491242847055
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟300x600｠",
                    "durationInMillis": 891,
                    "start": 1491242847056,
                    "end": 1491242847947
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 847,
                    "start": 1491242847948,
                    "end": 1491242848795
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 375,
                    "start": 1491242848795,
                    "end": 1491242849170
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 605,
                    "start": 1491242849171,
                    "end": 1491242849776
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) [3.3.4 Countdown widget : Full-width]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|fullwidth       |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "fullwidth"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x250"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 2703,
                    "start": 1491242849839,
                    "end": 1491242852542
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 313,
                    "start": 1491242852543,
                    "end": 1491242852856
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟300x250｠",
                    "durationInMillis": 1144,
                    "start": 1491242852857,
                    "end": 1491242854001
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 1109,
                    "start": 1491242854002,
                    "end": 1491242855111
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 271,
                    "start": 1491242855111,
                    "end": 1491242855382
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 182,
                    "start": 1491242855383,
                    "end": 1491242855565
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) [3.3.4 Countdown widget : Full-width]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|fullwidth       |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "fullwidth"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "fullwidth"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 3360,
                    "start": 1491242855628,
                    "end": 1491242858988
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 426,
                    "start": 1491242858988,
                    "end": 1491242859414
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟fullwidth｠",
                    "durationInMillis": 1425,
                    "start": 1491242859415,
                    "end": 1491242860840
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 1107,
                    "start": 1491242860840,
                    "end": 1491242861947
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 380,
                    "start": 1491242861947,
                    "end": 1491242862327
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 238,
                    "start": 1491242862328,
                    "end": 1491242862566
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) [3.3.4 Countdown widget : Full-width]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|fullwidth       |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "fullwidth"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "custom"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 2040,
                    "start": 1491242862629,
                    "end": 1491242864669
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 225,
                    "start": 1491242864670,
                    "end": 1491242864895
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟custom｠",
                    "durationInMillis": 1270,
                    "start": 1491242864896,
                    "end": 1491242866166
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 723,
                    "start": 1491242866166,
                    "end": 1491242866889
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 1051,
                    "start": 1491242866890,
                    "end": 1491242867941
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 63,
                    "start": 1491242867942,
                    "end": 1491242868005
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) [3.3.4 Countdown widget : Full-width]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|fullwidth       |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "fullwidth"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "orientation",
                  "horizontal"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 3088,
                    "start": 1491242868071,
                    "end": 1491242871159
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 205,
                    "start": 1491242871160,
                    "end": 1491242871365
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                    "durationInMillis": 1440,
                    "start": 1491242871366,
                    "end": 1491242872806
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 772,
                    "start": 1491242872807,
                    "end": 1491242873579
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 1012,
                    "start": 1491242873580,
                    "end": 1491242874592
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 51,
                    "start": 1491242874593,
                    "end": 1491242874644
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            },
            {
              "parameters": [
                [
                  "orientation",
                  "vertical"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 4458,
                    "start": 1491242874706,
                    "end": 1491242879164
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 187,
                    "start": 1491242879165,
                    "end": 1491242879352
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout orientation to ｟vertical｠",
                    "durationInMillis": 1048,
                    "start": 1491242879353,
                    "end": 1491242880401
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 798,
                    "start": 1491242880401,
                    "end": 1491242881199
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 243,
                    "start": 1491242881200,
                    "end": 1491242881443
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 94,
                    "start": 1491242881444,
                    "end": 1491242881538
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom ApiKey {InvalidApiKey123}",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242881602,
                  "end": 1491242881602
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 2089,
                  "start": 1491242881602,
                  "end": 1491242883691
                },
                {
                  "step": "And enter custom ApiKey {InvalidApiKey123}",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And enter custom ApiKey ｟{InvalidApiKey123}｠",
                  "durationInMillis": 1036,
                  "start": 1491242883691,
                  "end": 1491242884727
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 89,
                  "start": 1491242884727,
                  "end": 1491242884816
                },
                {
                  "step": "Then the event message is shown \"No results were found\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"No results were found\"",
                  "durationInMillis": 106,
                  "start": 1491242884817,
                  "end": 1491242884923
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 129,
                  "start": 1491242884924,
                  "end": 1491242885053
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242885053,
                  "end": 1491242885054
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And enter custom ApiKey {InvalidApiKey123}",
                "When submit form",
                "Then the event message is shown \"No results were found\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom EventId invalidEventId123",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242885169,
                  "end": 1491242885169
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 2344,
                  "start": 1491242885170,
                  "end": 1491242887514
                },
                {
                  "step": "And enter custom EventId invalidEventId123",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And enter custom EventId ｟invalidEventId123｠",
                  "durationInMillis": 1027,
                  "start": 1491242887515,
                  "end": 1491242888542
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 127,
                  "start": 1491242888543,
                  "end": 1491242888670
                },
                {
                  "step": "Then the event message is shown \"No results were found\"",
                  "type": "FAILED",
                  "throwable": {
                    "detailMessage": "Then the event message is shown \"No results were found\"",
                    "cause": {
                      "@class": "java.lang.AssertionError",
                      "detailMessage": "Event message does not contains No results were found",
                      "stackTrace": [
                        "org.junit.Assert.fail(Assert.java:88)",
                        "org.junit.Assert.assertTrue(Assert.java:41)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.checkThatEventMessageIsShown(PD_Widget_CountdownSteps.java:218)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$58caa3fe.CGLIB$checkThatEventMessageIsShown$10(<generated>)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$58caa3fe$$FastClassByCGLIB$$92e46f5d.invoke(<generated>)",
                        "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                        "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                        "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                        "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                        "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                        "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$58caa3fe.checkThatEventMessageIsShown(<generated>)",
                        "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.checkThatEventMessageIsShown(CountdownWidgetDefinition.java:192)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ]
                    },
                    "stackTrace": [
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "40147e83-9159-4842-9742-09d2eeefedf6"
                  },
                  "parametrisedStep": "Then the event message is shown \"No results were found\"",
                  "durationInMillis": 1411,
                  "start": 1491242888671,
                  "end": 1491242890082
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 7,
                  "start": 1491242890084,
                  "end": 1491242890091
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242890091,
                  "end": 1491242890091
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And enter custom EventId invalidEventId123",
                "When submit form",
                "Then the event message is shown \"No results were found\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "FAILED"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 97725,
        "start": 1491242792431,
        "end": 1491242890156
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/EventDiscoveryWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "setup Event Discovery Widget",
          "asA": "user of Ticketmaster Developer Portal",
          "iWantTo": "use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then the required fields are not empty and have default values on the Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "And store all fields values on the Event Discovery Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values on the Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode 90015 on Event Discovery Widget Page",
              "And use GeoPosition on Event Discovery Widget page",
              "And set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that RESET button works properly",
            "meta": {
              "properties": [
                {
                  "@name": "NotImplemented",
                  "@value": ""
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And store all fields values on the Event Discovery Widget page",
              "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "When click reset button",
              "Then all fields have been reseted to defaults on the Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
              "Then the event message is shown \"Here other options for you.\""
            ]
          }
        ],
        "name": "EventDiscoveryWidget.story"
      },
      "localizedNarrative": "In order to setup Event Discovery Widget\nAs a user of Ticketmaster Developer Portal\nI want to use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then the required fields are not empty and have default values on the Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242890792,
                  "end": 1491242890792
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 4711,
                  "start": 1491242890792,
                  "end": 1491242895503
                },
                {
                  "step": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
                  "durationInMillis": 114,
                  "start": 1491242895503,
                  "end": 1491242895617
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 256,
                  "start": 1491242895617,
                  "end": 1491242895873
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491242895873,
                  "end": 1491242895874
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "Then the required fields are not empty and have default values on the Event Discovery Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "And store all fields values on the Event Discovery Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values on the Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242895941,
                  "end": 1491242895941
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 4519,
                  "start": 1491242895942,
                  "end": 1491242900461
                },
                {
                  "step": "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change all possible fields on the Event Discovery Widget page:\n［|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |］",
                  "durationInMillis": 6785,
                  "start": 1491242900461,
                  "end": 1491242907246
                },
                {
                  "step": "And store all fields values on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store all fields values on the Event Discovery Widget page",
                  "durationInMillis": 436,
                  "start": 1491242907249,
                  "end": 1491242907685
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 962,
                  "start": 1491242907686,
                  "end": 1491242908648
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 740,
                  "start": 1491242908649,
                  "end": 1491242909389
                },
                {
                  "step": "And embedded html code contains stored values on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored values on the Event Discovery Widget page",
                  "durationInMillis": 816,
                  "start": 1491242909390,
                  "end": 1491242910206
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21,
                  "start": 1491242910207,
                  "end": 1491242910228
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491242910228,
                  "end": 1491242910228
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
                "And store all fields values on the Event Discovery Widget page",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored values on the Event Discovery Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "keyword",
                  "ADELE"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 6039,
                    "start": 1491242910304,
                    "end": 1491242916343
                  },
                  {
                    "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When search events by keyword ｟ADELE｠ on Event Discovery Widget page",
                    "durationInMillis": 524,
                    "start": 1491242916344,
                    "end": 1491242916868
                  },
                  {
                    "step": "Then found events contains <keyword> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then found events contains ｟ADELE｠ on Event Discovery Widget page",
                    "durationInMillis": 2674,
                    "start": 1491242916869,
                    "end": 1491242919543
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "keyword"
                  ],
                  "data": [
                    [
                      [
                        "keyword",
                        "ADELE"
                      ]
                    ],
                    [
                      [
                        "keyword",
                        "STING"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When search events by keyword <keyword> on Event Discovery Widget page",
                  "Then found events contains <keyword> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "keyword",
                  "STING"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5118,
                    "start": 1491242919618,
                    "end": 1491242924736
                  },
                  {
                    "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When search events by keyword ｟STING｠ on Event Discovery Widget page",
                    "durationInMillis": 524,
                    "start": 1491242924737,
                    "end": 1491242925261
                  },
                  {
                    "step": "Then found events contains <keyword> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then found events contains ｟STING｠ on Event Discovery Widget page",
                    "durationInMillis": 2401,
                    "start": 1491242925262,
                    "end": 1491242927663
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "keyword"
                  ],
                  "data": [
                    [
                      [
                        "keyword",
                        "ADELE"
                      ]
                    ],
                    [
                      [
                        "keyword",
                        "STING"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When search events by keyword <keyword> on Event Discovery Widget page",
                  "Then found events contains <keyword> on Event Discovery Widget page"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "value",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4327,
                    "start": 1491242927729,
                    "end": 1491242932056
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 2765,
                    "start": 1491242932057,
                    "end": 1491242934822
                  },
                  {
                    "step": "Then the number of events equals or less than Event Count <value>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals or less than Event Count ｟1｠",
                    "durationInMillis": 43,
                    "start": 1491242934822,
                    "end": 1491242934865
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|\n| 1   |\n| 100 |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals or less than Event Count <value>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "100"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 6606,
                    "start": 1491242934930,
                    "end": 1491242941536
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                    "durationInMillis": 2533,
                    "start": 1491242941537,
                    "end": 1491242944070
                  },
                  {
                    "step": "Then the number of events equals or less than Event Count <value>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals or less than Event Count ｟100｠",
                    "durationInMillis": 1926,
                    "start": 1491242944071,
                    "end": 1491242945997
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|\n| 1   |\n| 100 |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals or less than Event Count <value>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "value",
                  "0"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5729,
                    "start": 1491242946079,
                    "end": 1491242951808
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟0｠ on Event Discovery Widget page",
                    "durationInMillis": 2699,
                    "start": 1491242951809,
                    "end": 1491242954508
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                    "durationInMillis": 62,
                    "start": 1491242954509,
                    "end": 1491242954571
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "1"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4319,
                    "start": 1491242954643,
                    "end": 1491242958962
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 2608,
                    "start": 1491242958963,
                    "end": 1491242961571
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                    "durationInMillis": 129,
                    "start": 1491242961572,
                    "end": 1491242961701
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "100"
                ],
                [
                  "actualValue",
                  "100"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4472,
                    "start": 1491242961768,
                    "end": 1491242966240
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                    "durationInMillis": 2434,
                    "start": 1491242966241,
                    "end": 1491242968675
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                    "durationInMillis": 1360,
                    "start": 1491242968676,
                    "end": 1491242970036
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "101"
                ],
                [
                  "actualValue",
                  "100"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4911,
                    "start": 1491242970104,
                    "end": 1491242975015
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟101｠ on Event Discovery Widget page",
                    "durationInMillis": 2834,
                    "start": 1491242975016,
                    "end": 1491242977850
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                    "durationInMillis": 1186,
                    "start": 1491242977850,
                    "end": 1491242979036
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode 90015 on Event Discovery Widget Page",
              "And use GeoPosition on Event Discovery Widget page",
              "And set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "setValue",
                  "0"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5236,
                    "start": 1491242979108,
                    "end": 1491242984344
                  },
                  {
                    "step": "When change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 854,
                    "start": 1491242984345,
                    "end": 1491242985199
                  },
                  {
                    "step": "And use GeoPosition on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And use GeoPosition on Event Discovery Widget page",
                    "durationInMillis": 170,
                    "start": 1491242985200,
                    "end": 1491242985370
                  },
                  {
                    "step": "And set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set Radius ｟0｠ on Event Discovery Widget page",
                    "durationInMillis": 1132,
                    "start": 1491242985371,
                    "end": 1491242986503
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 93,
                    "start": 1491242986503,
                    "end": 1491242986596
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When change value of ZipCode 90015 on Event Discovery Widget Page",
                  "And use GeoPosition on Event Discovery Widget page",
                  "And set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "setValue",
                  "1"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4424,
                    "start": 1491242986664,
                    "end": 1491242991088
                  },
                  {
                    "step": "When change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 1062,
                    "start": 1491242991089,
                    "end": 1491242992151
                  },
                  {
                    "step": "And use GeoPosition on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And use GeoPosition on Event Discovery Widget page",
                    "durationInMillis": 134,
                    "start": 1491242992152,
                    "end": 1491242992286
                  },
                  {
                    "step": "And set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set Radius ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 1253,
                    "start": 1491242992286,
                    "end": 1491242993539
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 70,
                    "start": 1491242993539,
                    "end": 1491242993609
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When change value of ZipCode 90015 on Event Discovery Widget Page",
                  "And use GeoPosition on Event Discovery Widget page",
                  "And set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "setValue",
                  "19999"
                ],
                [
                  "actualValue",
                  "19999"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4310,
                    "start": 1491242993675,
                    "end": 1491242997985
                  },
                  {
                    "step": "When change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 1061,
                    "start": 1491242997986,
                    "end": 1491242999047
                  },
                  {
                    "step": "And use GeoPosition on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And use GeoPosition on Event Discovery Widget page",
                    "durationInMillis": 193,
                    "start": 1491242999048,
                    "end": 1491242999241
                  },
                  {
                    "step": "And set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set Radius ｟19999｠ on Event Discovery Widget page",
                    "durationInMillis": 1094,
                    "start": 1491242999241,
                    "end": 1491243000335
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                    "durationInMillis": 70,
                    "start": 1491243000336,
                    "end": 1491243000406
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When change value of ZipCode 90015 on Event Discovery Widget Page",
                  "And use GeoPosition on Event Discovery Widget page",
                  "And set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "setValue",
                  "20000"
                ],
                [
                  "actualValue",
                  "19999"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4736,
                    "start": 1491243000472,
                    "end": 1491243005208
                  },
                  {
                    "step": "When change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 1215,
                    "start": 1491243005209,
                    "end": 1491243006424
                  },
                  {
                    "step": "And use GeoPosition on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And use GeoPosition on Event Discovery Widget page",
                    "durationInMillis": 616,
                    "start": 1491243006425,
                    "end": 1491243007041
                  },
                  {
                    "step": "And set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set Radius ｟20000｠ on Event Discovery Widget page",
                    "durationInMillis": 988,
                    "start": 1491243007041,
                    "end": 1491243008029
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                    "durationInMillis": 74,
                    "start": 1491243008029,
                    "end": 1491243008103
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When change value of ZipCode 90015 on Event Discovery Widget Page",
                  "And use GeoPosition on Event Discovery Widget page",
                  "And set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491243008171,
                  "end": 1491243008172
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 6874,
                  "start": 1491243008172,
                  "end": 1491243015046
                },
                {
                  "step": "When I click on the 'Get your own' link to get api key",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When I click on the 'Get your own' link to get api key",
                  "durationInMillis": 234,
                  "start": 1491243015047,
                  "end": 1491243015281
                },
                {
                  "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
                  "durationInMillis": 839,
                  "start": 1491243015282,
                  "end": 1491243016121
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 20,
                  "start": 1491243016121,
                  "end": 1491243016141
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243016141,
                  "end": 1491243016141
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "When I click on the 'Get your own' link to get api key",
                "Then The page is opened with url https://developer-acct.ticketmaster.com"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x600"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4426,
                    "start": 1491243016208,
                    "end": 1491243020634
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 299,
                    "start": 1491243020635,
                    "end": 1491243020934
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 501,
                    "start": 1491243020935,
                    "end": 1491243021436
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟300x600｠",
                    "durationInMillis": 737,
                    "start": 1491243021437,
                    "end": 1491243022174
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 995,
                    "start": 1491243022175,
                    "end": 1491243023170
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 225,
                    "start": 1491243023171,
                    "end": 1491243023396
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 236,
                    "start": 1491243023397,
                    "end": 1491243023633
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x250"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4897,
                    "start": 1491243023698,
                    "end": 1491243028595
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 402,
                    "start": 1491243028596,
                    "end": 1491243028998
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 408,
                    "start": 1491243028998,
                    "end": 1491243029406
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟300x250｠",
                    "durationInMillis": 792,
                    "start": 1491243029407,
                    "end": 1491243030199
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 882,
                    "start": 1491243030200,
                    "end": 1491243031082
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 566,
                    "start": 1491243031083,
                    "end": 1491243031649
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 173,
                    "start": 1491243031649,
                    "end": 1491243031822
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "custom"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5834,
                    "start": 1491243031889,
                    "end": 1491243037723
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 615,
                    "start": 1491243037724,
                    "end": 1491243038339
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 431,
                    "start": 1491243038339,
                    "end": 1491243038770
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟custom｠",
                    "durationInMillis": 708,
                    "start": 1491243038771,
                    "end": 1491243039479
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 911,
                    "start": 1491243039480,
                    "end": 1491243040391
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 295,
                    "start": 1491243040391,
                    "end": 1491243040686
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 68,
                    "start": 1491243040687,
                    "end": 1491243040755
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "orientation",
                  "horizontal"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 3901,
                    "start": 1491243040821,
                    "end": 1491243044722
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 518,
                    "start": 1491243044723,
                    "end": 1491243045241
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 478,
                    "start": 1491243045242,
                    "end": 1491243045720
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                    "durationInMillis": 745,
                    "start": 1491243045720,
                    "end": 1491243046465
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 1222,
                    "start": 1491243046466,
                    "end": 1491243047688
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 515,
                    "start": 1491243047689,
                    "end": 1491243048204
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 58,
                    "start": 1491243048205,
                    "end": 1491243048263
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            },
            {
              "parameters": [
                [
                  "orientation",
                  "vertical"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5302,
                    "start": 1491243048329,
                    "end": 1491243053631
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 177,
                    "start": 1491243053631,
                    "end": 1491243053808
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 505,
                    "start": 1491243053809,
                    "end": 1491243054314
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout orientation to ｟vertical｠",
                    "durationInMillis": 747,
                    "start": 1491243054315,
                    "end": 1491243055062
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 905,
                    "start": 1491243055062,
                    "end": 1491243055967
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 1011,
                    "start": 1491243055968,
                    "end": 1491243056979
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 58,
                    "start": 1491243056979,
                    "end": 1491243057037
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
              "Then the event message is shown \"Here other options for you.\""
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491243057101,
                  "end": 1491243057102
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 4519,
                  "start": 1491243057102,
                  "end": 1491243061621
                },
                {
                  "step": "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When search events by keyword ｟ABRAKADABRA｠ on Event Discovery Widget page",
                  "durationInMillis": 520,
                  "start": 1491243061622,
                  "end": 1491243062142
                },
                {
                  "step": "Then the event message is shown \"Here other options for you.\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"Here other options for you.\"",
                  "durationInMillis": 913,
                  "start": 1491243062143,
                  "end": 1491243063056
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22,
                  "start": 1491243063056,
                  "end": 1491243063078
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243063078,
                  "end": 1491243063078
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
                "Then the event message is shown \"Here other options for you.\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 172351,
        "start": 1491242890791,
        "end": 1491243063142
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/FeedbackWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "send feedback",
          "asA": "user of Ticketmaster Developer Portal",
          "iWantTo": "use the feedback widget\nand have ability to send feedback form to support",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(feedback widget) Check that Feedback widget Elements are shown",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And Feedback widget is not shown",
              "When click Feedback button of Tutorials Widgets page",
              "Then Feedback widget elements are shown"
            ]
          },
          {
            "title": "(feedback widget) Feedback widget Close button",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When click Feedback button of Tutorials Widgets page",
              "Then click close button of Feedback widget",
              "And Feedback widget is not shown"
            ]
          },
          {
            "title": "(feedback widget) Feedback widget error notifications for NAME field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Name are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          },
          {
            "title": "(feedback widget) Feedback widget error notifications for Email field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Email are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          }
        ],
        "name": "FeedbackWidget.story"
      },
      "localizedNarrative": "In order to send feedback\nAs a user of Ticketmaster Developer Portal\nI want to use the feedback widget\nand have ability to send feedback form to support",
      "allowed": true,
      "status": "PENDING",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(feedback widget) Check that Feedback widget Elements are shown",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And Feedback widget is not shown",
              "When click Feedback button of Tutorials Widgets page",
              "Then Feedback widget elements are shown"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243063145,
                  "end": 1491243063145
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 2016,
                  "start": 1491243063145,
                  "end": 1491243065161
                },
                {
                  "step": "And Feedback widget is not shown",
                  "type": "PENDING",
                  "throwable": {
                    "@class": "org.jbehave.core.failures.PendingStepFound",
                    "detailMessage": "And Feedback widget is not shown",
                    "stackTrace": [
                      "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                      "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                      "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "959e6a6a-5253-4ab9-9473-036bad834cb2"
                  },
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "When click Feedback button of Tutorials Widgets page",
                  "type": "NOT_PERFORMED",
                  "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "Then Feedback widget elements are shown",
                  "type": "PENDING",
                  "throwable": {
                    "@class": "org.jbehave.core.failures.PendingStepFound",
                    "detailMessage": "Then Feedback widget elements are shown",
                    "stackTrace": [
                      "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                      "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                      "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                      "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "8c954979-b2e5-4be1-8224-432bd3309dce"
                  },
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 11,
                  "start": 1491243065168,
                  "end": 1491243065179
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243065179,
                  "end": 1491243065179
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Check that Feedback widget Elements are shown",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "And Feedback widget is not shown",
                "When click Feedback button of Tutorials Widgets page",
                "Then Feedback widget elements are shown"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "PENDING"
        },
        {
          "scenario": {
            "title": "(feedback widget) Feedback widget Close button",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When click Feedback button of Tutorials Widgets page",
              "Then click close button of Feedback widget",
              "And Feedback widget is not shown"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243065240,
                  "end": 1491243065240
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 1651,
                  "start": 1491243065240,
                  "end": 1491243066891
                },
                {
                  "step": "When click Feedback button of Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 117,
                  "start": 1491243066892,
                  "end": 1491243067009
                },
                {
                  "step": "Then click close button of Feedback widget",
                  "type": "PENDING",
                  "throwable": {
                    "@class": "org.jbehave.core.failures.PendingStepFound",
                    "detailMessage": "Then click close button of Feedback widget",
                    "stackTrace": [
                      "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                      "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                      "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "d67c1649-667d-4d05-beaf-2c32b1abc41d"
                  },
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "And Feedback widget is not shown",
                  "type": "PENDING",
                  "throwable": {
                    "@class": "org.jbehave.core.failures.PendingStepFound",
                    "detailMessage": "And Feedback widget is not shown",
                    "stackTrace": [
                      "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                      "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                      "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                      "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "b229fbdf-434e-4a8e-8db9-77d1e5108644"
                  },
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 9,
                  "start": 1491243067011,
                  "end": 1491243067020
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243067020,
                  "end": 1491243067020
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Feedback widget Close button",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "When click Feedback button of Tutorials Widgets page",
                "Then click close button of Feedback widget",
                "And Feedback widget is not shown"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "PENDING"
        },
        {
          "scenario": {
            "title": "(feedback widget) Feedback widget error notifications for NAME field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Name are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243067081,
                  "end": 1491243067081
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 2204,
                  "start": 1491243067082,
                  "end": 1491243069286
                },
                {
                  "step": "And click Feedback button of Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 119,
                  "start": 1491243069286,
                  "end": 1491243069405
                },
                {
                  "step": "When all fields except Name are populated",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When all fields except Name are populated",
                  "durationInMillis": 826,
                  "start": 1491243069406,
                  "end": 1491243070232
                },
                {
                  "step": "And click send button of Feedback widget",
                  "type": "PENDING",
                  "throwable": {
                    "@class": "org.jbehave.core.failures.PendingStepFound",
                    "detailMessage": "And click send button of Feedback widget",
                    "stackTrace": [
                      "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                      "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                      "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "737e92ec-a302-4efa-9e8c-efbb9fbd1767"
                  },
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "Then error notification is shown for Feedback widget",
                  "type": "PENDING",
                  "throwable": {
                    "@class": "org.jbehave.core.failures.PendingStepFound",
                    "detailMessage": "Then error notification is shown for Feedback widget",
                    "stackTrace": [
                      "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                      "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                      "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                      "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "f4a178f5-0623-40c5-a4af-82430c286890"
                  },
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 8,
                  "start": 1491243070233,
                  "end": 1491243070241
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491243070241,
                  "end": 1491243070242
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Feedback widget error notifications for NAME field",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "And click Feedback button of Tutorials Widgets page",
                "When all fields except Name are populated",
                "And click send button of Feedback widget",
                "Then error notification is shown for Feedback widget"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "PENDING"
        },
        {
          "scenario": {
            "title": "(feedback widget) Feedback widget error notifications for Email field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Email are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491243070303,
                  "end": 1491243070304
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 1500,
                  "start": 1491243070304,
                  "end": 1491243071804
                },
                {
                  "step": "And click Feedback button of Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 132,
                  "start": 1491243071805,
                  "end": 1491243071937
                },
                {
                  "step": "When all fields except Email are populated",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When all fields except Email are populated",
                  "durationInMillis": 510,
                  "start": 1491243071938,
                  "end": 1491243072448
                },
                {
                  "step": "And click send button of Feedback widget",
                  "type": "PENDING",
                  "throwable": {
                    "@class": "org.jbehave.core.failures.PendingStepFound",
                    "detailMessage": "And click send button of Feedback widget",
                    "stackTrace": [
                      "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                      "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                      "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "7677c6d2-6c80-4130-ab93-bd86d6c70735"
                  },
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "Then error notification is shown for Feedback widget",
                  "type": "PENDING",
                  "throwable": {
                    "@class": "org.jbehave.core.failures.PendingStepFound",
                    "detailMessage": "Then error notification is shown for Feedback widget",
                    "stackTrace": [
                      "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                      "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                      "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                      "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "30275206-7f42-40c3-8839-dea6e9acbf6c"
                  },
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 9,
                  "start": 1491243072450,
                  "end": 1491243072459
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243072459,
                  "end": 1491243072459
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Feedback widget error notifications for Email field",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "And click Feedback button of Tutorials Widgets page",
                "When all fields except Email are populated",
                "And click send button of Feedback widget",
                "Then error notification is shown for Feedback widget"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "PENDING"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 9375,
        "start": 1491243063144,
        "end": 1491243072519
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/MapWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "setup Map Widget",
          "asA": "user of Ticketmaster Developer Portal",
          "iWantTo": "use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/map/) [3.7.1 Map widget : Check that required fields are not empty]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "Then the required fields are not empty on the Map Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/map/) [3.7.2 Map widget : Embedded code functionality works properly]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "And store all fields values on the Map Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values on the Map Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/map/) [3.7.3 Map widget : Check RESET button functionality]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And store values on Map Widget page: apiKey,keyword,zipCode",
              "And change values for on Map Widget page: apiKey,keyword,zipCode",
              "When click reset button",
              "Then values equals to stored values of fields on Map Widget page: apiKey,keyword,zipCode"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/map/) [3.7.4 Map widget : Check RESET button functionality on embedded pop-up window]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And store values on Map Widget page: apiKey,keyword,zipCode",
              "And change values for on Map Widget page: apiKey,keyword,zipCode",
              "When click reset button",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code on Map Widget contains stored values of: apiKey,keyword,zipCode"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/map/) [3.7.7 Map widget : Check links]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/map/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And enter custom ApiKey invalidApiKey123",
              "Then the event message is shown \"No results were found\""
            ]
          }
        ],
        "name": "MapWidget.story"
      },
      "localizedNarrative": "In order to setup Map Widget\nAs a user of Ticketmaster Developer Portal\nI want to use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/map/) [3.7.1 Map widget : Check that required fields are not empty]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "Then the required fields are not empty on the Map Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/MapWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491243072522,
                  "end": 1491243072523
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Map Widget page",
                  "durationInMillis": 4672,
                  "start": 1491243072523,
                  "end": 1491243077195
                },
                {
                  "step": "Then the required fields are not empty on the Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the required fields are not empty on the Map Widget page",
                  "durationInMillis": 129,
                  "start": 1491243077196,
                  "end": 1491243077325
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25,
                  "start": 1491243077326,
                  "end": 1491243077351
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243077351,
                  "end": 1491243077351
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/map/) [3.7.1 Map widget : Check that required fields are not empty]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Map Widget page",
                "Then the required fields are not empty on the Map Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/map/) [3.7.2 Map widget : Embedded code functionality works properly]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "And store all fields values on the Map Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values on the Map Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/MapWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491243077415,
                  "end": 1491243077416
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Map Widget page",
                  "durationInMillis": 3947,
                  "start": 1491243077416,
                  "end": 1491243081363
                },
                {
                  "step": "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change all possible fields on the Map Widget page:\n［|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |］",
                  "durationInMillis": 7124,
                  "start": 1491243081363,
                  "end": 1491243088487
                },
                {
                  "step": "And store all fields values on the Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store all fields values on the Map Widget page",
                  "durationInMillis": 536,
                  "start": 1491243088490,
                  "end": 1491243089026
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 956,
                  "start": 1491243089027,
                  "end": 1491243089983
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 385,
                  "start": 1491243089984,
                  "end": 1491243090369
                },
                {
                  "step": "And embedded html code contains stored values on the Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored values on the Map Widget page",
                  "durationInMillis": 1317,
                  "start": 1491243090370,
                  "end": 1491243091687
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 28,
                  "start": 1491243091688,
                  "end": 1491243091716
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243091716,
                  "end": 1491243091716
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/map/) [3.7.2 Map widget : Embedded code functionality works properly]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Map Widget page",
                "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
                "And store all fields values on the Map Widget page",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored values on the Map Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/map/) [3.7.3 Map widget : Check RESET button functionality]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And store values on Map Widget page: apiKey,keyword,zipCode",
              "And change values for on Map Widget page: apiKey,keyword,zipCode",
              "When click reset button",
              "Then values equals to stored values of fields on Map Widget page: apiKey,keyword,zipCode"
            ]
          },
          "storyPath": "stories/site/widgets/MapWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243091791,
                  "end": 1491243091791
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Map Widget page",
                  "durationInMillis": 6181,
                  "start": 1491243091792,
                  "end": 1491243097973
                },
                {
                  "step": "And store values on Map Widget page: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values on Map Widget page: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 237,
                  "start": 1491243097973,
                  "end": 1491243098210
                },
                {
                  "step": "And change values for on Map Widget page: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for on Map Widget page: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 2166,
                  "start": 1491243098211,
                  "end": 1491243100377
                },
                {
                  "step": "When click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click reset button",
                  "durationInMillis": 1713,
                  "start": 1491243100378,
                  "end": 1491243102091
                },
                {
                  "step": "Then values equals to stored values of fields on Map Widget page: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then values equals to stored values of fields on Map Widget page: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 540,
                  "start": 1491243102091,
                  "end": 1491243102631
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1491243102632,
                  "end": 1491243102656
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243102656,
                  "end": 1491243102656
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/map/) [3.7.3 Map widget : Check RESET button functionality]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Map Widget page",
                "And store values on Map Widget page: apiKey,keyword,zipCode",
                "And change values for on Map Widget page: apiKey,keyword,zipCode",
                "When click reset button",
                "Then values equals to stored values of fields on Map Widget page: apiKey,keyword,zipCode"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/map/) [3.7.4 Map widget : Check RESET button functionality on embedded pop-up window]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And store values on Map Widget page: apiKey,keyword,zipCode",
              "And change values for on Map Widget page: apiKey,keyword,zipCode",
              "When click reset button",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code on Map Widget contains stored values of: apiKey,keyword,zipCode"
            ]
          },
          "storyPath": "stories/site/widgets/MapWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491243102720,
                  "end": 1491243102721
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Map Widget page",
                  "durationInMillis": 2953,
                  "start": 1491243102721,
                  "end": 1491243105674
                },
                {
                  "step": "And store values on Map Widget page: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values on Map Widget page: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 1510,
                  "start": 1491243105675,
                  "end": 1491243107185
                },
                {
                  "step": "And change values for on Map Widget page: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for on Map Widget page: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 2547,
                  "start": 1491243107186,
                  "end": 1491243109733
                },
                {
                  "step": "When click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click reset button",
                  "durationInMillis": 1766,
                  "start": 1491243109734,
                  "end": 1491243111500
                },
                {
                  "step": "And click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click on \"Get code\" button",
                  "durationInMillis": 925,
                  "start": 1491243111501,
                  "end": 1491243112426
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 347,
                  "start": 1491243112427,
                  "end": 1491243112774
                },
                {
                  "step": "And embedded html code on Map Widget contains stored values of: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code on Map Widget contains stored values of: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 347,
                  "start": 1491243112775,
                  "end": 1491243113122
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 26,
                  "start": 1491243113123,
                  "end": 1491243113149
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491243113149,
                  "end": 1491243113150
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/map/) [3.7.4 Map widget : Check RESET button functionality on embedded pop-up window]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Map Widget page",
                "And store values on Map Widget page: apiKey,keyword,zipCode",
                "And change values for on Map Widget page: apiKey,keyword,zipCode",
                "When click reset button",
                "And click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code on Map Widget contains stored values of: apiKey,keyword,zipCode"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/map/) [3.7.7 Map widget : Check links]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          "storyPath": "stories/site/widgets/MapWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491243113213,
                  "end": 1491243113214
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Map Widget page",
                  "durationInMillis": 4103,
                  "start": 1491243113214,
                  "end": 1491243117317
                },
                {
                  "step": "When I click on the 'Get your own' link to get api key",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When I click on the 'Get your own' link to get api key",
                  "durationInMillis": 238,
                  "start": 1491243117318,
                  "end": 1491243117556
                },
                {
                  "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
                  "durationInMillis": 701,
                  "start": 1491243117557,
                  "end": 1491243118258
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 20,
                  "start": 1491243118259,
                  "end": 1491243118279
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243118279,
                  "end": 1491243118279
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/map/) [3.7.7 Map widget : Check links]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Map Widget page",
                "When I click on the 'Get your own' link to get api key",
                "Then The page is opened with url https://developer-acct.ticketmaster.com"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/map/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And enter custom ApiKey invalidApiKey123",
              "Then the event message is shown \"No results were found\""
            ]
          },
          "storyPath": "stories/site/widgets/MapWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1491243118342,
                  "end": 1491243118343
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Map Widget page",
                  "durationInMillis": 3712,
                  "start": 1491243118343,
                  "end": 1491243122055
                },
                {
                  "step": "And enter custom ApiKey invalidApiKey123",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And enter custom ApiKey ｟invalidApiKey123｠",
                  "durationInMillis": 259,
                  "start": 1491243122055,
                  "end": 1491243122314
                },
                {
                  "step": "Then the event message is shown \"No results were found\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"No results were found\"",
                  "durationInMillis": 844,
                  "start": 1491243122315,
                  "end": 1491243123159
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 18,
                  "start": 1491243123160,
                  "end": 1491243123178
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243123178,
                  "end": 1491243123178
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/map/) Event message - Check event message for invalid API Key",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Map Widget page",
                "And enter custom ApiKey invalidApiKey123",
                "Then the event message is shown \"No results were found\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 50720,
        "start": 1491243072522,
        "end": 1491243123242
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/SummaryWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Summary Widget for Tutorials Widgets Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then Summary widget is shown for Getting Started page"
            ]
          },
          {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then Summary widget is shown for Home page"
            ]
          },
          {
            "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then Summary widget is shown for API Explorer page"
            ]
          }
        ],
        "name": "SummaryWidget.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Summary Widget for Tutorials Widgets Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then Summary widget is shown for Getting Started page"
            ]
          },
          "storyPath": "stories/site/widgets/SummaryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243123245,
                  "end": 1491243123245
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Getting Started page",
                  "durationInMillis": 4914,
                  "start": 1491243123246,
                  "end": 1491243128160
                },
                {
                  "step": "Then Summary widget is shown for Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then Summary widget is shown for Getting Started page",
                  "durationInMillis": 78,
                  "start": 1491243128160,
                  "end": 1491243128238
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 20,
                  "start": 1491243128239,
                  "end": 1491243128259
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243128259,
                  "end": 1491243128259
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Getting Started page",
                "Then Summary widget is shown for Getting Started page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then Summary widget is shown for Home page"
            ]
          },
          "storyPath": "stories/site/widgets/SummaryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243128324,
                  "end": 1491243128324
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 3314,
                  "start": 1491243128324,
                  "end": 1491243131638
                },
                {
                  "step": "Then Summary widget is shown for Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then Summary widget is shown for Home page",
                  "durationInMillis": 79,
                  "start": 1491243131639,
                  "end": 1491243131718
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 122,
                  "start": 1491243131718,
                  "end": 1491243131840
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243131840,
                  "end": 1491243131840
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "Then Summary widget is shown for Home page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then Summary widget is shown for API Explorer page"
            ]
          },
          "storyPath": "stories/site/widgets/SummaryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243131904,
                  "end": 1491243131904
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open API Explorer page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open API Explorer page",
                  "durationInMillis": 3708,
                  "start": 1491243131905,
                  "end": 1491243135613
                },
                {
                  "step": "Then Summary widget is shown for API Explorer page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then Summary widget is shown for API Explorer page",
                  "durationInMillis": 124,
                  "start": 1491243135614,
                  "end": 1491243135738
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22,
                  "start": 1491243135739,
                  "end": 1491243135761
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1491243135761,
                  "end": 1491243135761
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open API Explorer page",
                "Then Summary widget is shown for API Explorer page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 13025,
        "start": 1491243123245,
        "end": 1491243136270
      },
      "givenStory": false
    }
  ],
  "scenarios": [
    {
      "scenario": {
        "title": "(/blogs/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Blogs page",
          "Then check general page elements for page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/Blogs.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21,
              "start": 1491241453609,
              "end": 1491241453630
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Blogs page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Blogs page",
              "durationInMillis": 5143,
              "start": 1491241453633,
              "end": 1491241458776
            },
            {
              "step": "Then check general page elements for page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 40319,
              "start": 1491241458780,
              "end": 1491241499099
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 55,
              "start": 1491241499101,
              "end": 1491241499156
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241499156,
              "end": 1491241499157
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/blogs/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Blogs page",
            "Then check general page elements for page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/events/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Events page",
          "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/Events.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 7,
              "start": 1491241499324,
              "end": 1491241499331
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Events page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Events page",
              "durationInMillis": 3490,
              "start": 1491241499331,
              "end": 1491241502821
            },
            {
              "step": "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Events Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10290,
              "start": 1491241502824,
              "end": 1491241513114
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 35,
              "start": 1491241513115,
              "end": 1491241513150
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491241513150,
              "end": 1491241513150
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/events/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Events page",
            "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/Home Page/) Verification for general page elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/Home.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241513224,
              "end": 1491241513225
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 3080,
              "start": 1491241513225,
              "end": 1491241516305
            },
            {
              "step": "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Home Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 20345,
              "start": 1491241516306,
              "end": 1491241536651
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 46,
              "start": 1491241536652,
              "end": 1491241536698
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241536698,
              "end": 1491241536699
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/Home Page/) Verification for general page elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/Home Page/) Verification for twitter's list of events",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "Then check that Twitter's list of events is shown"
        ]
      },
      "storyPath": "stories/site/Home.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241536773,
              "end": 1491241536774
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 3420,
              "start": 1491241536774,
              "end": 1491241540194
            },
            {
              "step": "Then check that Twitter's list of events is shown",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check that Twitter's list of events is shown",
              "durationInMillis": 213,
              "start": 1491241540195,
              "end": 1491241540408
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25,
              "start": 1491241540409,
              "end": 1491241540434
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491241540434,
              "end": 1491241540434
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/Home Page/) Verification for twitter's list of events",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "Then check that Twitter's list of events is shown"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/Home Page/) Verification for all the page links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "elementLocation"
          ],
          "data": [
            [
              [
                "elementKey",
                "Get Your API Key"
              ],
              [
                "pageURL",
                "https://developer-acct.ticketmaster.com/user/login"
              ],
              [
                "elementLocation",
                "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
              ]
            ],
            [
              [
                "elementKey",
                "Review Documentation"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/apis/getting-started/"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Explore The API"
              ],
              [
                "pageURL",
                "{url}/api-explorer/"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Android"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#android-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Backend"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#backend-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "iOS"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#iOS-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Web"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#web-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Tech blog"
              ],
              [
                "pageURL",
                "https://tech.ticketmaster.com/"
              ],
              [
                "elementLocation",
                "//h1[@class='site-title']/a"
              ]
            ],
            [
              [
                "elementKey",
                "Medium Publication"
              ],
              [
                "pageURL",
                "https://medium.com/ticketmaster-tech"
              ],
              [
                "elementLocation",
                "//h2[text()='Because Engineers are Fans Too!']"
              ]
            ],
            [
              [
                "elementKey",
                "Partner API"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/apis/partner/"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Legacy docs"
              ],
              [
                "pageURL",
                "http://apidocs.ticketmaster.com/"
              ],
              [
                "elementLocation",
                "//td[@class='WikiLogoName']/a"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When check visibility and click <elementKey> element of Home page",
          "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
        ]
      },
      "storyPath": "stories/site/Home.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Get Your API Key"
            ],
            [
              "pageURL",
              "https://developer-acct.ticketmaster.com/user/login"
            ],
            [
              "elementLocation",
              "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 5100,
                "start": 1491241540533,
                "end": 1491241545633
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Your API Key｠ element of Home page",
                "durationInMillis": 1723,
                "start": 1491241545634,
                "end": 1491241547357
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟https://developer-acct.ticketmaster.com/user/login｠ and ｟//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']｠",
                "durationInMillis": 255,
                "start": 1491241547359,
                "end": 1491241547614
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Review Documentation"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/apis/getting-started/"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3021,
                "start": 1491241547688,
                "end": 1491241550709
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Review Documentation｠ element of Home page",
                "durationInMillis": 1860,
                "start": 1491241550710,
                "end": 1491241552570
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/getting-started/｠ and ｟//h1｠",
                "durationInMillis": 636,
                "start": 1491241552571,
                "end": 1491241553207
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Explore The API"
            ],
            [
              "pageURL",
              "{url}/api-explorer/"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2566,
                "start": 1491241553414,
                "end": 1491241555980
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Explore The API｠ element of Home page",
                "durationInMillis": 1286,
                "start": 1491241555982,
                "end": 1491241557268
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/api-explorer/｠ and ｟//h1｠",
                "durationInMillis": 1457,
                "start": 1491241557270,
                "end": 1491241558727
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Android"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#android-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 5117,
                "start": 1491241558792,
                "end": 1491241563909
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Android｠ element of Home page",
                "durationInMillis": 1248,
                "start": 1491241563910,
                "end": 1491241565158
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#android-projects｠ and ｟//h1｠",
                "durationInMillis": 27,
                "start": 1491241565159,
                "end": 1491241565186
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Backend"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#backend-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3681,
                "start": 1491241565260,
                "end": 1491241568941
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Backend｠ element of Home page",
                "durationInMillis": 353,
                "start": 1491241568942,
                "end": 1491241569295
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#backend-projects｠ and ｟//h1｠",
                "durationInMillis": 25,
                "start": 1491241569296,
                "end": 1491241569321
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "iOS"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#iOS-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2212,
                "start": 1491241569384,
                "end": 1491241571596
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟iOS｠ element of Home page",
                "durationInMillis": 462,
                "start": 1491241571597,
                "end": 1491241572059
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#iOS-projects｠ and ｟//h1｠",
                "durationInMillis": 29,
                "start": 1491241572060,
                "end": 1491241572089
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Web"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#web-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 4429,
                "start": 1491241572411,
                "end": 1491241576840
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Web｠ element of Home page",
                "durationInMillis": 385,
                "start": 1491241576841,
                "end": 1491241577226
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#web-projects｠ and ｟//h1｠",
                "durationInMillis": 28,
                "start": 1491241577228,
                "end": 1491241577256
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Tech blog"
            ],
            [
              "pageURL",
              "https://tech.ticketmaster.com/"
            ],
            [
              "elementLocation",
              "//h1[@class='site-title']/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 4901,
                "start": 1491241577321,
                "end": 1491241582222
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Tech blog｠ element of Home page",
                "durationInMillis": 3097,
                "start": 1491241582223,
                "end": 1491241585320
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟https://tech.ticketmaster.com/｠ and ｟//h1[@class='site-title']/a｠",
                "durationInMillis": 268,
                "start": 1491241585322,
                "end": 1491241585590
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Medium Publication"
            ],
            [
              "pageURL",
              "https://medium.com/ticketmaster-tech"
            ],
            [
              "elementLocation",
              "//h2[text()='Because Engineers are Fans Too!']"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2681,
                "start": 1491241585691,
                "end": 1491241588372
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Medium Publication｠ element of Home page",
                "durationInMillis": 1464,
                "start": 1491241588373,
                "end": 1491241589837
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟https://medium.com/ticketmaster-tech｠ and ｟//h2[text()='Because Engineers are Fans Too!']｠",
                "durationInMillis": 32,
                "start": 1491241589838,
                "end": 1491241589870
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Partner API"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/apis/partner/"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2081,
                "start": 1491241589935,
                "end": 1491241592016
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Partner API｠ element of Home page",
                "durationInMillis": 1758,
                "start": 1491241592017,
                "end": 1491241593775
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/partner/｠ and ｟//h1｠",
                "durationInMillis": 78,
                "start": 1491241593776,
                "end": 1491241593854
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Legacy docs"
            ],
            [
              "pageURL",
              "http://apidocs.ticketmaster.com/"
            ],
            [
              "elementLocation",
              "//td[@class='WikiLogoName']/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2371,
                "start": 1491241593932,
                "end": 1491241596303
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Legacy docs｠ element of Home page",
                "durationInMillis": 1859,
                "start": 1491241596305,
                "end": 1491241598164
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://apidocs.ticketmaster.com/｠ and ｟//td[@class='WikiLogoName']/a｠",
                "durationInMillis": 25,
                "start": 1491241598165,
                "end": 1491241598190
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/blogs/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Open Source"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/"
              ],
              [
                "pageTitle",
                "//h1[@id='logo']"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When check visibility and click <elementKey> element of Home page",
          "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/OpenSource.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Open Source"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/"
            ],
            [
              "pageTitle",
              "//h1[@id='logo']"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2838,
                "start": 1491241598261,
                "end": 1491241601099
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Open Source｠ element of Home page",
                "durationInMillis": 303,
                "start": 1491241601100,
                "end": 1491241601403
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/｠ and ｟//h1[@id='logo']｠",
                "durationInMillis": 21,
                "start": 1491241601404,
                "end": 1491241601425
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Open Source"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/"
                  ],
                  [
                    "pageTitle",
                    "//h1[@id='logo']"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/search/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "| searchRequest |\n|      test     |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "searchRequest"
          ],
          "data": [
            [
              [
                "searchRequest",
                "test"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "And insert Search Parameter <searchRequest> and navigate to Search page",
          "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/Search.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "searchRequest",
              "test"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3777,
                "start": 1491241601494,
                "end": 1491241605271
              },
              {
                "step": "And insert Search Parameter <searchRequest> and navigate to Search page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And insert Search Parameter ｟test｠ and navigate to Search page",
                "durationInMillis": 355,
                "start": 1491241605272,
                "end": 1491241605627
              },
              {
                "step": "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check general page elements for Search Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                "durationInMillis": 21989,
                "start": 1491241605628,
                "end": 1491241627617
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "| searchRequest |\n|      test     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "searchRequest"
              ],
              "data": [
                [
                  [
                    "searchRequest",
                    "test"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "And insert Search Parameter <searchRequest> and navigate to Search page",
              "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Then check general page elements for Pantheon Create New Account page"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 3066,
              "start": 1491241627690,
              "end": 1491241630756
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 2882,
              "start": 1491241630758,
              "end": 1491241633640
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 933,
              "start": 1491241633641,
              "end": 1491241634574
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241634575,
              "end": 1491241634576
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Then check general page elements for Pantheon Create New Account page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon Create New Account page",
              "durationInMillis": 20229,
              "start": 1491241634576,
              "end": 1491241654805
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25,
              "start": 1491241654805,
              "end": 1491241654830
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491241654830,
              "end": 1491241654830
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Then check general page elements for Pantheon Create New Account page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.14 Create New Account - fail the CAPTCHA check]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
          "When click checkbox Terms of Use",
          "When click Create New Account on Register Page",
          "Then the message The answer you entered for the CAPTCHA was not correct. is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2839,
              "start": 1491241654901,
              "end": 1491241657740
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1114,
              "start": 1491241657740,
              "end": 1491241658854
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 886,
              "start": 1491241658855,
              "end": 1491241659741
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491241659742,
              "end": 1491241659742
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|］",
              "durationInMillis": 677,
              "start": 1491241659743,
              "end": 1491241660420
            },
            {
              "step": "When click checkbox Terms of Use",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click checkbox Terms of Use",
              "durationInMillis": 115,
              "start": 1491241660423,
              "end": 1491241660538
            },
            {
              "step": "When click Create New Account on Register Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Create New Account on Register Page",
              "durationInMillis": 1523,
              "start": 1491241660538,
              "end": 1491241662061
            },
            {
              "step": "Then the message The answer you entered for the CAPTCHA was not correct. is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟The answer you entered for the CAPTCHA was not correct.｠ is displayed",
              "durationInMillis": 45,
              "start": 1491241662062,
              "end": 1491241662107
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23,
              "start": 1491241662108,
              "end": 1491241662131
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241662131,
              "end": 1491241662132
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.14 Create New Account - fail the CAPTCHA check]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
            "When click checkbox Terms of Use",
            "When click Create New Account on Register Page",
            "Then the message The answer you entered for the CAPTCHA was not correct. is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.31 Edit Profile - I Agree To The Terms & Conditions checkbox]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
          "When click Create New Account on Register Page",
          "Then the message I agree to the Terms of Use field is required. is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2009,
              "start": 1491241662199,
              "end": 1491241664208
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 969,
              "start": 1491241664209,
              "end": 1491241665178
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 878,
              "start": 1491241665178,
              "end": 1491241666056
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241666057,
              "end": 1491241666058
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|］",
              "durationInMillis": 650,
              "start": 1491241666058,
              "end": 1491241666708
            },
            {
              "step": "When click Create New Account on Register Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Create New Account on Register Page",
              "durationInMillis": 1751,
              "start": 1491241666709,
              "end": 1491241668460
            },
            {
              "step": "Then the message I agree to the Terms of Use field is required. is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟I agree to the Terms of Use field is required.｠ is displayed",
              "durationInMillis": 145,
              "start": 1491241668461,
              "end": 1491241668606
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1491241668606,
              "end": 1491241668630
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491241668630,
              "end": 1491241668630
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.31 Edit Profile - I Agree To The Terms & Conditions checkbox]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
            "When click Create New Account on Register Page",
            "Then the message I agree to the Terms of Use field is required. is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - First Name validation]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|          |adele   |corporation|company.com   |maamxde |bx@gmail.com|",
          "When click checkbox Terms of Use",
          "When click Create New Account on Register Page",
          "Then the message First Name field is required. is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2025,
              "start": 1491241668696,
              "end": 1491241670721
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 936,
              "start": 1491241670722,
              "end": 1491241671658
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 871,
              "start": 1491241671659,
              "end": 1491241672530
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241672531,
              "end": 1491241672532
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|          |adele   |corporation|company.com   |maamxde |bx@gmail.com|",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|          |adele   |corporation|company.com   |maamxde |bx@gmail.com|］",
              "durationInMillis": 669,
              "start": 1491241672532,
              "end": 1491241673201
            },
            {
              "step": "When click checkbox Terms of Use",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click checkbox Terms of Use",
              "durationInMillis": 114,
              "start": 1491241673202,
              "end": 1491241673316
            },
            {
              "step": "When click Create New Account on Register Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Create New Account on Register Page",
              "durationInMillis": 866,
              "start": 1491241673317,
              "end": 1491241674183
            },
            {
              "step": "Then the message First Name field is required. is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟First Name field is required.｠ is displayed",
              "durationInMillis": 141,
              "start": 1491241674184,
              "end": 1491241674325
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 27,
              "start": 1491241674325,
              "end": 1491241674352
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241674352,
              "end": 1491241674353
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - First Name validation]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|          |adele   |corporation|company.com   |maamxde |bx@gmail.com|",
            "When click checkbox Terms of Use",
            "When click Create New Account on Register Page",
            "Then the message First Name field is required. is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |        |corporation|company.com   |maamxde |bx@gmail.com|",
          "When click checkbox Terms of Use",
          "When click Create New Account on Register Page",
          "Then the message Last Name field is required. is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 1996,
              "start": 1491241674418,
              "end": 1491241676414
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 911,
              "start": 1491241676415,
              "end": 1491241677326
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 890,
              "start": 1491241677327,
              "end": 1491241678217
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241678217,
              "end": 1491241678218
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |        |corporation|company.com   |maamxde |bx@gmail.com|",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |        |corporation|company.com   |maamxde |bx@gmail.com|］",
              "durationInMillis": 642,
              "start": 1491241678219,
              "end": 1491241678861
            },
            {
              "step": "When click checkbox Terms of Use",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click checkbox Terms of Use",
              "durationInMillis": 121,
              "start": 1491241678863,
              "end": 1491241678984
            },
            {
              "step": "When click Create New Account on Register Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Create New Account on Register Page",
              "durationInMillis": 850,
              "start": 1491241678985,
              "end": 1491241679835
            },
            {
              "step": "Then the message Last Name field is required. is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟Last Name field is required.｠ is displayed",
              "durationInMillis": 145,
              "start": 1491241679836,
              "end": 1491241679981
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1491241679982,
              "end": 1491241680006
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491241680006,
              "end": 1491241680006
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |        |corporation|company.com   |maamxde |bx@gmail.com|",
            "When click checkbox Terms of Use",
            "When click Create New Account on Register Page",
            "Then the message Last Name field is required. is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |           |company.com   |maamxde |bx@gmail.com|",
          "When click checkbox Terms of Use",
          "When click Create New Account on Register Page",
          "Then the message Company Name field is required. is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2773,
              "start": 1491241680075,
              "end": 1491241682848
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 836,
              "start": 1491241682849,
              "end": 1491241683685
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 890,
              "start": 1491241683686,
              "end": 1491241684576
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241684576,
              "end": 1491241684577
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |           |company.com   |maamxde |bx@gmail.com|",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |           |company.com   |maamxde |bx@gmail.com|］",
              "durationInMillis": 635,
              "start": 1491241684578,
              "end": 1491241685213
            },
            {
              "step": "When click checkbox Terms of Use",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click checkbox Terms of Use",
              "durationInMillis": 115,
              "start": 1491241685215,
              "end": 1491241685330
            },
            {
              "step": "When click Create New Account on Register Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Create New Account on Register Page",
              "durationInMillis": 852,
              "start": 1491241685330,
              "end": 1491241686182
            },
            {
              "step": "Then the message Company Name field is required. is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟Company Name field is required.｠ is displayed",
              "durationInMillis": 147,
              "start": 1491241686183,
              "end": 1491241686330
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25,
              "start": 1491241686331,
              "end": 1491241686356
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491241686356,
              "end": 1491241686356
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |           |company.com   |maamxde |bx@gmail.com|",
            "When click checkbox Terms of Use",
            "When click Create New Account on Register Page",
            "Then the message Company Name field is required. is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Site URL validation]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|              |maamxde |bx@gmail.com|",
          "When click checkbox Terms of Use",
          "When click Create New Account on Register Page",
          "Then the message Company Site URL field is required. is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 3657,
              "start": 1491241686422,
              "end": 1491241690079
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 822,
              "start": 1491241690080,
              "end": 1491241690902
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 834,
              "start": 1491241690903,
              "end": 1491241691737
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241691738,
              "end": 1491241691739
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|              |maamxde |bx@gmail.com|",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|              |maamxde |bx@gmail.com|］",
              "durationInMillis": 648,
              "start": 1491241691739,
              "end": 1491241692387
            },
            {
              "step": "When click checkbox Terms of Use",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click checkbox Terms of Use",
              "durationInMillis": 116,
              "start": 1491241692389,
              "end": 1491241692505
            },
            {
              "step": "When click Create New Account on Register Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Create New Account on Register Page",
              "durationInMillis": 874,
              "start": 1491241692506,
              "end": 1491241693380
            },
            {
              "step": "Then the message Company Site URL field is required. is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟Company Site URL field is required.｠ is displayed",
              "durationInMillis": 143,
              "start": 1491241693381,
              "end": 1491241693524
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25,
              "start": 1491241693525,
              "end": 1491241693550
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241693550,
              "end": 1491241693551
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Site URL validation]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|              |maamxde |bx@gmail.com|",
            "When click checkbox Terms of Use",
            "When click Create New Account on Register Page",
            "Then the message Company Site URL field is required. is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Username validation]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|company.com   |        |bx@gmail.com|",
          "When click checkbox Terms of Use",
          "When click Create New Account on Register Page",
          "Then the message Username field is required. is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2385,
              "start": 1491241693624,
              "end": 1491241696009
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 840,
              "start": 1491241696010,
              "end": 1491241696850
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 840,
              "start": 1491241696851,
              "end": 1491241697691
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241697692,
              "end": 1491241697693
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|company.com   |        |bx@gmail.com|",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|company.com   |        |bx@gmail.com|］",
              "durationInMillis": 636,
              "start": 1491241697693,
              "end": 1491241698329
            },
            {
              "step": "When click checkbox Terms of Use",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click checkbox Terms of Use",
              "durationInMillis": 123,
              "start": 1491241698331,
              "end": 1491241698454
            },
            {
              "step": "When click Create New Account on Register Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Create New Account on Register Page",
              "durationInMillis": 858,
              "start": 1491241698455,
              "end": 1491241699313
            },
            {
              "step": "Then the message Username field is required. is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟Username field is required.｠ is displayed",
              "durationInMillis": 147,
              "start": 1491241699314,
              "end": 1491241699461
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 29,
              "start": 1491241699461,
              "end": 1491241699490
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241699490,
              "end": 1491241699491
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Username validation]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|company.com   |        |bx@gmail.com|",
            "When click checkbox Terms of Use",
            "When click Create New Account on Register Page",
            "Then the message Username field is required. is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Email validation]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |            |",
          "When click checkbox Terms of Use",
          "When click Create New Account on Register Page",
          "Then the message E-mail address field is required. is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 1996,
              "start": 1491241699557,
              "end": 1491241701553
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1276,
              "start": 1491241701554,
              "end": 1491241702830
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 821,
              "start": 1491241702830,
              "end": 1491241703651
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241703652,
              "end": 1491241703653
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |            |",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |            |］",
              "durationInMillis": 619,
              "start": 1491241703653,
              "end": 1491241704272
            },
            {
              "step": "When click checkbox Terms of Use",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click checkbox Terms of Use",
              "durationInMillis": 112,
              "start": 1491241704274,
              "end": 1491241704386
            },
            {
              "step": "When click Create New Account on Register Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Create New Account on Register Page",
              "durationInMillis": 834,
              "start": 1491241704387,
              "end": 1491241705221
            },
            {
              "step": "Then the message E-mail address field is required. is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟E-mail address field is required.｠ is displayed",
              "durationInMillis": 141,
              "start": 1491241705221,
              "end": 1491241705362
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21,
              "start": 1491241705363,
              "end": 1491241705384
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491241705384,
              "end": 1491241705384
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Email validation]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |            |",
            "When click checkbox Terms of Use",
            "When click Create New Account on Register Page",
            "Then the message E-mail address field is required. is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "When navigate to Pantheon User Account page from LogIn page",
          "When navigate to Pantheon Edit Profile page from User Account page",
          "Then check general page elements for Pantheon Edit Profile page"
        ]
      },
      "storyPath": "stories/site/pantheon/EditProfile.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241705451,
              "end": 1491241705452
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 1897,
              "start": 1491241705452,
              "end": 1491241707349
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 941,
              "start": 1491241707349,
              "end": 1491241708290
            },
            {
              "step": "When navigate to Pantheon User Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
              "durationInMillis": 4666,
              "start": 1491241708291,
              "end": 1491241712957
            },
            {
              "step": "When navigate to Pantheon Edit Profile page from User Account page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Edit Profile page from User Account page",
              "durationInMillis": 3897,
              "start": 1491241712958,
              "end": 1491241716855
            },
            {
              "step": "Then check general page elements for Pantheon Edit Profile page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon Edit Profile page",
              "durationInMillis": 20295,
              "start": 1491241716856,
              "end": 1491241737151
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 34,
              "start": 1491241737152,
              "end": 1491241737186
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491241737186,
              "end": 1491241737186
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "When navigate to Pantheon User Account page from LogIn page",
            "When navigate to Pantheon Edit Profile page from User Account page",
            "Then check general page elements for Pantheon Edit Profile page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "When navigate to Pantheon Request New Password page from LogIn page",
          "Then check general page elements for Pantheon Request New Password page"
        ]
      },
      "storyPath": "stories/site/pantheon/RequestNewPassword.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491241737258,
              "end": 1491241737258
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2404,
              "start": 1491241737258,
              "end": 1491241739662
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 980,
              "start": 1491241739663,
              "end": 1491241740643
            },
            {
              "step": "When navigate to Pantheon Request New Password page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Request New Password page from LogIn page",
              "durationInMillis": 345,
              "start": 1491241740644,
              "end": 1491241740989
            },
            {
              "step": "Then check general page elements for Pantheon Request New Password page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon Request New Password page",
              "durationInMillis": 20347,
              "start": 1491241740990,
              "end": 1491241761337
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22,
              "start": 1491241761338,
              "end": 1491241761360
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241761360,
              "end": 1491241761361
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "When navigate to Pantheon Request New Password page from LogIn page",
            "Then check general page elements for Pantheon Request New Password page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [2.2.3.4 Login - Password field - enter valid password]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "When navigate to Pantheon User Account page from LogIn page",
          "Then check general page elements for Pantheon User Account page"
        ]
      },
      "storyPath": "stories/site/pantheon/UserAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 2,
              "start": 1491241761435,
              "end": 1491241761437
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2829,
              "start": 1491241761437,
              "end": 1491241764266
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1054,
              "start": 1491241764267,
              "end": 1491241765321
            },
            {
              "step": "When navigate to Pantheon User Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
              "durationInMillis": 5136,
              "start": 1491241765322,
              "end": 1491241770458
            },
            {
              "step": "Then check general page elements for Pantheon User Account page",
              "type": "FAILED",
              "throwable": {
                "detailMessage": "Then check general page elements for Pantheon User Account page",
                "cause": {
                  "@class": "org.junit.ComparisonFailure",
                  "detailMessage": "",
                  "stackTrace": [
                    "org.junit.Assert.assertEquals(Assert.java:115)",
                    "org.junit.Assert.assertEquals(Assert.java:144)",
                    "bla.tm.steps.pantheon.UserAccountSteps.checkIfTitleIsCorrect(UserAccountSteps.java:25)",
                    "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$4d58fb7e.CGLIB$checkIfTitleIsCorrect$1(<generated>)",
                    "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$4d58fb7e$$FastClassByCGLIB$$301e3b88.invoke(<generated>)",
                    "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                    "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                    "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                    "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                    "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                    "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                    "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$4d58fb7e.checkIfTitleIsCorrect(<generated>)",
                    "bla.tm.definitions.site.pantheon.UserAccountDefinition.checkGeneralPageElements(UserAccountDefinition.java:27)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                    "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                    "java.lang.reflect.Method.invoke(Method.java:483)",
                    "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "fExpected": "There are no applications here.\nCreate something!",
                  "fActual": "THESE ARE YOUR APPS!\nEXPLORE THEM!"
                },
                "stackTrace": [
                  "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                  "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "489d2f0f-82b6-46c5-99b7-73b80822013e"
              },
              "parametrisedStep": "Then check general page elements for Pantheon User Account page",
              "durationInMillis": 681,
              "start": 1491241770459,
              "end": 1491241771140
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 19,
              "start": 1491241771150,
              "end": 1491241771169
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491241771169,
              "end": 1491241771169
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [2.2.3.4 Login - Password field - enter valid password]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "When navigate to Pantheon User Account page from LogIn page",
            "Then check general page elements for Pantheon User Account page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "FAILED"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/1554/apps/add) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When navigate to Pantheon Add New App page from User Account page",
          "Then check general page elements for Pantheon Add New App page"
        ]
      },
      "storyPath": "stories/site/pantheon/UserApps.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2341,
              "start": 1491241772011,
              "end": 1491241774352
            },
            {
              "step": "And navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1023,
              "start": 1491241774355,
              "end": 1491241775378
            },
            {
              "step": "And navigate to Pantheon User Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
              "durationInMillis": 4615,
              "start": 1491241775378,
              "end": 1491241779993
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241779993,
              "end": 1491241779994
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When navigate to Pantheon Add New App page from User Account page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Add New App page from User Account page",
              "durationInMillis": 2302,
              "start": 1491241779995,
              "end": 1491241782297
            },
            {
              "step": "Then check general page elements for Pantheon Add New App page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon Add New App page",
              "durationInMillis": 20427,
              "start": 1491241782298,
              "end": 1491241802725
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 26,
              "start": 1491241802725,
              "end": 1491241802751
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241802751,
              "end": 1491241802752
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/1554/apps/add) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When navigate to Pantheon Add New App page from User Account page",
            "Then check general page elements for Pantheon Add New App page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(Pantheon|Add new App) Add new App negative [2.1.15 Add New App - The required field is empty]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|appFormField     |appName                  |message                                    |\n|Application name |mamaxF-Appd2             |Callback URL is required for Oauth Product |\n|Redirect URI     |https://ticketmaster.com |Application name field is required.        |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "appFormField",
            "appName",
            "message"
          ],
          "data": [
            [
              [
                "appFormField",
                "Application name"
              ],
              [
                "appName",
                "mamaxF-Appd2"
              ],
              [
                "message",
                "Callback URL is required for Oauth Product"
              ]
            ],
            [
              [
                "appFormField",
                "Redirect URI"
              ],
              [
                "appName",
                "https://ticketmaster.com"
              ],
              [
                "message",
                "Application name field is required."
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given navigate to Pantheon Add New App page from User Account page",
          "When enter to the field <appFormField> value <appName>",
          "When save changes on Edit App Page",
          "Then the message <message> is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/UserApps.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "appFormField",
              "Application name"
            ],
            [
              "appName",
              "mamaxF-Appd2"
            ],
            [
              "message",
              "Callback URL is required for Oauth Product"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2117,
                "start": 1491241802818,
                "end": 1491241804935
              },
              {
                "step": "And navigate to Pantheon LogIn page from Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                "durationInMillis": 963,
                "start": 1491241804936,
                "end": 1491241805899
              },
              {
                "step": "And navigate to Pantheon User Account page from LogIn page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                "durationInMillis": 4331,
                "start": 1491241805899,
                "end": 1491241810230
              }
            ]
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given navigate to Pantheon Add New App page from User Account page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given navigate to Pantheon Add New App page from User Account page",
                "durationInMillis": 1948,
                "start": 1491241810231,
                "end": 1491241812179
              },
              {
                "step": "When enter to the field <appFormField> value <appName>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When enter to the field ｟Application name｠ value ｟mamaxF-Appd2｠",
                "durationInMillis": 217,
                "start": 1491241812180,
                "end": 1491241812397
              },
              {
                "step": "When save changes on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When save changes on Edit App Page",
                "durationInMillis": 1975,
                "start": 1491241812398,
                "end": 1491241814373
              },
              {
                "step": "Then the message <message> is displayed",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the message ｟Callback URL is required for Oauth Product｠ is displayed",
                "durationInMillis": 655,
                "start": 1491241814373,
                "end": 1491241815028
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(Pantheon|Add new App) Add new App negative [2.1.15 Add New App - The required field is empty]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |appName                  |message                                    |\n|Application name |mamaxF-Appd2             |Callback URL is required for Oauth Product |\n|Redirect URI     |https://ticketmaster.com |Application name field is required.        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "appName",
                "message"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "appName",
                    "mamaxF-Appd2"
                  ],
                  [
                    "message",
                    "Callback URL is required for Oauth Product"
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "appName",
                    "https://ticketmaster.com"
                  ],
                  [
                    "message",
                    "Application name field is required."
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to Pantheon Add New App page from User Account page",
              "When enter to the field <appFormField> value <appName>",
              "When save changes on Edit App Page",
              "Then the message <message> is displayed"
            ]
          }
        },
        {
          "parameters": [
            [
              "appFormField",
              "Redirect URI"
            ],
            [
              "appName",
              "https://ticketmaster.com"
            ],
            [
              "message",
              "Application name field is required."
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2367,
                "start": 1491241815096,
                "end": 1491241817463
              },
              {
                "step": "And navigate to Pantheon LogIn page from Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                "durationInMillis": 1036,
                "start": 1491241817464,
                "end": 1491241818500
              },
              {
                "step": "And navigate to Pantheon User Account page from LogIn page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                "durationInMillis": 4833,
                "start": 1491241818501,
                "end": 1491241823334
              }
            ]
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given navigate to Pantheon Add New App page from User Account page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given navigate to Pantheon Add New App page from User Account page",
                "durationInMillis": 2072,
                "start": 1491241823335,
                "end": 1491241825407
              },
              {
                "step": "When enter to the field <appFormField> value <appName>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When enter to the field ｟Redirect URI｠ value ｟https://ticketmaster.com｠",
                "durationInMillis": 381,
                "start": 1491241825408,
                "end": 1491241825789
              },
              {
                "step": "When save changes on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When save changes on Edit App Page",
                "durationInMillis": 1930,
                "start": 1491241825790,
                "end": 1491241827720
              },
              {
                "step": "Then the message <message> is displayed",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the message ｟Application name field is required.｠ is displayed",
                "durationInMillis": 873,
                "start": 1491241827721,
                "end": 1491241828594
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(Pantheon|Add new App) Add new App negative [2.1.15 Add New App - The required field is empty]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |appName                  |message                                    |\n|Application name |mamaxF-Appd2             |Callback URL is required for Oauth Product |\n|Redirect URI     |https://ticketmaster.com |Application name field is required.        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "appName",
                "message"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "appName",
                    "mamaxF-Appd2"
                  ],
                  [
                    "message",
                    "Callback URL is required for Oauth Product"
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "appName",
                    "https://ticketmaster.com"
                  ],
                  [
                    "message",
                    "Application name field is required."
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to Pantheon Add New App page from User Account page",
              "When enter to the field <appFormField> value <appName>",
              "When save changes on Edit App Page",
              "Then the message <message> is displayed"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(Pantheon|Add new App) [2.1.5 Add new App with values positive]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given navigate to Pantheon Add New App page from User Account page",
          "When enter to the field Application name value uniqueApp",
          "When enter to the field Redirect URI value https://oauth.ticketmaster.com",
          "And save changes on Edit App Page",
          "Then the message App Created! is displayed",
          "Then open my Apps page",
          "And the App is appeared in the list of apps"
        ]
      },
      "storyPath": "stories/site/pantheon/UserApps.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 3246,
              "start": 1491241828665,
              "end": 1491241831911
            },
            {
              "step": "And navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1343,
              "start": 1491241831911,
              "end": 1491241833254
            },
            {
              "step": "And navigate to Pantheon User Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
              "durationInMillis": 5050,
              "start": 1491241833254,
              "end": 1491241838304
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491241838305,
              "end": 1491241838305
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given navigate to Pantheon Add New App page from User Account page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given navigate to Pantheon Add New App page from User Account page",
              "durationInMillis": 1876,
              "start": 1491241838306,
              "end": 1491241840182
            },
            {
              "step": "When enter to the field Application name value uniqueApp",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter to the field ｟Application name｠ value ｟uniqueApp｠",
              "durationInMillis": 202,
              "start": 1491241840182,
              "end": 1491241840384
            },
            {
              "step": "When enter to the field Redirect URI value https://oauth.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter to the field ｟Redirect URI｠ value ｟https://oauth.ticketmaster.com｠",
              "durationInMillis": 131,
              "start": 1491241840385,
              "end": 1491241840516
            },
            {
              "step": "And save changes on Edit App Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And save changes on Edit App Page",
              "durationInMillis": 9743,
              "start": 1491241840517,
              "end": 1491241850260
            },
            {
              "step": "Then the message App Created! is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟App Created!｠ is displayed",
              "durationInMillis": 661,
              "start": 1491241850261,
              "end": 1491241850922
            },
            {
              "step": "Then open my Apps page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then open my Apps page",
              "durationInMillis": 113,
              "start": 1491241850923,
              "end": 1491241851036
            },
            {
              "step": "And the App is appeared in the list of apps",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And the App is appeared in the list of apps",
              "durationInMillis": 189,
              "start": 1491241851036,
              "end": 1491241851225
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 78,
              "start": 1491241851226,
              "end": 1491241851304
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491241851304,
              "end": 1491241851304
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(Pantheon|Add new App) [2.1.5 Add new App with values positive]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given navigate to Pantheon Add New App page from User Account page",
            "When enter to the field Application name value uniqueApp",
            "When enter to the field Redirect URI value https://oauth.ticketmaster.com",
            "And save changes on Edit App Page",
            "Then the message App Created! is displayed",
            "Then open my Apps page",
            "And the App is appeared in the list of apps"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(Pantheon|Edit App) Edit app with empty required fields negative",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|appFormField     |formError                                  |\n|Application name |Application name field is required.        |\n|Redirect URI     |Callback URL is required for Oauth Product |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "appFormField",
            "formError"
          ],
          "data": [
            [
              [
                "appFormField",
                "Application name"
              ],
              [
                "formError",
                "Application name field is required."
              ]
            ],
            [
              [
                "appFormField",
                "Redirect URI"
              ],
              [
                "formError",
                "Callback URL is required for Oauth Product"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open my Apps page",
          "And open Edit App Page for the first application",
          "When clear field <appFormField> on Edit App Page",
          "And save changes on Edit App Page",
          "Then the message <formError> is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/UserApps.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "appFormField",
              "Application name"
            ],
            [
              "formError",
              "Application name field is required."
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 4102,
                "start": 1491241851373,
                "end": 1491241855475
              },
              {
                "step": "And navigate to Pantheon LogIn page from Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                "durationInMillis": 1079,
                "start": 1491241855476,
                "end": 1491241856555
              },
              {
                "step": "And navigate to Pantheon User Account page from LogIn page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                "durationInMillis": 5329,
                "start": 1491241856556,
                "end": 1491241861885
              }
            ]
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open my Apps page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open my Apps page",
                "durationInMillis": 272,
                "start": 1491241861885,
                "end": 1491241862157
              },
              {
                "step": "And open Edit App Page for the first application",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And open Edit App Page for the first application",
                "durationInMillis": 258,
                "start": 1491241862158,
                "end": 1491241862416
              },
              {
                "step": "When clear field <appFormField> on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When clear field ｟Application name｠ on Edit App Page",
                "durationInMillis": 3170,
                "start": 1491241862416,
                "end": 1491241865586
              },
              {
                "step": "And save changes on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And save changes on Edit App Page",
                "durationInMillis": 3839,
                "start": 1491241865587,
                "end": 1491241869426
              },
              {
                "step": "Then the message <formError> is displayed",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the message ｟Application name field is required.｠ is displayed",
                "durationInMillis": 541,
                "start": 1491241869427,
                "end": 1491241869968
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(Pantheon|Edit App) Edit app with empty required fields negative",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |formError                                  |\n|Application name |Application name field is required.        |\n|Redirect URI     |Callback URL is required for Oauth Product |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "formError"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "formError",
                    "Application name field is required."
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "formError",
                    "Callback URL is required for Oauth Product"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "And open Edit App Page for the first application",
              "When clear field <appFormField> on Edit App Page",
              "And save changes on Edit App Page",
              "Then the message <formError> is displayed"
            ]
          }
        },
        {
          "parameters": [
            [
              "appFormField",
              "Redirect URI"
            ],
            [
              "formError",
              "Callback URL is required for Oauth Product"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2154,
                "start": 1491241870031,
                "end": 1491241872185
              },
              {
                "step": "And navigate to Pantheon LogIn page from Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                "durationInMillis": 963,
                "start": 1491241872185,
                "end": 1491241873148
              },
              {
                "step": "And navigate to Pantheon User Account page from LogIn page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                "durationInMillis": 4899,
                "start": 1491241873149,
                "end": 1491241878048
              }
            ]
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open my Apps page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open my Apps page",
                "durationInMillis": 231,
                "start": 1491241878048,
                "end": 1491241878279
              },
              {
                "step": "And open Edit App Page for the first application",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And open Edit App Page for the first application",
                "durationInMillis": 273,
                "start": 1491241878280,
                "end": 1491241878553
              },
              {
                "step": "When clear field <appFormField> on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When clear field ｟Redirect URI｠ on Edit App Page",
                "durationInMillis": 3571,
                "start": 1491241878554,
                "end": 1491241882125
              },
              {
                "step": "And save changes on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And save changes on Edit App Page",
                "durationInMillis": 3985,
                "start": 1491241882126,
                "end": 1491241886111
              },
              {
                "step": "Then the message <formError> is displayed",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the message ｟Callback URL is required for Oauth Product｠ is displayed",
                "durationInMillis": 580,
                "start": 1491241886112,
                "end": 1491241886692
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(Pantheon|Edit App) Edit app with empty required fields negative",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |formError                                  |\n|Application name |Application name field is required.        |\n|Redirect URI     |Callback URL is required for Oauth Product |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "formError"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "formError",
                    "Application name field is required."
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "formError",
                    "Callback URL is required for Oauth Product"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "And open Edit App Page for the first application",
              "When clear field <appFormField> on Edit App Page",
              "And save changes on Edit App Page",
              "Then the message <formError> is displayed"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(Pantheon|Edit App) Edit app positive [2.1.8 Edit application]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|appFormField     |appValue                       |detailName       |\n|Application name |mamax-Appdf                    |Application Name |\n|Redirect URI     |https://oauth.ticketmaster.com |Callback URL     |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "appFormField",
            "appValue",
            "detailName"
          ],
          "data": [
            [
              [
                "appFormField",
                "Application name"
              ],
              [
                "appValue",
                "mamax-Appdf"
              ],
              [
                "detailName",
                "Application Name"
              ]
            ],
            [
              [
                "appFormField",
                "Redirect URI"
              ],
              [
                "appValue",
                "https://oauth.ticketmaster.com"
              ],
              [
                "detailName",
                "Callback URL"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open my Apps page",
          "And open Edit App Page for the first application",
          "When clear field <appFormField> on Edit App Page",
          "And enter to the field <appFormField> value <appValue>",
          "And save changes on Edit App Page",
          "And the message App Updated! is displayed",
          "And open my Apps page",
          "And open Details tab on the application",
          "Then <detailName> have been applied on Edit App Page with value <appValue>"
        ]
      },
      "storyPath": "stories/site/pantheon/UserApps.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "appFormField",
              "Application name"
            ],
            [
              "appValue",
              "mamax-Appdf"
            ],
            [
              "detailName",
              "Application Name"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 5202,
                "start": 1491241886760,
                "end": 1491241891962
              },
              {
                "step": "And navigate to Pantheon LogIn page from Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                "durationInMillis": 897,
                "start": 1491241891963,
                "end": 1491241892860
              },
              {
                "step": "And navigate to Pantheon User Account page from LogIn page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                "durationInMillis": 5405,
                "start": 1491241892861,
                "end": 1491241898266
              }
            ]
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open my Apps page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open my Apps page",
                "durationInMillis": 216,
                "start": 1491241898266,
                "end": 1491241898482
              },
              {
                "step": "And open Edit App Page for the first application",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And open Edit App Page for the first application",
                "durationInMillis": 320,
                "start": 1491241898483,
                "end": 1491241898803
              },
              {
                "step": "When clear field <appFormField> on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When clear field ｟Application name｠ on Edit App Page",
                "durationInMillis": 3118,
                "start": 1491241898804,
                "end": 1491241901922
              },
              {
                "step": "And enter to the field <appFormField> value <appValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And enter to the field ｟Application name｠ value ｟mamax-Appdf｠",
                "durationInMillis": 50,
                "start": 1491241901923,
                "end": 1491241901973
              },
              {
                "step": "And save changes on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And save changes on Edit App Page",
                "durationInMillis": 11906,
                "start": 1491241901974,
                "end": 1491241913880
              },
              {
                "step": "And the message App Updated! is displayed",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And the message ｟App Updated!｠ is displayed",
                "durationInMillis": 620,
                "start": 1491241913881,
                "end": 1491241914501
              },
              {
                "step": "And open my Apps page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And open my Apps page",
                "durationInMillis": 90,
                "start": 1491241914503,
                "end": 1491241914593
              },
              {
                "step": "And open Details tab on the application",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And open Details tab on the application",
                "durationInMillis": 159,
                "start": 1491241914595,
                "end": 1491241914754
              },
              {
                "step": "Then <detailName> have been applied on Edit App Page with value <appValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then ｟Application Name｠ have been applied on Edit App Page with value ｟mamax-Appdf｠",
                "durationInMillis": 138,
                "start": 1491241914755,
                "end": 1491241914893
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(Pantheon|Edit App) Edit app positive [2.1.8 Edit application]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |appValue                       |detailName       |\n|Application name |mamax-Appdf                    |Application Name |\n|Redirect URI     |https://oauth.ticketmaster.com |Callback URL     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "appValue",
                "detailName"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "appValue",
                    "mamax-Appdf"
                  ],
                  [
                    "detailName",
                    "Application Name"
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "appValue",
                    "https://oauth.ticketmaster.com"
                  ],
                  [
                    "detailName",
                    "Callback URL"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "And open Edit App Page for the first application",
              "When clear field <appFormField> on Edit App Page",
              "And enter to the field <appFormField> value <appValue>",
              "And save changes on Edit App Page",
              "And the message App Updated! is displayed",
              "And open my Apps page",
              "And open Details tab on the application",
              "Then <detailName> have been applied on Edit App Page with value <appValue>"
            ]
          }
        },
        {
          "parameters": [
            [
              "appFormField",
              "Redirect URI"
            ],
            [
              "appValue",
              "https://oauth.ticketmaster.com"
            ],
            [
              "detailName",
              "Callback URL"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2026,
                "start": 1491241914958,
                "end": 1491241916984
              },
              {
                "step": "And navigate to Pantheon LogIn page from Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                "durationInMillis": 882,
                "start": 1491241916985,
                "end": 1491241917867
              },
              {
                "step": "And navigate to Pantheon User Account page from LogIn page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                "durationInMillis": 3531,
                "start": 1491241917868,
                "end": 1491241921399
              }
            ]
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open my Apps page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open my Apps page",
                "durationInMillis": 193,
                "start": 1491241921400,
                "end": 1491241921593
              },
              {
                "step": "And open Edit App Page for the first application",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And open Edit App Page for the first application",
                "durationInMillis": 247,
                "start": 1491241921594,
                "end": 1491241921841
              },
              {
                "step": "When clear field <appFormField> on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When clear field ｟Redirect URI｠ on Edit App Page",
                "durationInMillis": 3543,
                "start": 1491241921842,
                "end": 1491241925385
              },
              {
                "step": "And enter to the field <appFormField> value <appValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And enter to the field ｟Redirect URI｠ value ｟https://oauth.ticketmaster.com｠",
                "durationInMillis": 116,
                "start": 1491241925386,
                "end": 1491241925502
              },
              {
                "step": "And save changes on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And save changes on Edit App Page",
                "durationInMillis": 10412,
                "start": 1491241925502,
                "end": 1491241935914
              },
              {
                "step": "And the message App Updated! is displayed",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And the message ｟App Updated!｠ is displayed",
                "durationInMillis": 621,
                "start": 1491241935915,
                "end": 1491241936536
              },
              {
                "step": "And open my Apps page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And open my Apps page",
                "durationInMillis": 89,
                "start": 1491241936537,
                "end": 1491241936626
              },
              {
                "step": "And open Details tab on the application",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And open Details tab on the application",
                "durationInMillis": 146,
                "start": 1491241936626,
                "end": 1491241936772
              },
              {
                "step": "Then <detailName> have been applied on Edit App Page with value <appValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then ｟Callback URL｠ have been applied on Edit App Page with value ｟https://oauth.ticketmaster.com｠",
                "durationInMillis": 154,
                "start": 1491241936772,
                "end": 1491241936926
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(Pantheon|Edit App) Edit app positive [2.1.8 Edit application]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |appValue                       |detailName       |\n|Application name |mamax-Appdf                    |Application Name |\n|Redirect URI     |https://oauth.ticketmaster.com |Callback URL     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "appValue",
                "detailName"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "appValue",
                    "mamax-Appdf"
                  ],
                  [
                    "detailName",
                    "Application Name"
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "appValue",
                    "https://oauth.ticketmaster.com"
                  ],
                  [
                    "detailName",
                    "Callback URL"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "And open Edit App Page for the first application",
              "When clear field <appFormField> on Edit App Page",
              "And enter to the field <appFormField> value <appValue>",
              "And save changes on Edit App Page",
              "And the message App Updated! is displayed",
              "And open my Apps page",
              "And open Details tab on the application",
              "Then <detailName> have been applied on Edit App Page with value <appValue>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(Pantheon|Delete App) Delete App positive [2.1.9 Delete application]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open my Apps page",
          "When delete first App",
          "Then the message App Deleted! is displayed",
          "And the predefined app is removed from the list of apps"
        ]
      },
      "storyPath": "stories/site/pantheon/UserApps.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2483,
              "start": 1491241936991,
              "end": 1491241939474
            },
            {
              "step": "And navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 947,
              "start": 1491241939474,
              "end": 1491241940421
            },
            {
              "step": "And navigate to Pantheon User Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
              "durationInMillis": 4063,
              "start": 1491241940422,
              "end": 1491241944485
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491241944486,
              "end": 1491241944486
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open my Apps page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open my Apps page",
              "durationInMillis": 195,
              "start": 1491241944487,
              "end": 1491241944682
            },
            {
              "step": "When delete first App",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When delete first App",
              "durationInMillis": 11344,
              "start": 1491241944683,
              "end": 1491241956027
            },
            {
              "step": "Then the message App Deleted! is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟App Deleted!｠ is displayed",
              "durationInMillis": 630,
              "start": 1491241956028,
              "end": 1491241956658
            },
            {
              "step": "And the predefined app is removed from the list of apps",
              "type": "FAILED",
              "throwable": {
                "detailMessage": "And the predefined app is removed from the list of apps",
                "cause": {
                  "@class": "java.lang.AssertionError",
                  "stackTrace": [
                    "org.junit.Assert.fail(Assert.java:86)",
                    "org.junit.Assert.assertTrue(Assert.java:41)",
                    "org.junit.Assert.assertFalse(Assert.java:64)",
                    "org.junit.Assert.assertFalse(Assert.java:74)",
                    "bla.tm.steps.pantheon.UserAppsSteps.checkIsAppNotExists(UserAppsSteps.java:76)",
                    "bla.tm.steps.pantheon.UserAppsSteps$$EnhancerByCGLIB$$12fc2311.CGLIB$checkIsAppNotExists$12(<generated>)",
                    "bla.tm.steps.pantheon.UserAppsSteps$$EnhancerByCGLIB$$12fc2311$$FastClassByCGLIB$$e336c291.invoke(<generated>)",
                    "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                    "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                    "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                    "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                    "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                    "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                    "bla.tm.steps.pantheon.UserAppsSteps$$EnhancerByCGLIB$$12fc2311.checkIsAppNotExists(<generated>)",
                    "bla.tm.definitions.site.pantheon.UserAppsDefinition.appIsRemovedFromTheListOfApps(UserAppsDefinition.java:84)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                    "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                    "java.lang.reflect.Method.invoke(Method.java:483)",
                    "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ]
                },
                "stackTrace": [
                  "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                  "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "8d747795-4a8d-4d52-85b7-ac4624dce620"
              },
              "parametrisedStep": "And the predefined app is removed from the list of apps",
              "durationInMillis": 397,
              "start": 1491241956661,
              "end": 1491241957058
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 12,
              "start": 1491241957059,
              "end": 1491241957071
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491241957071,
              "end": 1491241957071
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(Pantheon|Delete App) Delete App positive [2.1.9 Delete application]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open my Apps page",
            "When delete first App",
            "Then the message App Deleted! is displayed",
            "And the predefined app is removed from the list of apps"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "FAILED"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Then check general page elements for Pantheon User LogIn page"
        ]
      },
      "storyPath": "stories/site/pantheon/UserLogIn.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 4093,
              "start": 1491241957714,
              "end": 1491241961807
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 989,
              "start": 1491241961808,
              "end": 1491241962797
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241962797,
              "end": 1491241962798
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Then check general page elements for Pantheon User LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon User LogIn page",
              "durationInMillis": 20228,
              "start": 1491241962798,
              "end": 1491241983026
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1491241983027,
              "end": 1491241983051
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241983051,
              "end": 1491241983052
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Then check general page elements for Pantheon User LogIn page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.2 Login - Username/Email field - enter invalid username]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When login to Pantheon with invaliduserName and 1234567",
          "Then the message Sorry, unrecognized username or password. Have you forgotten your password? is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/UserLogIn.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2155,
              "start": 1491241983122,
              "end": 1491241985277
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1220,
              "start": 1491241985277,
              "end": 1491241986497
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491241986498,
              "end": 1491241986498
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When login to Pantheon with invaliduserName and 1234567",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When login to Pantheon with ｟invaliduserName｠ and ｟1234567｠",
              "durationInMillis": 648,
              "start": 1491241986499,
              "end": 1491241987147
            },
            {
              "step": "Then the message Sorry, unrecognized username or password. Have you forgotten your password? is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟Sorry, unrecognized username or password. Have you forgotten your password?｠ is displayed",
              "durationInMillis": 360,
              "start": 1491241987148,
              "end": 1491241987508
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 29,
              "start": 1491241987508,
              "end": 1491241987537
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241987537,
              "end": 1491241987538
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.2 Login - Username/Email field - enter invalid username]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When login to Pantheon with invaliduserName and 1234567",
            "Then the message Sorry, unrecognized username or password. Have you forgotten your password? is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.8 Login - OpenID field - invalid OpenID]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When login to Pantheon using OpenID invalidOpenID",
          "Then the message Sorry, that is not a valid OpenID. Ensure you have spelled your ID correctly. is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/UserLogIn.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2191,
              "start": 1491241987603,
              "end": 1491241989794
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 945,
              "start": 1491241989794,
              "end": 1491241990739
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241990739,
              "end": 1491241990740
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When login to Pantheon using OpenID invalidOpenID",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When login to Pantheon using OpenID ｟invalidOpenID｠",
              "durationInMillis": 754,
              "start": 1491241990740,
              "end": 1491241991494
            },
            {
              "step": "Then the message Sorry, that is not a valid OpenID. Ensure you have spelled your ID correctly. is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟Sorry, that is not a valid OpenID. Ensure you have spelled your ID correctly.｠ is displayed",
              "durationInMillis": 361,
              "start": 1491241991494,
              "end": 1491241991855
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 19,
              "start": 1491241991855,
              "end": 1491241991874
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241991874,
              "end": 1491241991875
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.8 Login - OpenID field - invalid OpenID]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When login to Pantheon using OpenID invalidOpenID",
            "Then the message Sorry, that is not a valid OpenID. Ensure you have spelled your ID correctly. is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Partners page",
          "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/partners/Partners.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491241991942,
              "end": 1491241991943
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Partners page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Partners page",
              "durationInMillis": 5419,
              "start": 1491241991943,
              "end": 1491241997362
            },
            {
              "step": "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 20209,
              "start": 1491241997363,
              "end": 1491242017572
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 30,
              "start": 1491242017573,
              "end": 1491242017603
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242017603,
              "end": 1491242017603
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Partners page",
            "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/certified-partners/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Certified Partners page",
          "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_CertifiedPartners.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242017675,
              "end": 1491242017676
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Certified Partners page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Certified Partners page",
              "durationInMillis": 2184,
              "start": 1491242017676,
              "end": 1491242019860
            },
            {
              "step": "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Certified Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10271,
              "start": 1491242019861,
              "end": 1491242030132
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25,
              "start": 1491242030133,
              "end": 1491242030158
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242030158,
              "end": 1491242030159
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/certified-partners/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Certified Partners page",
            "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/distribution-partners/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Distribution Partners page",
          "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_DistributionPartners.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242030224,
              "end": 1491242030225
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Distribution Partners page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Distribution Partners page",
              "durationInMillis": 3481,
              "start": 1491242030225,
              "end": 1491242033706
            },
            {
              "step": "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Distribution Partners Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 636,
              "start": 1491242033707,
              "end": 1491242034343
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25,
              "start": 1491242034344,
              "end": 1491242034369
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242034369,
              "end": 1491242034369
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/distribution-partners/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Distribution Partners page",
            "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Join The Nexus Program page",
          "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_Nexus.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242034433,
              "end": 1491242034434
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Join The Nexus Program page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Join The Nexus Program page",
              "durationInMillis": 3701,
              "start": 1491242034434,
              "end": 1491242038135
            },
            {
              "step": "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Join The Nexus Program Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 233,
              "start": 1491242038135,
              "end": 1491242038368
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 45,
              "start": 1491242038369,
              "end": 1491242038414
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242038414,
              "end": 1491242038414
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Join The Nexus Program page",
            "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/startups-and-developers/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Startups and Developers page",
          "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_StartupsDevelopers.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242038480,
              "end": 1491242038480
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Startups and Developers page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Startups and Developers page",
              "durationInMillis": 5190,
              "start": 1491242038480,
              "end": 1491242043670
            },
            {
              "step": "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Startups and Developers Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 987,
              "start": 1491242043671,
              "end": 1491242044658
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 29,
              "start": 1491242044659,
              "end": 1491242044688
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242044688,
              "end": 1491242044689
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/startups-and-developers/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Startups and Developers page",
            "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Products and Docs page",
          "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242044755,
              "end": 1491242044756
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Products and Docs page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Products and Docs page",
              "durationInMillis": 2704,
              "start": 1491242044756,
              "end": 1491242047460
            },
            {
              "step": "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Products and Docs Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 40346,
              "start": 1491242047461,
              "end": 1491242087807
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21,
              "start": 1491242087808,
              "end": 1491242087829
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 9,
              "start": 1491242087829,
              "end": 1491242087838
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Products and Docs page",
            "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open API Explorer page",
          "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_APIExplorer.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242087911,
              "end": 1491242087911
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open API Explorer page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open API Explorer page",
              "durationInMillis": 5460,
              "start": 1491242087911,
              "end": 1491242093371
            },
            {
              "step": "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for API Explorer Page, where DISQUS = ｟true｠ and LeftMenu = ｟false｠",
              "durationInMillis": 10378,
              "start": 1491242093372,
              "end": 1491242103750
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25,
              "start": 1491242103750,
              "end": 1491242103775
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242103775,
              "end": 1491242103775
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/api-explorer/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open API Explorer page",
            "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/v2) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open API Explorer V2 page",
          "Then check general page elements for API Explorer V2 Page, where DISQUS = true and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_APIExplorer_V2.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242103841,
              "end": 1491242103841
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open API Explorer V2 page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open API Explorer V2 page",
              "durationInMillis": 8535,
              "start": 1491242103841,
              "end": 1491242112376
            },
            {
              "step": "Then check general page elements for API Explorer V2 Page, where DISQUS = true and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for API Explorer V2 Page, where DISQUS = ｟true｠ and LeftMenu = ｟false｠",
              "durationInMillis": 10312,
              "start": 1491242112377,
              "end": 1491242122689
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23,
              "start": 1491242122690,
              "end": 1491242122713
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242122713,
              "end": 1491242122713
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/api-explorer/v2) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open API Explorer V2 page",
            "Then check general page elements for API Explorer V2 Page, where DISQUS = true and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/v2) Open Graph support [1.1.51 Verify tags are present in source code]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|tag            |\n|og:title       |\n|og:url         |\n|og:site_name   |\n|og:image       |\n|og:image:type  |\n|og:image:width |\n|og:image:height|",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "tag"
          ],
          "data": [
            [
              [
                "tag",
                "og:title"
              ]
            ],
            [
              [
                "tag",
                "og:url"
              ]
            ],
            [
              [
                "tag",
                "og:site_name"
              ]
            ],
            [
              [
                "tag",
                "og:image"
              ]
            ],
            [
              [
                "tag",
                "og:image:type"
              ]
            ],
            [
              [
                "tag",
                "og:image:width"
              ]
            ],
            [
              [
                "tag",
                "og:image:height"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open API Explorer V2 page",
          "Then check <tag> is present in the source code page"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_APIExplorer_V2.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "tag",
              "og:title"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open API Explorer V2 page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open API Explorer V2 page",
                "durationInMillis": 3970,
                "start": 1491242122778,
                "end": 1491242126748
              },
              {
                "step": "Then check <tag> is present in the source code page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check ｟og:title｠ is present in the source code page",
                "durationInMillis": 208,
                "start": 1491242126748,
                "end": 1491242126956
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/api-explorer/v2) Open Graph support [1.1.51 Verify tags are present in source code]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|tag            |\n|og:title       |\n|og:url         |\n|og:site_name   |\n|og:image       |\n|og:image:type  |\n|og:image:width |\n|og:image:height|",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "tag"
              ],
              "data": [
                [
                  [
                    "tag",
                    "og:title"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:url"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:site_name"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:type"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:width"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:height"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "Then check <tag> is present in the source code page"
            ]
          }
        },
        {
          "parameters": [
            [
              "tag",
              "og:url"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open API Explorer V2 page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open API Explorer V2 page",
                "durationInMillis": 2904,
                "start": 1491242127024,
                "end": 1491242129928
              },
              {
                "step": "Then check <tag> is present in the source code page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check ｟og:url｠ is present in the source code page",
                "durationInMillis": 124,
                "start": 1491242129928,
                "end": 1491242130052
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/api-explorer/v2) Open Graph support [1.1.51 Verify tags are present in source code]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|tag            |\n|og:title       |\n|og:url         |\n|og:site_name   |\n|og:image       |\n|og:image:type  |\n|og:image:width |\n|og:image:height|",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "tag"
              ],
              "data": [
                [
                  [
                    "tag",
                    "og:title"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:url"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:site_name"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:type"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:width"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:height"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "Then check <tag> is present in the source code page"
            ]
          }
        },
        {
          "parameters": [
            [
              "tag",
              "og:site_name"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open API Explorer V2 page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open API Explorer V2 page",
                "durationInMillis": 3597,
                "start": 1491242130115,
                "end": 1491242133712
              },
              {
                "step": "Then check <tag> is present in the source code page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check ｟og:site_name｠ is present in the source code page",
                "durationInMillis": 190,
                "start": 1491242133713,
                "end": 1491242133903
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/api-explorer/v2) Open Graph support [1.1.51 Verify tags are present in source code]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|tag            |\n|og:title       |\n|og:url         |\n|og:site_name   |\n|og:image       |\n|og:image:type  |\n|og:image:width |\n|og:image:height|",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "tag"
              ],
              "data": [
                [
                  [
                    "tag",
                    "og:title"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:url"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:site_name"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:type"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:width"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:height"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "Then check <tag> is present in the source code page"
            ]
          }
        },
        {
          "parameters": [
            [
              "tag",
              "og:image"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open API Explorer V2 page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open API Explorer V2 page",
                "durationInMillis": 7368,
                "start": 1491242134048,
                "end": 1491242141416
              },
              {
                "step": "Then check <tag> is present in the source code page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check ｟og:image｠ is present in the source code page",
                "durationInMillis": 45,
                "start": 1491242141417,
                "end": 1491242141462
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/api-explorer/v2) Open Graph support [1.1.51 Verify tags are present in source code]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|tag            |\n|og:title       |\n|og:url         |\n|og:site_name   |\n|og:image       |\n|og:image:type  |\n|og:image:width |\n|og:image:height|",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "tag"
              ],
              "data": [
                [
                  [
                    "tag",
                    "og:title"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:url"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:site_name"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:type"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:width"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:height"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "Then check <tag> is present in the source code page"
            ]
          }
        },
        {
          "parameters": [
            [
              "tag",
              "og:image:type"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open API Explorer V2 page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open API Explorer V2 page",
                "durationInMillis": 8094,
                "start": 1491242141524,
                "end": 1491242149618
              },
              {
                "step": "Then check <tag> is present in the source code page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check ｟og:image:type｠ is present in the source code page",
                "durationInMillis": 48,
                "start": 1491242149619,
                "end": 1491242149667
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/api-explorer/v2) Open Graph support [1.1.51 Verify tags are present in source code]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|tag            |\n|og:title       |\n|og:url         |\n|og:site_name   |\n|og:image       |\n|og:image:type  |\n|og:image:width |\n|og:image:height|",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "tag"
              ],
              "data": [
                [
                  [
                    "tag",
                    "og:title"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:url"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:site_name"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:type"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:width"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:height"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "Then check <tag> is present in the source code page"
            ]
          }
        },
        {
          "parameters": [
            [
              "tag",
              "og:image:width"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open API Explorer V2 page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open API Explorer V2 page",
                "durationInMillis": 4362,
                "start": 1491242149735,
                "end": 1491242154097
              },
              {
                "step": "Then check <tag> is present in the source code page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check ｟og:image:width｠ is present in the source code page",
                "durationInMillis": 52,
                "start": 1491242154098,
                "end": 1491242154150
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/api-explorer/v2) Open Graph support [1.1.51 Verify tags are present in source code]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|tag            |\n|og:title       |\n|og:url         |\n|og:site_name   |\n|og:image       |\n|og:image:type  |\n|og:image:width |\n|og:image:height|",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "tag"
              ],
              "data": [
                [
                  [
                    "tag",
                    "og:title"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:url"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:site_name"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:type"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:width"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:height"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "Then check <tag> is present in the source code page"
            ]
          }
        },
        {
          "parameters": [
            [
              "tag",
              "og:image:height"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open API Explorer V2 page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open API Explorer V2 page",
                "durationInMillis": 3607,
                "start": 1491242154213,
                "end": 1491242157820
              },
              {
                "step": "Then check <tag> is present in the source code page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check ｟og:image:height｠ is present in the source code page",
                "durationInMillis": 214,
                "start": 1491242157821,
                "end": 1491242158035
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/api-explorer/v2) Open Graph support [1.1.51 Verify tags are present in source code]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|tag            |\n|og:title       |\n|og:url         |\n|og:site_name   |\n|og:image       |\n|og:image:type  |\n|og:image:width |\n|og:image:height|",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "tag"
              ],
              "data": [
                [
                  [
                    "tag",
                    "og:title"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:url"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:site_name"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:type"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:width"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:height"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "Then check <tag> is present in the source code page"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/v2) [5.2.2 API Explorer V2 : The parameters section is opened]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|apiGetMethod              |\n|Get Event Details         |\n|Get Event Images          |\n|Get Attraction Details    |\n|Get Classification Details|\n|Get Venue Details         |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "apiGetMethod"
          ],
          "data": [
            [
              [
                "apiGetMethod",
                "Get Event Details"
              ]
            ],
            [
              [
                "apiGetMethod",
                "Get Event Images"
              ]
            ],
            [
              [
                "apiGetMethod",
                "Get Attraction Details"
              ]
            ],
            [
              [
                "apiGetMethod",
                "Get Classification Details"
              ]
            ],
            [
              [
                "apiGetMethod",
                "Get Venue Details"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open API Explorer V2 page",
          "When I choose <apiGetMethod> to send request",
          "And click GET button",
          "Then the parameters section is opened",
          "And error notification is shown on required fields"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_APIExplorer_V2.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "apiGetMethod",
              "Get Event Details"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open API Explorer V2 page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open API Explorer V2 page",
                "durationInMillis": 4368,
                "start": 1491242158199,
                "end": 1491242162567
              },
              {
                "step": "When I choose <apiGetMethod> to send request",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When I choose ｟Get Event Details｠ to send request",
                "durationInMillis": 338,
                "start": 1491242162568,
                "end": 1491242162906
              },
              {
                "step": "And click GET button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And click GET button",
                "durationInMillis": 210,
                "start": 1491242162907,
                "end": 1491242163117
              },
              {
                "step": "Then the parameters section is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the parameters section is opened",
                "durationInMillis": 285,
                "start": 1491242163118,
                "end": 1491242163403
              },
              {
                "step": "And error notification is shown on required fields",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And error notification is shown on required fields",
                "durationInMillis": 25,
                "start": 1491242163403,
                "end": 1491242163428
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/api-explorer/v2) [5.2.2 API Explorer V2 : The parameters section is opened]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|apiGetMethod              |\n|Get Event Details         |\n|Get Event Images          |\n|Get Attraction Details    |\n|Get Classification Details|\n|Get Venue Details         |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "apiGetMethod"
              ],
              "data": [
                [
                  [
                    "apiGetMethod",
                    "Get Event Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Event Images"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Attraction Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Classification Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Venue Details"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "When I choose <apiGetMethod> to send request",
              "And click GET button",
              "Then the parameters section is opened",
              "And error notification is shown on required fields"
            ]
          }
        },
        {
          "parameters": [
            [
              "apiGetMethod",
              "Get Event Images"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open API Explorer V2 page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open API Explorer V2 page",
                "durationInMillis": 2891,
                "start": 1491242163489,
                "end": 1491242166380
              },
              {
                "step": "When I choose <apiGetMethod> to send request",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When I choose ｟Get Event Images｠ to send request",
                "durationInMillis": 515,
                "start": 1491242166381,
                "end": 1491242166896
              },
              {
                "step": "And click GET button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And click GET button",
                "durationInMillis": 245,
                "start": 1491242166897,
                "end": 1491242167142
              },
              {
                "step": "Then the parameters section is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the parameters section is opened",
                "durationInMillis": 284,
                "start": 1491242167142,
                "end": 1491242167426
              },
              {
                "step": "And error notification is shown on required fields",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And error notification is shown on required fields",
                "durationInMillis": 26,
                "start": 1491242167427,
                "end": 1491242167453
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/api-explorer/v2) [5.2.2 API Explorer V2 : The parameters section is opened]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|apiGetMethod              |\n|Get Event Details         |\n|Get Event Images          |\n|Get Attraction Details    |\n|Get Classification Details|\n|Get Venue Details         |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "apiGetMethod"
              ],
              "data": [
                [
                  [
                    "apiGetMethod",
                    "Get Event Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Event Images"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Attraction Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Classification Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Venue Details"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "When I choose <apiGetMethod> to send request",
              "And click GET button",
              "Then the parameters section is opened",
              "And error notification is shown on required fields"
            ]
          }
        },
        {
          "parameters": [
            [
              "apiGetMethod",
              "Get Attraction Details"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open API Explorer V2 page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open API Explorer V2 page",
                "durationInMillis": 3590,
                "start": 1491242167515,
                "end": 1491242171105
              },
              {
                "step": "When I choose <apiGetMethod> to send request",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When I choose ｟Get Attraction Details｠ to send request",
                "durationInMillis": 389,
                "start": 1491242171105,
                "end": 1491242171494
              },
              {
                "step": "And click GET button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And click GET button",
                "durationInMillis": 291,
                "start": 1491242171495,
                "end": 1491242171786
              },
              {
                "step": "Then the parameters section is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the parameters section is opened",
                "durationInMillis": 284,
                "start": 1491242171787,
                "end": 1491242172071
              },
              {
                "step": "And error notification is shown on required fields",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And error notification is shown on required fields",
                "durationInMillis": 21,
                "start": 1491242172072,
                "end": 1491242172093
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/api-explorer/v2) [5.2.2 API Explorer V2 : The parameters section is opened]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|apiGetMethod              |\n|Get Event Details         |\n|Get Event Images          |\n|Get Attraction Details    |\n|Get Classification Details|\n|Get Venue Details         |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "apiGetMethod"
              ],
              "data": [
                [
                  [
                    "apiGetMethod",
                    "Get Event Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Event Images"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Attraction Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Classification Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Venue Details"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "When I choose <apiGetMethod> to send request",
              "And click GET button",
              "Then the parameters section is opened",
              "And error notification is shown on required fields"
            ]
          }
        },
        {
          "parameters": [
            [
              "apiGetMethod",
              "Get Classification Details"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open API Explorer V2 page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open API Explorer V2 page",
                "durationInMillis": 6185,
                "start": 1491242172154,
                "end": 1491242178339
              },
              {
                "step": "When I choose <apiGetMethod> to send request",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When I choose ｟Get Classification Details｠ to send request",
                "durationInMillis": 276,
                "start": 1491242178340,
                "end": 1491242178616
              },
              {
                "step": "And click GET button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And click GET button",
                "durationInMillis": 492,
                "start": 1491242178616,
                "end": 1491242179108
              },
              {
                "step": "Then the parameters section is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the parameters section is opened",
                "durationInMillis": 280,
                "start": 1491242179109,
                "end": 1491242179389
              },
              {
                "step": "And error notification is shown on required fields",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And error notification is shown on required fields",
                "durationInMillis": 29,
                "start": 1491242179390,
                "end": 1491242179419
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/api-explorer/v2) [5.2.2 API Explorer V2 : The parameters section is opened]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|apiGetMethod              |\n|Get Event Details         |\n|Get Event Images          |\n|Get Attraction Details    |\n|Get Classification Details|\n|Get Venue Details         |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "apiGetMethod"
              ],
              "data": [
                [
                  [
                    "apiGetMethod",
                    "Get Event Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Event Images"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Attraction Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Classification Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Venue Details"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "When I choose <apiGetMethod> to send request",
              "And click GET button",
              "Then the parameters section is opened",
              "And error notification is shown on required fields"
            ]
          }
        },
        {
          "parameters": [
            [
              "apiGetMethod",
              "Get Venue Details"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open API Explorer V2 page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open API Explorer V2 page",
                "durationInMillis": 6048,
                "start": 1491242179482,
                "end": 1491242185530
              },
              {
                "step": "When I choose <apiGetMethod> to send request",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When I choose ｟Get Venue Details｠ to send request",
                "durationInMillis": 357,
                "start": 1491242185531,
                "end": 1491242185888
              },
              {
                "step": "And click GET button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And click GET button",
                "durationInMillis": 236,
                "start": 1491242185889,
                "end": 1491242186125
              },
              {
                "step": "Then the parameters section is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the parameters section is opened",
                "durationInMillis": 309,
                "start": 1491242186126,
                "end": 1491242186435
              },
              {
                "step": "And error notification is shown on required fields",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And error notification is shown on required fields",
                "durationInMillis": 31,
                "start": 1491242186435,
                "end": 1491242186466
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/api-explorer/v2) [5.2.2 API Explorer V2 : The parameters section is opened]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|apiGetMethod              |\n|Get Event Details         |\n|Get Event Images          |\n|Get Attraction Details    |\n|Get Classification Details|\n|Get Venue Details         |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "apiGetMethod"
              ],
              "data": [
                [
                  [
                    "apiGetMethod",
                    "Get Event Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Event Images"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Attraction Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Classification Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Venue Details"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "When I choose <apiGetMethod> to send request",
              "And click GET button",
              "Then the parameters section is opened",
              "And error notification is shown on required fields"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/v2) [5.2.3 API Explorer V2 : The request list contains url and block]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|apiGetMethod              |\n|Event Search             |\n|Attraction Search        |\n|Classification Search    |\n|Venue Search             |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "apiGetMethod"
          ],
          "data": [
            [
              [
                "apiGetMethod",
                "Event Search"
              ]
            ],
            [
              [
                "apiGetMethod",
                "Attraction Search"
              ]
            ],
            [
              [
                "apiGetMethod",
                "Classification Search"
              ]
            ],
            [
              [
                "apiGetMethod",
                "Venue Search"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open API Explorer V2 page",
          "When I choose <apiGetMethod> to send request",
          "And click GET button",
          "Then the request list contains url",
          "And the request list contains response block"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_APIExplorer_V2.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "apiGetMethod",
              "Event Search"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open API Explorer V2 page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open API Explorer V2 page",
                "durationInMillis": 4385,
                "start": 1491242186530,
                "end": 1491242190915
              },
              {
                "step": "When I choose <apiGetMethod> to send request",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When I choose ｟Event Search｠ to send request",
                "durationInMillis": 778,
                "start": 1491242190916,
                "end": 1491242191694
              },
              {
                "step": "And click GET button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And click GET button",
                "durationInMillis": 261,
                "start": 1491242191694,
                "end": 1491242191955
              },
              {
                "step": "Then the request list contains url",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the request list contains url",
                "durationInMillis": 2469,
                "start": 1491242191955,
                "end": 1491242194424
              },
              {
                "step": "And the request list contains response block",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And the request list contains response block",
                "durationInMillis": 671,
                "start": 1491242194425,
                "end": 1491242195096
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/api-explorer/v2) [5.2.3 API Explorer V2 : The request list contains url and block]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|apiGetMethod              |\n|Event Search             |\n|Attraction Search        |\n|Classification Search    |\n|Venue Search             |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "apiGetMethod"
              ],
              "data": [
                [
                  [
                    "apiGetMethod",
                    "Event Search"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Attraction Search"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Classification Search"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Venue Search"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "When I choose <apiGetMethod> to send request",
              "And click GET button",
              "Then the request list contains url",
              "And the request list contains response block"
            ]
          }
        },
        {
          "parameters": [
            [
              "apiGetMethod",
              "Attraction Search"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open API Explorer V2 page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open API Explorer V2 page",
                "durationInMillis": 3534,
                "start": 1491242195161,
                "end": 1491242198695
              },
              {
                "step": "When I choose <apiGetMethod> to send request",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When I choose ｟Attraction Search｠ to send request",
                "durationInMillis": 147,
                "start": 1491242198696,
                "end": 1491242198843
              },
              {
                "step": "And click GET button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And click GET button",
                "durationInMillis": 290,
                "start": 1491242198846,
                "end": 1491242199136
              },
              {
                "step": "Then the request list contains url",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the request list contains url",
                "durationInMillis": 1245,
                "start": 1491242199137,
                "end": 1491242200382
              },
              {
                "step": "And the request list contains response block",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And the request list contains response block",
                "durationInMillis": 125,
                "start": 1491242200383,
                "end": 1491242200508
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/api-explorer/v2) [5.2.3 API Explorer V2 : The request list contains url and block]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|apiGetMethod              |\n|Event Search             |\n|Attraction Search        |\n|Classification Search    |\n|Venue Search             |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "apiGetMethod"
              ],
              "data": [
                [
                  [
                    "apiGetMethod",
                    "Event Search"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Attraction Search"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Classification Search"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Venue Search"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "When I choose <apiGetMethod> to send request",
              "And click GET button",
              "Then the request list contains url",
              "And the request list contains response block"
            ]
          }
        },
        {
          "parameters": [
            [
              "apiGetMethod",
              "Classification Search"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open API Explorer V2 page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open API Explorer V2 page",
                "durationInMillis": 3341,
                "start": 1491242200572,
                "end": 1491242203913
              },
              {
                "step": "When I choose <apiGetMethod> to send request",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When I choose ｟Classification Search｠ to send request",
                "durationInMillis": 596,
                "start": 1491242203914,
                "end": 1491242204510
              },
              {
                "step": "And click GET button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And click GET button",
                "durationInMillis": 194,
                "start": 1491242204511,
                "end": 1491242204705
              },
              {
                "step": "Then the request list contains url",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the request list contains url",
                "durationInMillis": 4081,
                "start": 1491242204706,
                "end": 1491242208787
              },
              {
                "step": "And the request list contains response block",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And the request list contains response block",
                "durationInMillis": 404,
                "start": 1491242208788,
                "end": 1491242209192
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/api-explorer/v2) [5.2.3 API Explorer V2 : The request list contains url and block]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|apiGetMethod              |\n|Event Search             |\n|Attraction Search        |\n|Classification Search    |\n|Venue Search             |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "apiGetMethod"
              ],
              "data": [
                [
                  [
                    "apiGetMethod",
                    "Event Search"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Attraction Search"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Classification Search"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Venue Search"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "When I choose <apiGetMethod> to send request",
              "And click GET button",
              "Then the request list contains url",
              "And the request list contains response block"
            ]
          }
        },
        {
          "parameters": [
            [
              "apiGetMethod",
              "Venue Search"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open API Explorer V2 page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open API Explorer V2 page",
                "durationInMillis": 8777,
                "start": 1491242209304,
                "end": 1491242218081
              },
              {
                "step": "When I choose <apiGetMethod> to send request",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When I choose ｟Venue Search｠ to send request",
                "durationInMillis": 463,
                "start": 1491242218082,
                "end": 1491242218545
              },
              {
                "step": "And click GET button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And click GET button",
                "durationInMillis": 392,
                "start": 1491242218546,
                "end": 1491242218938
              },
              {
                "step": "Then the request list contains url",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the request list contains url",
                "durationInMillis": 1536,
                "start": 1491242218939,
                "end": 1491242220475
              },
              {
                "step": "And the request list contains response block",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And the request list contains response block",
                "durationInMillis": 94,
                "start": 1491242220476,
                "end": 1491242220570
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/api-explorer/v2) [5.2.3 API Explorer V2 : The request list contains url and block]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|apiGetMethod              |\n|Event Search             |\n|Attraction Search        |\n|Classification Search    |\n|Venue Search             |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "apiGetMethod"
              ],
              "data": [
                [
                  [
                    "apiGetMethod",
                    "Event Search"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Attraction Search"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Classification Search"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Venue Search"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "When I choose <apiGetMethod> to send request",
              "And click GET button",
              "Then the request list contains url",
              "And the request list contains response block"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open ChangeLog page",
          "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_ChangeLog.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242220635,
              "end": 1491242220636
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open ChangeLog page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open ChangeLog page",
              "durationInMillis": 4007,
              "start": 1491242220636,
              "end": 1491242224643
            },
            {
              "step": "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for ChangeLog Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 176,
              "start": 1491242224644,
              "end": 1491242224820
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21,
              "start": 1491242224820,
              "end": 1491242224841
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242224841,
              "end": 1491242224841
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open ChangeLog page",
            "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Commerce API page",
          "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_CommerceAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242224917,
              "end": 1491242224918
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Commerce API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Commerce API page",
              "durationInMillis": 4406,
              "start": 1491242224918,
              "end": 1491242229324
            },
            {
              "step": "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Commerce API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 880,
              "start": 1491242229325,
              "end": 1491242230205
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21,
              "start": 1491242230205,
              "end": 1491242230226
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242230226,
              "end": 1491242230227
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Commerce API page",
            "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/discovery-api/v1/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Discovery API v1 page",
          "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV1.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242230291,
              "end": 1491242230292
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Discovery API v1 page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Discovery API v1 page",
              "durationInMillis": 3668,
              "start": 1491242230292,
              "end": 1491242233960
            },
            {
              "step": "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Discovery API v1 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 861,
              "start": 1491242233960,
              "end": 1491242234821
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 31,
              "start": 1491242234822,
              "end": 1491242234853
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242234853,
              "end": 1491242234853
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/discovery-api/v1/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Discovery API v1 page",
            "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Discovery API v2 page",
          "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV2.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242234926,
              "end": 1491242234927
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Discovery API v2 page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Discovery API v2 page",
              "durationInMillis": 4997,
              "start": 1491242234927,
              "end": 1491242239924
            },
            {
              "step": "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Discovery API v2 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 2315,
              "start": 1491242239925,
              "end": 1491242242240
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 77,
              "start": 1491242242241,
              "end": 1491242242318
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242242318,
              "end": 1491242242319
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Discovery API v2 page",
            "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Commerce API page",
          "When Commerce API menu has list of methods",
          "And open Getting Started page",
          "Then all the Commerce API methods are shown on Getting Started page"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242242390,
              "end": 1491242242391
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Commerce API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Commerce API page",
              "durationInMillis": 6807,
              "start": 1491242242391,
              "end": 1491242249198
            },
            {
              "step": "When Commerce API menu has list of methods",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When Commerce API menu has list of methods",
              "durationInMillis": 147717,
              "start": 1491242249198,
              "end": 1491242396915
            },
            {
              "step": "And open Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And open Getting Started page",
              "durationInMillis": 650,
              "start": 1491242396916,
              "end": 1491242397566
            },
            {
              "step": "Then all the Commerce API methods are shown on Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then all the Commerce API methods are shown on Getting Started page",
              "durationInMillis": 54982,
              "start": 1491242397567,
              "end": 1491242452549
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1077,
              "start": 1491242452549,
              "end": 1491242453626
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242453626,
              "end": 1491242453627
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Commerce API page",
            "When Commerce API menu has list of methods",
            "And open Getting Started page",
            "Then all the Commerce API methods are shown on Getting Started page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Getting Started page",
          "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242453693,
              "end": 1491242453694
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Getting Started page",
              "durationInMillis": 1774,
              "start": 1491242453694,
              "end": 1491242455468
            },
            {
              "step": "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Getting Started Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 1388,
              "start": 1491242455469,
              "end": 1491242456857
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 26,
              "start": 1491242456858,
              "end": 1491242456884
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242456884,
              "end": 1491242456885
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Getting Started page",
            "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open International Discovery API page",
          "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_InternationalDiscoveryAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242456951,
              "end": 1491242456952
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open International Discovery API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open International Discovery API page",
              "durationInMillis": 4185,
              "start": 1491242456952,
              "end": 1491242461137
            },
            {
              "step": "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for International Discovery API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 1600,
              "start": 1491242461138,
              "end": 1491242462738
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 105,
              "start": 1491242462738,
              "end": 1491242462843
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242462843,
              "end": 1491242462844
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open International Discovery API page",
            "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Inventory Status API page",
          "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_InventoryStatusAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242462924,
              "end": 1491242462924
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Inventory Status API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Inventory Status API page",
              "durationInMillis": 4361,
              "start": 1491242462924,
              "end": 1491242467285
            },
            {
              "step": "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Inventory Status API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 360,
              "start": 1491242467287,
              "end": 1491242467647
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 45,
              "start": 1491242467648,
              "end": 1491242467693
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242467693,
              "end": 1491242467693
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Inventory Status API page",
            "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Oauth API page",
          "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_OauthAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242467760,
              "end": 1491242467761
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Oauth API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Oauth API page",
              "durationInMillis": 3467,
              "start": 1491242467761,
              "end": 1491242471228
            },
            {
              "step": "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Oauth API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 369,
              "start": 1491242471229,
              "end": 1491242471598
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21,
              "start": 1491242471598,
              "end": 1491242471619
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242471619,
              "end": 1491242471620
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Oauth API page",
            "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Partner API page",
          "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_PartnerAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242471715,
              "end": 1491242471715
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Partner API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Partner API page",
              "durationInMillis": 5164,
              "start": 1491242471716,
              "end": 1491242476880
            },
            {
              "step": "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Partner API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 474,
              "start": 1491242476881,
              "end": 1491242477355
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 27,
              "start": 1491242477355,
              "end": 1491242477382
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242477382,
              "end": 1491242477383
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Partner API page",
            "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Publish API page",
          "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_PublishAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242477448,
              "end": 1491242477449
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Publish API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Publish API page",
              "durationInMillis": 2533,
              "start": 1491242477449,
              "end": 1491242479982
            },
            {
              "step": "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Publish API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 744,
              "start": 1491242479983,
              "end": 1491242480727
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 104,
              "start": 1491242480727,
              "end": 1491242480831
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242480831,
              "end": 1491242480831
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Publish API page",
            "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/sdks/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open SDKs page",
          "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242480895,
              "end": 1491242480896
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open SDKs page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open SDKs page",
              "durationInMillis": 2937,
              "start": 1491242480896,
              "end": 1491242483833
            },
            {
              "step": "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for SDKs Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 497,
              "start": 1491242483833,
              "end": 1491242484330
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 57,
              "start": 1491242484331,
              "end": 1491242484388
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242484388,
              "end": 1491242484388
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/sdks/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open SDKs page",
            "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(products-and-docs/sdks/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "SDK-Java Image"
              ],
              [
                "pageURL",
                "https://github.com/ticketmaster-api/sdk-java"
              ],
              [
                "pageTitle",
                "//h1[@class='public ']/strong/a"
              ]
            ],
            [
              [
                "elementKey",
                "SDK-JavaScript Image"
              ],
              [
                "pageURL",
                "https://github.com/ticketmaster-api/sdk-javascript"
              ],
              [
                "pageTitle",
                "//h1[@class='public ']/strong/a"
              ]
            ],
            [
              [
                "elementKey",
                "SDK-Scala Image"
              ],
              [
                "pageURL",
                "https://github.com/ticketmaster-api/sdk-scala"
              ],
              [
                "pageTitle",
                "//h1[@class='public ']/strong/a"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open SDKs page",
          "When check visibility and click <elementKey> element of SDKs page",
          "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "SDK-Java Image"
            ],
            [
              "pageURL",
              "https://github.com/ticketmaster-api/sdk-java"
            ],
            [
              "pageTitle",
              "//h1[@class='public ']/strong/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open SDKs page",
                "durationInMillis": 2190,
                "start": 1491242484459,
                "end": 1491242486649
              },
              {
                "step": "When check visibility and click <elementKey> element of SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟SDK-Java Image｠ element of SDKs page",
                "durationInMillis": 1628,
                "start": 1491242486650,
                "end": 1491242488278
              },
              {
                "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-java｠ and ｟//h1[@class='public ']/strong/a｠",
                "durationInMillis": 1046,
                "start": 1491242488279,
                "end": 1491242489325
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "SDK-JavaScript Image"
            ],
            [
              "pageURL",
              "https://github.com/ticketmaster-api/sdk-javascript"
            ],
            [
              "pageTitle",
              "//h1[@class='public ']/strong/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open SDKs page",
                "durationInMillis": 1911,
                "start": 1491242489393,
                "end": 1491242491304
              },
              {
                "step": "When check visibility and click <elementKey> element of SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟SDK-JavaScript Image｠ element of SDKs page",
                "durationInMillis": 1616,
                "start": 1491242491305,
                "end": 1491242492921
              },
              {
                "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-javascript｠ and ｟//h1[@class='public ']/strong/a｠",
                "durationInMillis": 1079,
                "start": 1491242492922,
                "end": 1491242494001
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "SDK-Scala Image"
            ],
            [
              "pageURL",
              "https://github.com/ticketmaster-api/sdk-scala"
            ],
            [
              "pageTitle",
              "//h1[@class='public ']/strong/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open SDKs page",
                "durationInMillis": 3166,
                "start": 1491242494069,
                "end": 1491242497235
              },
              {
                "step": "When check visibility and click <elementKey> element of SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟SDK-Scala Image｠ element of SDKs page",
                "durationInMillis": 1197,
                "start": 1491242497236,
                "end": 1491242498433
              },
              {
                "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-scala｠ and ｟//h1[@class='public ']/strong/a｠",
                "durationInMillis": 1083,
                "start": 1491242498434,
                "end": 1491242499517
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Season Ticketing API page",
          "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_SeasonTicketingAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242499583,
              "end": 1491242499583
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Season Ticketing API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Season Ticketing API page",
              "durationInMillis": 4465,
              "start": 1491242499584,
              "end": 1491242504049
            },
            {
              "step": "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Season Ticketing API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 338,
              "start": 1491242504049,
              "end": 1491242504387
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 17,
              "start": 1491242504388,
              "end": 1491242504405
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242504405,
              "end": 1491242504406
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/api-explorer/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Season Ticketing API page",
            "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Top Picks API page",
          "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_TopPicksAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242504470,
              "end": 1491242504471
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Top Picks API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Top Picks API page",
              "durationInMillis": 3711,
              "start": 1491242504471,
              "end": 1491242508182
            },
            {
              "step": "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Top Picks API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 202,
              "start": 1491242508183,
              "end": 1491242508385
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22,
              "start": 1491242508385,
              "end": 1491242508407
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242508407,
              "end": 1491242508408
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/api-explorer/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Top Picks API page",
            "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials page",
          "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242508475,
              "end": 1491242508475
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials page",
              "durationInMillis": 3270,
              "start": 1491242508475,
              "end": 1491242511745
            },
            {
              "step": "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10245,
              "start": 1491242511746,
              "end": 1491242521991
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 39,
              "start": 1491242521992,
              "end": 1491242522031
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242522031,
              "end": 1491242522032
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials page",
            "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials page",
          "When check visibility and click <elementKey> element of Tutorials page",
          "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 4270,
                "start": 1491242522112,
                "end": 1491242526382
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials page",
                "durationInMillis": 1329,
                "start": 1491242526383,
                "end": 1491242527712
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 52,
                "start": 1491242527714,
                "end": 1491242527766
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 2131,
                "start": 1491242527831,
                "end": 1491242529962
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials page",
                "durationInMillis": 1560,
                "start": 1491242529963,
                "end": 1491242531523
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 27,
                "start": 1491242531523,
                "end": 1491242531550
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 2317,
                "start": 1491242531611,
                "end": 1491242533928
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials page",
                "durationInMillis": 1697,
                "start": 1491242533928,
                "end": 1491242535625
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 59,
                "start": 1491242535625,
                "end": 1491242535684
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 2147,
                "start": 1491242535759,
                "end": 1491242537906
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials page",
                "durationInMillis": 3095,
                "start": 1491242537907,
                "end": 1491242541002
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 40,
                "start": 1491242541003,
                "end": 1491242541043
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 3133,
                "start": 1491242541105,
                "end": 1491242544238
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials page",
                "durationInMillis": 737,
                "start": 1491242544239,
                "end": 1491242544976
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 2586,
                "start": 1491242544977,
                "end": 1491242547563
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 3017,
                "start": 1491242547629,
                "end": 1491242550646
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials page",
                "durationInMillis": 716,
                "start": 1491242550647,
                "end": 1491242551363
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 2903,
                "start": 1491242551363,
                "end": 1491242554266
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 2544,
                "start": 1491242554443,
                "end": 1491242556987
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials page",
                "durationInMillis": 2271,
                "start": 1491242556988,
                "end": 1491242559259
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 323,
                "start": 1491242559260,
                "end": 1491242559583
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 1723,
                "start": 1491242559649,
                "end": 1491242561372
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials page",
                "durationInMillis": 1484,
                "start": 1491242561373,
                "end": 1491242562857
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 41,
                "start": 1491242562858,
                "end": 1491242562899
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 1755,
                "start": 1491242562961,
                "end": 1491242564716
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials page",
                "durationInMillis": 3209,
                "start": 1491242564717,
                "end": 1491242567926
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 223,
                "start": 1491242567927,
                "end": 1491242568150
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch page",
          "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242568256,
              "end": 1491242568257
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials EventSearch page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials EventSearch page",
              "durationInMillis": 1784,
              "start": 1491242568257,
              "end": 1491242570041
            },
            {
              "step": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10195,
              "start": 1491242570042,
              "end": 1491242580237
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25,
              "start": 1491242580237,
              "end": 1491242580262
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242580262,
              "end": 1491242580263
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials EventSearch page",
            "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Locate Event On Map Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch page",
          "When check visibility and click <elementKey> element of Tutorials EventSearch page",
          "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 2615,
                "start": 1491242580329,
                "end": 1491242582944
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials EventSearch page",
                "durationInMillis": 3834,
                "start": 1491242582945,
                "end": 1491242586779
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 38,
                "start": 1491242586779,
                "end": 1491242586817
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 3982,
                "start": 1491242586883,
                "end": 1491242590865
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 2160,
                "start": 1491242590865,
                "end": 1491242593025
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 67,
                "start": 1491242593025,
                "end": 1491242593092
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 2504,
                "start": 1491242593155,
                "end": 1491242595659
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 1426,
                "start": 1491242595660,
                "end": 1491242597086
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 33,
                "start": 1491242597087,
                "end": 1491242597120
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 1693,
                "start": 1491242597180,
                "end": 1491242598873
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials EventSearch page",
                "durationInMillis": 1453,
                "start": 1491242598874,
                "end": 1491242600327
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 40,
                "start": 1491242600327,
                "end": 1491242600367
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 3446,
                "start": 1491242600427,
                "end": 1491242603873
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 1725,
                "start": 1491242603874,
                "end": 1491242605599
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 285,
                "start": 1491242605599,
                "end": 1491242605884
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 1798,
                "start": 1491242605951,
                "end": 1491242607749
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 1664,
                "start": 1491242607750,
                "end": 1491242609414
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 413,
                "start": 1491242609416,
                "end": 1491242609829
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch SearchEventInSomeLocation page",
          "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventInSomeLocation.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242609900,
              "end": 1491242609901
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "durationInMillis": 2572,
              "start": 1491242609901,
              "end": 1491242612473
            },
            {
              "step": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 618,
              "start": 1491242612473,
              "end": 1491242613091
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22,
              "start": 1491242613091,
              "end": 1491242613113
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242613113,
              "end": 1491242613113
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials EventSearch SearchEventInSomeLocation page",
            "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
          "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242613184,
              "end": 1491242613185
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "durationInMillis": 4438,
              "start": 1491242613185,
              "end": 1491242617623
            },
            {
              "step": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 267,
              "start": 1491242617624,
              "end": 1491242617891
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 19,
              "start": 1491242617891,
              "end": 1491242617910
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242617910,
              "end": 1491242617910
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
            "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242617975,
              "end": 1491242617976
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 3226,
              "start": 1491242617976,
              "end": 1491242621202
            },
            {
              "step": "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10175,
              "start": 1491242621203,
              "end": 1491242631378
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23,
              "start": 1491242631378,
              "end": 1491242631401
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242631401,
              "end": 1491242631402
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "When check visibility and click <elementKey> element of Tutorials Widgets page",
          "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials Widgets page",
                "durationInMillis": 1732,
                "start": 1491242631465,
                "end": 1491242633197
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials Widgets page",
                "durationInMillis": 928,
                "start": 1491242633198,
                "end": 1491242634126
              },
              {
                "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 418,
                "start": 1491242634127,
                "end": 1491242634545
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials Widgets page",
                "durationInMillis": 4545,
                "start": 1491242634608,
                "end": 1491242639153
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials Widgets page",
                "durationInMillis": 1069,
                "start": 1491242639154,
                "end": 1491242640223
              },
              {
                "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 383,
                "start": 1491242640224,
                "end": 1491242640607
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials Widgets page",
                "durationInMillis": 1976,
                "start": 1491242640670,
                "end": 1491242642646
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials Widgets page",
                "durationInMillis": 1263,
                "start": 1491242642647,
                "end": 1491242643910
              },
              {
                "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 146,
                "start": 1491242643911,
                "end": 1491242644057
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets EventDiscoveryWidget page",
          "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets_EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242644126,
              "end": 1491242644127
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets EventDiscoveryWidget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets EventDiscoveryWidget page",
              "durationInMillis": 2459,
              "start": 1491242644127,
              "end": 1491242646586
            },
            {
              "step": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 336,
              "start": 1491242646586,
              "end": 1491242646922
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 67,
              "start": 1491242646922,
              "end": 1491242646989
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242646989,
              "end": 1491242646990
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets EventDiscoveryWidget page",
            "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) [3.2.1.9 Disqus is present on calendar widget]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_Calendar.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242647063,
              "end": 1491242647064
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 3258,
              "start": 1491242647064,
              "end": 1491242650322
            },
            {
              "step": "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Calendar Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 547,
              "start": 1491242650323,
              "end": 1491242650870
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 20,
              "start": 1491242650871,
              "end": 1491242650891
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242650891,
              "end": 1491242650891
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) [3.2.1.9 Disqus is present on calendar widget]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_Countdown.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242650965,
              "end": 1491242650965
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 2958,
              "start": 1491242650966,
              "end": 1491242653924
            },
            {
              "step": "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Countdown Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 397,
              "start": 1491242653925,
              "end": 1491242654322
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 52,
              "start": 1491242654322,
              "end": 1491242654374
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242654374,
              "end": 1491242654375
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_EventDiscovery.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242654441,
              "end": 1491242654441
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 5604,
              "start": 1491242654441,
              "end": 1491242660045
            },
            {
              "step": "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Event Discovery Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 570,
              "start": 1491242660046,
              "end": 1491242660616
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1491242660616,
              "end": 1491242660640
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242660640,
              "end": 1491242660641
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/checkout/) [3.1.3 Widget checkout : Verification for general page's elements]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Universal Checkout page",
          "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_UniversalCheckout.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242660709,
              "end": 1491242660710
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Universal Checkout page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Universal Checkout page",
              "durationInMillis": 4322,
              "start": 1491242660710,
              "end": 1491242665032
            },
            {
              "step": "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Universal Checkout Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 632,
              "start": 1491242665033,
              "end": 1491242665665
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1491242665665,
              "end": 1491242665689
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242665689,
              "end": 1491242665690
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/checkout/) [3.1.3 Widget checkout : Verification for general page's elements]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Universal Checkout page",
            "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/wordpress/) [3.1.4 Wordpress widget : Verification for general page's elements]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open WordPress Widget page",
          "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_WordPress.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242665755,
              "end": 1491242665755
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open WordPress Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open WordPress Widget page",
              "durationInMillis": 2901,
              "start": 1491242665755,
              "end": 1491242668656
            },
            {
              "step": "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for WordPress Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 573,
              "start": 1491242668657,
              "end": 1491242669230
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1491242669230,
              "end": 1491242669254
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242669254,
              "end": 1491242669254
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/wordpress/) [3.1.4 Wordpress widget : Verification for general page's elements]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open WordPress Widget page",
            "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Widgets page",
          "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242669379,
              "end": 1491242669379
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Widgets page",
              "durationInMillis": 1751,
              "start": 1491242669379,
              "end": 1491242671130
            },
            {
              "step": "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10189,
              "start": 1491242671131,
              "end": 1491242681320
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 26,
              "start": 1491242681320,
              "end": 1491242681346
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242681346,
              "end": 1491242681347
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Widgets page",
            "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Widgets page",
          "When check visibility and click DirectPaymentButton element of Widgets page",
          "Then check that new page opened from Direct Payment Button has has appropriate url"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242681410,
              "end": 1491242681410
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Widgets page",
              "durationInMillis": 1726,
              "start": 1491242681410,
              "end": 1491242683136
            },
            {
              "step": "When check visibility and click DirectPaymentButton element of Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When check visibility and click ｟DirectPaymentButton｠ element of Widgets page",
              "durationInMillis": 829,
              "start": 1491242683137,
              "end": 1491242683966
            },
            {
              "step": "Then check that new page opened from Direct Payment Button has has appropriate url",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check that new page opened from Direct Payment Button has has appropriate url",
              "durationInMillis": 1110,
              "start": 1491242683966,
              "end": 1491242685076
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21,
              "start": 1491242685077,
              "end": 1491242685098
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242685098,
              "end": 1491242685098
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Widgets page",
            "When check visibility and click DirectPaymentButton element of Widgets page",
            "Then check that new page opened from Direct Payment Button has has appropriate url"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Checkout Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/checkout/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Discovery Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/event-discovery/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Countdown Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/countdown/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Calendar Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/calendar/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "WordPress Widget Learn Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/wordpress/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Widgets page",
          "When check visibility and click <elementKey> element of Widgets page",
          "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Checkout Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/checkout/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 4439,
                "start": 1491242685213,
                "end": 1491242689652
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Checkout Widget Button｠ element of Widgets page",
                "durationInMillis": 2571,
                "start": 1491242689653,
                "end": 1491242692224
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/checkout/｠ and ｟//h1｠",
                "durationInMillis": 221,
                "start": 1491242692225,
                "end": 1491242692446
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Discovery Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/event-discovery/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 4449,
                "start": 1491242692525,
                "end": 1491242696974
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Discovery Widget Button｠ element of Widgets page",
                "durationInMillis": 3879,
                "start": 1491242696975,
                "end": 1491242700854
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/event-discovery/｠ and ｟//h1｠",
                "durationInMillis": 1792,
                "start": 1491242700855,
                "end": 1491242702647
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Countdown Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/countdown/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 4073,
                "start": 1491242702713,
                "end": 1491242706786
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Countdown Widget Button｠ element of Widgets page",
                "durationInMillis": 1440,
                "start": 1491242706787,
                "end": 1491242708227
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/countdown/｠ and ｟//h1｠",
                "durationInMillis": 29,
                "start": 1491242708227,
                "end": 1491242708256
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Calendar Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/calendar/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 3499,
                "start": 1491242708317,
                "end": 1491242711816
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Calendar Widget Button｠ element of Widgets page",
                "durationInMillis": 1865,
                "start": 1491242711817,
                "end": 1491242713682
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/calendar/｠ and ｟//h1｠",
                "durationInMillis": 748,
                "start": 1491242713683,
                "end": 1491242714431
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "WordPress Widget Learn Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/wordpress/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 1860,
                "start": 1491242715317,
                "end": 1491242717177
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟WordPress Widget Learn Button｠ element of Widgets page",
                "durationInMillis": 1457,
                "start": 1491242717177,
                "end": 1491242718634
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/wordpress/｠ and ｟//h1｠",
                "durationInMillis": 21,
                "start": 1491242718635,
                "end": 1491242718656
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Support page",
          "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242720575,
              "end": 1491242720576
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Support page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Support page",
              "durationInMillis": 4346,
              "start": 1491242720576,
              "end": 1491242724922
            },
            {
              "step": "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Support Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 423,
              "start": 1491242724923,
              "end": 1491242725346
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 45,
              "start": 1491242725346,
              "end": 1491242725391
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242725391,
              "end": 1491242725391
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Support page",
            "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/branding-guide/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Branding Guide page",
          "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_BrandingGuide.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242725463,
              "end": 1491242725463
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Branding Guide page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Branding Guide page",
              "durationInMillis": 3019,
              "start": 1491242725463,
              "end": 1491242728482
            },
            {
              "step": "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Branding Guide Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 295,
              "start": 1491242728483,
              "end": 1491242728778
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 55,
              "start": 1491242728778,
              "end": 1491242728833
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242728833,
              "end": 1491242728834
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/branding-guide/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Branding Guide page",
            "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/contact-us/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Contact Us page",
          "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_ContactUs.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242728898,
              "end": 1491242728899
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Contact Us page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Contact Us page",
              "durationInMillis": 4527,
              "start": 1491242728899,
              "end": 1491242733426
            },
            {
              "step": "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Contact Us Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10247,
              "start": 1491242733427,
              "end": 1491242743674
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23,
              "start": 1491242743675,
              "end": 1491242743698
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242743698,
              "end": 1491242743698
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/contact-us/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Contact Us page",
            "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/faq/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open FAQ page",
          "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_FAQ.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242743763,
              "end": 1491242743764
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open FAQ page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open FAQ page",
              "durationInMillis": 1602,
              "start": 1491242743764,
              "end": 1491242745366
            },
            {
              "step": "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for FAQ Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 651,
              "start": 1491242745366,
              "end": 1491242746017
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 194,
              "start": 1491242746017,
              "end": 1491242746211
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242746211,
              "end": 1491242746212
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/faq/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open FAQ page",
            "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/terms-of-use/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open General Terms Of Use page",
          "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_GeneralTermsOfUse.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242746287,
              "end": 1491242746288
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open General Terms Of Use page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open General Terms Of Use page",
              "durationInMillis": 2495,
              "start": 1491242746288,
              "end": 1491242748783
            },
            {
              "step": "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for General Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 721,
              "start": 1491242748784,
              "end": 1491242749505
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 43,
              "start": 1491242749505,
              "end": 1491242749548
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242749548,
              "end": 1491242749549
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/terms-of-use/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open General Terms Of Use page",
            "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Partner API Terms Of Use page",
          "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_PartnerAPITermsOfUse.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242749613,
              "end": 1491242749614
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Partner API Terms Of Use page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Partner API Terms Of Use page",
              "durationInMillis": 1637,
              "start": 1491242749614,
              "end": 1491242751251
            },
            {
              "step": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 265,
              "start": 1491242751252,
              "end": 1491242751517
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 255,
              "start": 1491242751517,
              "end": 1491242751772
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242751772,
              "end": 1491242751772
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Partner API Terms Of Use page",
            "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "Then the required fields are not empty on the Calendar Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242751861,
              "end": 1491242751862
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 3613,
              "start": 1491242751862,
              "end": 1491242755475
            },
            {
              "step": "Then the required fields are not empty on the Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the required fields are not empty on the Calendar Widget page",
              "durationInMillis": 392,
              "start": 1491242755476,
              "end": 1491242755868
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 33,
              "start": 1491242755869,
              "end": 1491242755902
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242755902,
              "end": 1491242755902
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "Then the required fields are not empty on the Calendar Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And change values for: apiKey,keyword,postalCodeApi",
          "And store values of: apiKey,keyword,postalCodeApi",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242755974,
              "end": 1491242755974
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 3803,
              "start": 1491242755974,
              "end": 1491242759777
            },
            {
              "step": "And change values for: apiKey,keyword,postalCodeApi",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for: ｟apiKey,keyword,postalCodeApi｠",
              "durationInMillis": 2068,
              "start": 1491242759777,
              "end": 1491242761845
            },
            {
              "step": "And store values of: apiKey,keyword,postalCodeApi",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values of: ｟apiKey,keyword,postalCodeApi｠",
              "durationInMillis": 176,
              "start": 1491242761845,
              "end": 1491242762021
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 800,
              "start": 1491242762022,
              "end": 1491242762822
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 483,
              "start": 1491242762823,
              "end": 1491242763306
            },
            {
              "step": "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,postalCodeApi｠",
              "durationInMillis": 248,
              "start": 1491242763306,
              "end": 1491242763554
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23,
              "start": 1491242763555,
              "end": 1491242763578
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242763578,
              "end": 1491242763579
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And change values for: apiKey,keyword,postalCodeApi",
            "And store values of: apiKey,keyword,postalCodeApi",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And store values of: apiKey,keyword,postalCodeApi",
          "And change values for: apiKey,keyword,postalCodeApi",
          "When click reset button",
          "Then values of fields: apiKey,keyword,postalCodeApi equals stored values"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242763645,
              "end": 1491242763646
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 4871,
              "start": 1491242763646,
              "end": 1491242768517
            },
            {
              "step": "And store values of: apiKey,keyword,postalCodeApi",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values of: ｟apiKey,keyword,postalCodeApi｠",
              "durationInMillis": 186,
              "start": 1491242768518,
              "end": 1491242768704
            },
            {
              "step": "And change values for: apiKey,keyword,postalCodeApi",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for: ｟apiKey,keyword,postalCodeApi｠",
              "durationInMillis": 1950,
              "start": 1491242768705,
              "end": 1491242770655
            },
            {
              "step": "When click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click reset button",
              "durationInMillis": 1711,
              "start": 1491242770656,
              "end": 1491242772367
            },
            {
              "step": "Then values of fields: apiKey,keyword,postalCodeApi equals stored values",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then values of fields: ｟apiKey,keyword,postalCodeApi｠ equals stored values",
              "durationInMillis": 99,
              "start": 1491242772371,
              "end": 1491242772470
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 20,
              "start": 1491242772471,
              "end": 1491242772491
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242772491,
              "end": 1491242772492
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And store values of: apiKey,keyword,postalCodeApi",
            "And change values for: apiKey,keyword,postalCodeApi",
            "When click reset button",
            "Then values of fields: apiKey,keyword,postalCodeApi equals stored values"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And store values of: apiKey,keyword,postalCodeApi",
          "And change values for: apiKey,keyword,postalCodeApi",
          "When click reset button on Calendar Widget Page",
          "And click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242772555,
              "end": 1491242772556
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 2820,
              "start": 1491242772556,
              "end": 1491242775376
            },
            {
              "step": "And store values of: apiKey,keyword,postalCodeApi",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values of: ｟apiKey,keyword,postalCodeApi｠",
              "durationInMillis": 448,
              "start": 1491242775377,
              "end": 1491242775825
            },
            {
              "step": "And change values for: apiKey,keyword,postalCodeApi",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for: ｟apiKey,keyword,postalCodeApi｠",
              "durationInMillis": 2605,
              "start": 1491242775826,
              "end": 1491242778431
            },
            {
              "step": "When click reset button on Calendar Widget Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click reset button on Calendar Widget Page",
              "durationInMillis": 1149,
              "start": 1491242778432,
              "end": 1491242779581
            },
            {
              "step": "And click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click on \"Get code\" button",
              "durationInMillis": 787,
              "start": 1491242779582,
              "end": 1491242780369
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 444,
              "start": 1491242780371,
              "end": 1491242780815
            },
            {
              "step": "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,postalCodeApi｠",
              "durationInMillis": 287,
              "start": 1491242780816,
              "end": 1491242781103
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 61,
              "start": 1491242781104,
              "end": 1491242781165
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242781165,
              "end": 1491242781166
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And store values of: apiKey,keyword,postalCodeApi",
            "And change values for: apiKey,keyword,postalCodeApi",
            "When click reset button on Calendar Widget Page",
            "And click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "When I click on the 'Get your own' link to get api key",
          "Then The page is opened with url https://developer-acct.ticketmaster.com"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 34,
              "start": 1491242781242,
              "end": 1491242781276
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 4835,
              "start": 1491242781277,
              "end": 1491242786112
            },
            {
              "step": "When I click on the 'Get your own' link to get api key",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When I click on the 'Get your own' link to get api key",
              "durationInMillis": 307,
              "start": 1491242786113,
              "end": 1491242786420
            },
            {
              "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
              "durationInMillis": 727,
              "start": 1491242786420,
              "end": 1491242787147
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 19,
              "start": 1491242787148,
              "end": 1491242787167
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242787167,
              "end": 1491242787167
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "When I click on the 'Get your own' link to get api key",
            "Then The page is opened with url https://developer-acct.ticketmaster.com"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And enter custom ApiKey invalidApiKey123",
          "Then the event message is shown \"No results were found\""
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242787230,
              "end": 1491242787231
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 2951,
              "start": 1491242787231,
              "end": 1491242790182
            },
            {
              "step": "And enter custom ApiKey invalidApiKey123",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And enter custom ApiKey ｟invalidApiKey123｠",
              "durationInMillis": 590,
              "start": 1491242790183,
              "end": 1491242790773
            },
            {
              "step": "Then the event message is shown \"No results were found\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"No results were found\"",
              "durationInMillis": 1562,
              "start": 1491242790774,
              "end": 1491242792336
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 28,
              "start": 1491242792337,
              "end": 1491242792365
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242792365,
              "end": 1491242792366
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And enter custom ApiKey invalidApiKey123",
            "Then the event message is shown \"No results were found\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) [3.3.1 Countdown widget layout]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "Then check general page elements for page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242792432,
              "end": 1491242792432
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 3234,
              "start": 1491242792433,
              "end": 1491242795667
            },
            {
              "step": "Then check general page elements for page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 237,
              "start": 1491242795668,
              "end": 1491242795905
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 18,
              "start": 1491242795905,
              "end": 1491242795923
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242795923,
              "end": 1491242795923
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) [3.3.1 Countdown widget layout]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "Then check general page elements for page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) [3.3.2 Countdown widget : Common functionality is not broken]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "Then the required fields are not empty on the Countdown Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242795984,
              "end": 1491242795985
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 3557,
              "start": 1491242795985,
              "end": 1491242799542
            },
            {
              "step": "Then the required fields are not empty on the Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the required fields are not empty on the Countdown Widget page",
              "durationInMillis": 184,
              "start": 1491242799543,
              "end": 1491242799727
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25,
              "start": 1491242799727,
              "end": 1491242799752
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242799752,
              "end": 1491242799753
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) [3.3.2 Countdown widget : Common functionality is not broken]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "Then the required fields are not empty on the Countdown Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored ApiKey and EventId"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242799816,
              "end": 1491242799816
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 4628,
              "start": 1491242799816,
              "end": 1491242804444
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 115,
              "start": 1491242804445,
              "end": 1491242804560
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 716,
              "start": 1491242804561,
              "end": 1491242805277
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 1038,
              "start": 1491242805278,
              "end": 1491242806316
            },
            {
              "step": "And embedded html code contains stored ApiKey and EventId",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
              "durationInMillis": 111,
              "start": 1491242806316,
              "end": 1491242806427
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 20,
              "start": 1491242806427,
              "end": 1491242806447
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242806447,
              "end": 1491242806447
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored ApiKey and EventId"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And change value for ApiKey and EventId on Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored ApiKey and EventId"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242806509,
              "end": 1491242806510
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 2969,
              "start": 1491242806510,
              "end": 1491242809479
            },
            {
              "step": "And change value for ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 570,
              "start": 1491242809480,
              "end": 1491242810050
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 77,
              "start": 1491242810051,
              "end": 1491242810128
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 686,
              "start": 1491242810129,
              "end": 1491242810815
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 323,
              "start": 1491242810816,
              "end": 1491242811139
            },
            {
              "step": "And embedded html code contains stored ApiKey and EventId",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
              "durationInMillis": 126,
              "start": 1491242811140,
              "end": 1491242811266
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 19,
              "start": 1491242811266,
              "end": 1491242811285
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242811285,
              "end": 1491242811286
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And change value for ApiKey and EventId on Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored ApiKey and EventId"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "And change value for ApiKey and EventId on Countdown Widget page",
          "When submit form",
          "And click reset button",
          "Then the ApiKey and EventId fields have stored values"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242811348,
              "end": 1491242811349
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 2404,
              "start": 1491242811349,
              "end": 1491242813753
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 808,
              "start": 1491242813754,
              "end": 1491242814562
            },
            {
              "step": "And change value for ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 487,
              "start": 1491242814563,
              "end": 1491242815050
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 116,
              "start": 1491242815050,
              "end": 1491242815166
            },
            {
              "step": "And click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click reset button",
              "durationInMillis": 1789,
              "start": 1491242815166,
              "end": 1491242816955
            },
            {
              "step": "Then the ApiKey and EventId fields have stored values",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the ApiKey and EventId fields have stored values",
              "durationInMillis": 62,
              "start": 1491242816956,
              "end": 1491242817018
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 20,
              "start": 1491242817019,
              "end": 1491242817039
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242817039,
              "end": 1491242817040
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "And change value for ApiKey and EventId on Countdown Widget page",
            "When submit form",
            "And click reset button",
            "Then the ApiKey and EventId fields have stored values"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "And change value for ApiKey and EventId on Countdown Widget page",
          "When submit form",
          "And click reset button",
          "And click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored ApiKey and EventId"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242817102,
              "end": 1491242817103
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 4425,
              "start": 1491242817103,
              "end": 1491242821528
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 279,
              "start": 1491242821528,
              "end": 1491242821807
            },
            {
              "step": "And change value for ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 541,
              "start": 1491242821808,
              "end": 1491242822349
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 71,
              "start": 1491242822350,
              "end": 1491242822421
            },
            {
              "step": "And click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click reset button",
              "durationInMillis": 1714,
              "start": 1491242822422,
              "end": 1491242824136
            },
            {
              "step": "And click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click on \"Get code\" button",
              "durationInMillis": 670,
              "start": 1491242824137,
              "end": 1491242824807
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 346,
              "start": 1491242824808,
              "end": 1491242825154
            },
            {
              "step": "And embedded html code contains stored ApiKey and EventId",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
              "durationInMillis": 148,
              "start": 1491242825155,
              "end": 1491242825303
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 18,
              "start": 1491242825304,
              "end": 1491242825322
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242825322,
              "end": 1491242825322
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "And change value for ApiKey and EventId on Countdown Widget page",
            "When submit form",
            "And click reset button",
            "And click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored ApiKey and EventId"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "When get eventId by keyword ZZ TOP",
          "And set first eventId from list",
          "Then the event poster contains ZZ TOP"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242825385,
              "end": 1491242825386
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 1980,
              "start": 1491242825386,
              "end": 1491242827366
            },
            {
              "step": "When get eventId by keyword ZZ TOP",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When get eventId by keyword ｟ZZ TOP｠",
              "durationInMillis": 1394,
              "start": 1491242827367,
              "end": 1491242828761
            },
            {
              "step": "And set first eventId from list",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And set first eventId from list",
              "durationInMillis": 1758,
              "start": 1491242828762,
              "end": 1491242830520
            },
            {
              "step": "Then the event poster contains ZZ TOP",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event poster contains ｟ZZ TOP｠",
              "durationInMillis": 356,
              "start": 1491242830521,
              "end": 1491242830877
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1491242830877,
              "end": 1491242830901
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242830901,
              "end": 1491242830901
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "When get eventId by keyword ZZ TOP",
            "And set first eventId from list",
            "Then the event poster contains ZZ TOP"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "When I click on the 'Get your own' link to get api key",
          "Then The page is opened with url https://developer-acct.ticketmaster.com"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242830963,
              "end": 1491242830964
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 3482,
              "start": 1491242830964,
              "end": 1491242834446
            },
            {
              "step": "When I click on the 'Get your own' link to get api key",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When I click on the 'Get your own' link to get api key",
              "durationInMillis": 301,
              "start": 1491242834446,
              "end": 1491242834747
            },
            {
              "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
              "durationInMillis": 1412,
              "start": 1491242834748,
              "end": 1491242836160
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 19,
              "start": 1491242836161,
              "end": 1491242836180
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242836180,
              "end": 1491242836180
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "When I click on the 'Get your own' link to get api key",
            "Then The page is opened with url https://developer-acct.ticketmaster.com"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And switch to VISUAL Tab",
          "And set theme to full-width",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored theme"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242836243,
              "end": 1491242836244
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 4689,
              "start": 1491242836244,
              "end": 1491242840933
            },
            {
              "step": "And switch to VISUAL Tab",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And switch to VISUAL Tab",
              "durationInMillis": 263,
              "start": 1491242840934,
              "end": 1491242841197
            },
            {
              "step": "And set theme to full-width",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And set theme to full-width",
              "durationInMillis": 893,
              "start": 1491242841198,
              "end": 1491242842091
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 1131,
              "start": 1491242842091,
              "end": 1491242843222
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 727,
              "start": 1491242843223,
              "end": 1491242843950
            },
            {
              "step": "And embedded html code contains stored theme",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored theme",
              "durationInMillis": 98,
              "start": 1491242843951,
              "end": 1491242844049
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21,
              "start": 1491242844049,
              "end": 1491242844070
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242844070,
              "end": 1491242844070
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And switch to VISUAL Tab",
            "And set theme to full-width",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored theme"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) [3.3.4 Countdown widget : Full-width]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|fullwidth       |\n|custom          |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "layoutResolution"
          ],
          "data": [
            [
              [
                "layoutResolution",
                "300x600"
              ]
            ],
            [
              [
                "layoutResolution",
                "300x250"
              ]
            ],
            [
              [
                "layoutResolution",
                "fullwidth"
              ]
            ],
            [
              [
                "layoutResolution",
                "custom"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And switch to VISUAL Tab",
          "And set layout resolution to <layoutResolution>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout resolution"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "layoutResolution",
              "300x600"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 2091,
                "start": 1491242844134,
                "end": 1491242846225
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 829,
                "start": 1491242846226,
                "end": 1491242847055
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟300x600｠",
                "durationInMillis": 891,
                "start": 1491242847056,
                "end": 1491242847947
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 847,
                "start": 1491242847948,
                "end": 1491242848795
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 375,
                "start": 1491242848795,
                "end": 1491242849170
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 605,
                "start": 1491242849171,
                "end": 1491242849776
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) [3.3.4 Countdown widget : Full-width]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|fullwidth       |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "fullwidth"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "300x250"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 2703,
                "start": 1491242849839,
                "end": 1491242852542
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 313,
                "start": 1491242852543,
                "end": 1491242852856
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟300x250｠",
                "durationInMillis": 1144,
                "start": 1491242852857,
                "end": 1491242854001
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 1109,
                "start": 1491242854002,
                "end": 1491242855111
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 271,
                "start": 1491242855111,
                "end": 1491242855382
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 182,
                "start": 1491242855383,
                "end": 1491242855565
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) [3.3.4 Countdown widget : Full-width]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|fullwidth       |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "fullwidth"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "fullwidth"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 3360,
                "start": 1491242855628,
                "end": 1491242858988
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 426,
                "start": 1491242858988,
                "end": 1491242859414
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟fullwidth｠",
                "durationInMillis": 1425,
                "start": 1491242859415,
                "end": 1491242860840
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 1107,
                "start": 1491242860840,
                "end": 1491242861947
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 380,
                "start": 1491242861947,
                "end": 1491242862327
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 238,
                "start": 1491242862328,
                "end": 1491242862566
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) [3.3.4 Countdown widget : Full-width]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|fullwidth       |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "fullwidth"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "custom"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 2040,
                "start": 1491242862629,
                "end": 1491242864669
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 225,
                "start": 1491242864670,
                "end": 1491242864895
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟custom｠",
                "durationInMillis": 1270,
                "start": 1491242864896,
                "end": 1491242866166
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 723,
                "start": 1491242866166,
                "end": 1491242866889
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 1051,
                "start": 1491242866890,
                "end": 1491242867941
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 63,
                "start": 1491242867942,
                "end": 1491242868005
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) [3.3.4 Countdown widget : Full-width]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|fullwidth       |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "fullwidth"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "orientation"
          ],
          "data": [
            [
              [
                "orientation",
                "horizontal"
              ]
            ],
            [
              [
                "orientation",
                "vertical"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And switch to VISUAL Tab",
          "And set layout orientation to <orientation>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout orientation"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "orientation",
              "horizontal"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 3088,
                "start": 1491242868071,
                "end": 1491242871159
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 205,
                "start": 1491242871160,
                "end": 1491242871365
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                "durationInMillis": 1440,
                "start": 1491242871366,
                "end": 1491242872806
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 772,
                "start": 1491242872807,
                "end": 1491242873579
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 1012,
                "start": 1491242873580,
                "end": 1491242874592
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 51,
                "start": 1491242874593,
                "end": 1491242874644
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        },
        {
          "parameters": [
            [
              "orientation",
              "vertical"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 4458,
                "start": 1491242874706,
                "end": 1491242879164
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 187,
                "start": 1491242879165,
                "end": 1491242879352
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout orientation to ｟vertical｠",
                "durationInMillis": 1048,
                "start": 1491242879353,
                "end": 1491242880401
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 798,
                "start": 1491242880401,
                "end": 1491242881199
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 243,
                "start": 1491242881200,
                "end": 1491242881443
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 94,
                "start": 1491242881444,
                "end": 1491242881538
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And enter custom ApiKey {InvalidApiKey123}",
          "When submit form",
          "Then the event message is shown \"No results were found\""
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242881602,
              "end": 1491242881602
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 2089,
              "start": 1491242881602,
              "end": 1491242883691
            },
            {
              "step": "And enter custom ApiKey {InvalidApiKey123}",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And enter custom ApiKey ｟{InvalidApiKey123}｠",
              "durationInMillis": 1036,
              "start": 1491242883691,
              "end": 1491242884727
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 89,
              "start": 1491242884727,
              "end": 1491242884816
            },
            {
              "step": "Then the event message is shown \"No results were found\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"No results were found\"",
              "durationInMillis": 106,
              "start": 1491242884817,
              "end": 1491242884923
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 129,
              "start": 1491242884924,
              "end": 1491242885053
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242885053,
              "end": 1491242885054
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And enter custom ApiKey {InvalidApiKey123}",
            "When submit form",
            "Then the event message is shown \"No results were found\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And enter custom EventId invalidEventId123",
          "When submit form",
          "Then the event message is shown \"No results were found\""
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242885169,
              "end": 1491242885169
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 2344,
              "start": 1491242885170,
              "end": 1491242887514
            },
            {
              "step": "And enter custom EventId invalidEventId123",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And enter custom EventId ｟invalidEventId123｠",
              "durationInMillis": 1027,
              "start": 1491242887515,
              "end": 1491242888542
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 127,
              "start": 1491242888543,
              "end": 1491242888670
            },
            {
              "step": "Then the event message is shown \"No results were found\"",
              "type": "FAILED",
              "throwable": {
                "detailMessage": "Then the event message is shown \"No results were found\"",
                "cause": {
                  "@class": "java.lang.AssertionError",
                  "detailMessage": "Event message does not contains No results were found",
                  "stackTrace": [
                    "org.junit.Assert.fail(Assert.java:88)",
                    "org.junit.Assert.assertTrue(Assert.java:41)",
                    "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.checkThatEventMessageIsShown(PD_Widget_CountdownSteps.java:218)",
                    "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$58caa3fe.CGLIB$checkThatEventMessageIsShown$10(<generated>)",
                    "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$58caa3fe$$FastClassByCGLIB$$92e46f5d.invoke(<generated>)",
                    "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                    "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                    "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                    "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                    "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                    "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                    "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$58caa3fe.checkThatEventMessageIsShown(<generated>)",
                    "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.checkThatEventMessageIsShown(CountdownWidgetDefinition.java:192)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                    "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                    "java.lang.reflect.Method.invoke(Method.java:483)",
                    "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ]
                },
                "stackTrace": [
                  "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                  "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "40147e83-9159-4842-9742-09d2eeefedf6"
              },
              "parametrisedStep": "Then the event message is shown \"No results were found\"",
              "durationInMillis": 1411,
              "start": 1491242888671,
              "end": 1491242890082
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 7,
              "start": 1491242890084,
              "end": 1491242890091
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242890091,
              "end": 1491242890091
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And enter custom EventId invalidEventId123",
            "When submit form",
            "Then the event message is shown \"No results were found\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "FAILED"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "Then the required fields are not empty and have default values on the Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242890792,
              "end": 1491242890792
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 4711,
              "start": 1491242890792,
              "end": 1491242895503
            },
            {
              "step": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
              "durationInMillis": 114,
              "start": 1491242895503,
              "end": 1491242895617
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 256,
              "start": 1491242895617,
              "end": 1491242895873
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491242895873,
              "end": 1491242895874
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "Then the required fields are not empty and have default values on the Event Discovery Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
          "And store all fields values on the Event Discovery Widget page",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored values on the Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242895941,
              "end": 1491242895941
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 4519,
              "start": 1491242895942,
              "end": 1491242900461
            },
            {
              "step": "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change all possible fields on the Event Discovery Widget page:\n［|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |］",
              "durationInMillis": 6785,
              "start": 1491242900461,
              "end": 1491242907246
            },
            {
              "step": "And store all fields values on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store all fields values on the Event Discovery Widget page",
              "durationInMillis": 436,
              "start": 1491242907249,
              "end": 1491242907685
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 962,
              "start": 1491242907686,
              "end": 1491242908648
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 740,
              "start": 1491242908649,
              "end": 1491242909389
            },
            {
              "step": "And embedded html code contains stored values on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored values on the Event Discovery Widget page",
              "durationInMillis": 816,
              "start": 1491242909390,
              "end": 1491242910206
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21,
              "start": 1491242910207,
              "end": 1491242910228
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491242910228,
              "end": 1491242910228
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
            "And store all fields values on the Event Discovery Widget page",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored values on the Event Discovery Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "keyword"
          ],
          "data": [
            [
              [
                "keyword",
                "ADELE"
              ]
            ],
            [
              [
                "keyword",
                "STING"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When search events by keyword <keyword> on Event Discovery Widget page",
          "Then found events contains <keyword> on Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "keyword",
              "ADELE"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 6039,
                "start": 1491242910304,
                "end": 1491242916343
              },
              {
                "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When search events by keyword ｟ADELE｠ on Event Discovery Widget page",
                "durationInMillis": 524,
                "start": 1491242916344,
                "end": 1491242916868
              },
              {
                "step": "Then found events contains <keyword> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then found events contains ｟ADELE｠ on Event Discovery Widget page",
                "durationInMillis": 2674,
                "start": 1491242916869,
                "end": 1491242919543
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "keyword",
              "STING"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5118,
                "start": 1491242919618,
                "end": 1491242924736
              },
              {
                "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When search events by keyword ｟STING｠ on Event Discovery Widget page",
                "durationInMillis": 524,
                "start": 1491242924737,
                "end": 1491242925261
              },
              {
                "step": "Then found events contains <keyword> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then found events contains ｟STING｠ on Event Discovery Widget page",
                "durationInMillis": 2401,
                "start": 1491242925262,
                "end": 1491242927663
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|value|\n| 1   |\n| 100 |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "value"
          ],
          "data": [
            [
              [
                "value",
                "1"
              ]
            ],
            [
              [
                "value",
                "100"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When set Event Count <value> on Event Discovery Widget page",
          "Then the number of events equals or less than Event Count <value>"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "value",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4327,
                "start": 1491242927729,
                "end": 1491242932056
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 2765,
                "start": 1491242932057,
                "end": 1491242934822
              },
              {
                "step": "Then the number of events equals or less than Event Count <value>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals or less than Event Count ｟1｠",
                "durationInMillis": 43,
                "start": 1491242934822,
                "end": 1491242934865
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "100"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 6606,
                "start": 1491242934930,
                "end": 1491242941536
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                "durationInMillis": 2533,
                "start": 1491242941537,
                "end": 1491242944070
              },
              {
                "step": "Then the number of events equals or less than Event Count <value>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals or less than Event Count ｟100｠",
                "durationInMillis": 1926,
                "start": 1491242944071,
                "end": 1491242945997
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "value",
            "actualValue"
          ],
          "data": [
            [
              [
                "value",
                "0"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "value",
                "1"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "value",
                "100"
              ],
              [
                "actualValue",
                "100"
              ]
            ],
            [
              [
                "value",
                "101"
              ],
              [
                "actualValue",
                "100"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When set Event Count <value> on Event Discovery Widget page",
          "Then the number of events equals Event Count <actualValue>"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "value",
              "0"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5729,
                "start": 1491242946079,
                "end": 1491242951808
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟0｠ on Event Discovery Widget page",
                "durationInMillis": 2699,
                "start": 1491242951809,
                "end": 1491242954508
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                "durationInMillis": 62,
                "start": 1491242954509,
                "end": 1491242954571
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "1"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4319,
                "start": 1491242954643,
                "end": 1491242958962
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 2608,
                "start": 1491242958963,
                "end": 1491242961571
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                "durationInMillis": 129,
                "start": 1491242961572,
                "end": 1491242961701
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "100"
            ],
            [
              "actualValue",
              "100"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4472,
                "start": 1491242961768,
                "end": 1491242966240
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                "durationInMillis": 2434,
                "start": 1491242966241,
                "end": 1491242968675
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                "durationInMillis": 1360,
                "start": 1491242968676,
                "end": 1491242970036
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "101"
            ],
            [
              "actualValue",
              "100"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4911,
                "start": 1491242970104,
                "end": 1491242975015
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟101｠ on Event Discovery Widget page",
                "durationInMillis": 2834,
                "start": 1491242975016,
                "end": 1491242977850
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                "durationInMillis": 1186,
                "start": 1491242977850,
                "end": 1491242979036
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "setValue",
            "actualValue"
          ],
          "data": [
            [
              [
                "setValue",
                "0"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "setValue",
                "1"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "setValue",
                "19999"
              ],
              [
                "actualValue",
                "19999"
              ]
            ],
            [
              [
                "setValue",
                "20000"
              ],
              [
                "actualValue",
                "19999"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When change value of ZipCode 90015 on Event Discovery Widget Page",
          "And use GeoPosition on Event Discovery Widget page",
          "And set Radius <setValue> on Event Discovery Widget page",
          "Then Radius value is <actualValue> on Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "setValue",
              "0"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5236,
                "start": 1491242979108,
                "end": 1491242984344
              },
              {
                "step": "When change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 854,
                "start": 1491242984345,
                "end": 1491242985199
              },
              {
                "step": "And use GeoPosition on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And use GeoPosition on Event Discovery Widget page",
                "durationInMillis": 170,
                "start": 1491242985200,
                "end": 1491242985370
              },
              {
                "step": "And set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set Radius ｟0｠ on Event Discovery Widget page",
                "durationInMillis": 1132,
                "start": 1491242985371,
                "end": 1491242986503
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 93,
                "start": 1491242986503,
                "end": 1491242986596
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode 90015 on Event Discovery Widget Page",
              "And use GeoPosition on Event Discovery Widget page",
              "And set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "setValue",
              "1"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4424,
                "start": 1491242986664,
                "end": 1491242991088
              },
              {
                "step": "When change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 1062,
                "start": 1491242991089,
                "end": 1491242992151
              },
              {
                "step": "And use GeoPosition on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And use GeoPosition on Event Discovery Widget page",
                "durationInMillis": 134,
                "start": 1491242992152,
                "end": 1491242992286
              },
              {
                "step": "And set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set Radius ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 1253,
                "start": 1491242992286,
                "end": 1491242993539
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 70,
                "start": 1491242993539,
                "end": 1491242993609
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode 90015 on Event Discovery Widget Page",
              "And use GeoPosition on Event Discovery Widget page",
              "And set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "setValue",
              "19999"
            ],
            [
              "actualValue",
              "19999"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4310,
                "start": 1491242993675,
                "end": 1491242997985
              },
              {
                "step": "When change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 1061,
                "start": 1491242997986,
                "end": 1491242999047
              },
              {
                "step": "And use GeoPosition on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And use GeoPosition on Event Discovery Widget page",
                "durationInMillis": 193,
                "start": 1491242999048,
                "end": 1491242999241
              },
              {
                "step": "And set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set Radius ｟19999｠ on Event Discovery Widget page",
                "durationInMillis": 1094,
                "start": 1491242999241,
                "end": 1491243000335
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                "durationInMillis": 70,
                "start": 1491243000336,
                "end": 1491243000406
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode 90015 on Event Discovery Widget Page",
              "And use GeoPosition on Event Discovery Widget page",
              "And set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "setValue",
              "20000"
            ],
            [
              "actualValue",
              "19999"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4736,
                "start": 1491243000472,
                "end": 1491243005208
              },
              {
                "step": "When change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 1215,
                "start": 1491243005209,
                "end": 1491243006424
              },
              {
                "step": "And use GeoPosition on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And use GeoPosition on Event Discovery Widget page",
                "durationInMillis": 616,
                "start": 1491243006425,
                "end": 1491243007041
              },
              {
                "step": "And set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set Radius ｟20000｠ on Event Discovery Widget page",
                "durationInMillis": 988,
                "start": 1491243007041,
                "end": 1491243008029
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                "durationInMillis": 74,
                "start": 1491243008029,
                "end": 1491243008103
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode 90015 on Event Discovery Widget Page",
              "And use GeoPosition on Event Discovery Widget page",
              "And set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When I click on the 'Get your own' link to get api key",
          "Then The page is opened with url https://developer-acct.ticketmaster.com"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491243008171,
              "end": 1491243008172
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 6874,
              "start": 1491243008172,
              "end": 1491243015046
            },
            {
              "step": "When I click on the 'Get your own' link to get api key",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When I click on the 'Get your own' link to get api key",
              "durationInMillis": 234,
              "start": 1491243015047,
              "end": 1491243015281
            },
            {
              "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
              "durationInMillis": 839,
              "start": 1491243015282,
              "end": 1491243016121
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 20,
              "start": 1491243016121,
              "end": 1491243016141
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243016141,
              "end": 1491243016141
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "When I click on the 'Get your own' link to get api key",
            "Then The page is opened with url https://developer-acct.ticketmaster.com"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "layoutResolution"
          ],
          "data": [
            [
              [
                "layoutResolution",
                "300x600"
              ]
            ],
            [
              [
                "layoutResolution",
                "300x250"
              ]
            ],
            [
              [
                "layoutResolution",
                "custom"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And switch to VISUAL Tab",
          "And set theme to poster",
          "And set layout resolution to <layoutResolution>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout resolution"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "layoutResolution",
              "300x600"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4426,
                "start": 1491243016208,
                "end": 1491243020634
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 299,
                "start": 1491243020635,
                "end": 1491243020934
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 501,
                "start": 1491243020935,
                "end": 1491243021436
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟300x600｠",
                "durationInMillis": 737,
                "start": 1491243021437,
                "end": 1491243022174
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 995,
                "start": 1491243022175,
                "end": 1491243023170
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 225,
                "start": 1491243023171,
                "end": 1491243023396
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 236,
                "start": 1491243023397,
                "end": 1491243023633
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "300x250"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4897,
                "start": 1491243023698,
                "end": 1491243028595
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 402,
                "start": 1491243028596,
                "end": 1491243028998
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 408,
                "start": 1491243028998,
                "end": 1491243029406
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟300x250｠",
                "durationInMillis": 792,
                "start": 1491243029407,
                "end": 1491243030199
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 882,
                "start": 1491243030200,
                "end": 1491243031082
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 566,
                "start": 1491243031083,
                "end": 1491243031649
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 173,
                "start": 1491243031649,
                "end": 1491243031822
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "custom"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5834,
                "start": 1491243031889,
                "end": 1491243037723
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 615,
                "start": 1491243037724,
                "end": 1491243038339
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 431,
                "start": 1491243038339,
                "end": 1491243038770
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟custom｠",
                "durationInMillis": 708,
                "start": 1491243038771,
                "end": 1491243039479
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 911,
                "start": 1491243039480,
                "end": 1491243040391
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 295,
                "start": 1491243040391,
                "end": 1491243040686
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 68,
                "start": 1491243040687,
                "end": 1491243040755
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "orientation"
          ],
          "data": [
            [
              [
                "orientation",
                "horizontal"
              ]
            ],
            [
              [
                "orientation",
                "vertical"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And switch to VISUAL Tab",
          "And set theme to poster",
          "And set layout orientation to <orientation>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout orientation"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "orientation",
              "horizontal"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 3901,
                "start": 1491243040821,
                "end": 1491243044722
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 518,
                "start": 1491243044723,
                "end": 1491243045241
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 478,
                "start": 1491243045242,
                "end": 1491243045720
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                "durationInMillis": 745,
                "start": 1491243045720,
                "end": 1491243046465
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 1222,
                "start": 1491243046466,
                "end": 1491243047688
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 515,
                "start": 1491243047689,
                "end": 1491243048204
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 58,
                "start": 1491243048205,
                "end": 1491243048263
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        },
        {
          "parameters": [
            [
              "orientation",
              "vertical"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5302,
                "start": 1491243048329,
                "end": 1491243053631
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 177,
                "start": 1491243053631,
                "end": 1491243053808
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 505,
                "start": 1491243053809,
                "end": 1491243054314
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout orientation to ｟vertical｠",
                "durationInMillis": 747,
                "start": 1491243054315,
                "end": 1491243055062
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 905,
                "start": 1491243055062,
                "end": 1491243055967
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 1011,
                "start": 1491243055968,
                "end": 1491243056979
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 58,
                "start": 1491243056979,
                "end": 1491243057037
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
          "Then the event message is shown \"Here other options for you.\""
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491243057101,
              "end": 1491243057102
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 4519,
              "start": 1491243057102,
              "end": 1491243061621
            },
            {
              "step": "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When search events by keyword ｟ABRAKADABRA｠ on Event Discovery Widget page",
              "durationInMillis": 520,
              "start": 1491243061622,
              "end": 1491243062142
            },
            {
              "step": "Then the event message is shown \"Here other options for you.\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"Here other options for you.\"",
              "durationInMillis": 913,
              "start": 1491243062143,
              "end": 1491243063056
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22,
              "start": 1491243063056,
              "end": 1491243063078
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243063078,
              "end": 1491243063078
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
            "Then the event message is shown \"Here other options for you.\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(feedback widget) Check that Feedback widget Elements are shown",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "And Feedback widget is not shown",
          "When click Feedback button of Tutorials Widgets page",
          "Then Feedback widget elements are shown"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243063145,
              "end": 1491243063145
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 2016,
              "start": 1491243063145,
              "end": 1491243065161
            },
            {
              "step": "And Feedback widget is not shown",
              "type": "PENDING",
              "throwable": {
                "@class": "org.jbehave.core.failures.PendingStepFound",
                "detailMessage": "And Feedback widget is not shown",
                "stackTrace": [
                  "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                  "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                  "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                  "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "959e6a6a-5253-4ab9-9473-036bad834cb2"
              },
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "When click Feedback button of Tutorials Widgets page",
              "type": "NOT_PERFORMED",
              "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "Then Feedback widget elements are shown",
              "type": "PENDING",
              "throwable": {
                "@class": "org.jbehave.core.failures.PendingStepFound",
                "detailMessage": "Then Feedback widget elements are shown",
                "stackTrace": [
                  "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                  "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                  "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                  "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "8c954979-b2e5-4be1-8224-432bd3309dce"
              },
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 11,
              "start": 1491243065168,
              "end": 1491243065179
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243065179,
              "end": 1491243065179
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Check that Feedback widget Elements are shown",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "And Feedback widget is not shown",
            "When click Feedback button of Tutorials Widgets page",
            "Then Feedback widget elements are shown"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "PENDING"
    },
    {
      "scenario": {
        "title": "(feedback widget) Feedback widget Close button",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "When click Feedback button of Tutorials Widgets page",
          "Then click close button of Feedback widget",
          "And Feedback widget is not shown"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243065240,
              "end": 1491243065240
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 1651,
              "start": 1491243065240,
              "end": 1491243066891
            },
            {
              "step": "When click Feedback button of Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
              "durationInMillis": 117,
              "start": 1491243066892,
              "end": 1491243067009
            },
            {
              "step": "Then click close button of Feedback widget",
              "type": "PENDING",
              "throwable": {
                "@class": "org.jbehave.core.failures.PendingStepFound",
                "detailMessage": "Then click close button of Feedback widget",
                "stackTrace": [
                  "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                  "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                  "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                  "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "d67c1649-667d-4d05-beaf-2c32b1abc41d"
              },
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "And Feedback widget is not shown",
              "type": "PENDING",
              "throwable": {
                "@class": "org.jbehave.core.failures.PendingStepFound",
                "detailMessage": "And Feedback widget is not shown",
                "stackTrace": [
                  "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                  "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                  "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                  "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "b229fbdf-434e-4a8e-8db9-77d1e5108644"
              },
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 9,
              "start": 1491243067011,
              "end": 1491243067020
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243067020,
              "end": 1491243067020
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Feedback widget Close button",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "When click Feedback button of Tutorials Widgets page",
            "Then click close button of Feedback widget",
            "And Feedback widget is not shown"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "PENDING"
    },
    {
      "scenario": {
        "title": "(feedback widget) Feedback widget error notifications for NAME field",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "And click Feedback button of Tutorials Widgets page",
          "When all fields except Name are populated",
          "And click send button of Feedback widget",
          "Then error notification is shown for Feedback widget"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243067081,
              "end": 1491243067081
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 2204,
              "start": 1491243067082,
              "end": 1491243069286
            },
            {
              "step": "And click Feedback button of Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
              "durationInMillis": 119,
              "start": 1491243069286,
              "end": 1491243069405
            },
            {
              "step": "When all fields except Name are populated",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When all fields except Name are populated",
              "durationInMillis": 826,
              "start": 1491243069406,
              "end": 1491243070232
            },
            {
              "step": "And click send button of Feedback widget",
              "type": "PENDING",
              "throwable": {
                "@class": "org.jbehave.core.failures.PendingStepFound",
                "detailMessage": "And click send button of Feedback widget",
                "stackTrace": [
                  "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                  "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                  "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                  "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "737e92ec-a302-4efa-9e8c-efbb9fbd1767"
              },
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "Then error notification is shown for Feedback widget",
              "type": "PENDING",
              "throwable": {
                "@class": "org.jbehave.core.failures.PendingStepFound",
                "detailMessage": "Then error notification is shown for Feedback widget",
                "stackTrace": [
                  "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                  "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                  "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                  "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "f4a178f5-0623-40c5-a4af-82430c286890"
              },
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 8,
              "start": 1491243070233,
              "end": 1491243070241
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491243070241,
              "end": 1491243070242
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Feedback widget error notifications for NAME field",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "And click Feedback button of Tutorials Widgets page",
            "When all fields except Name are populated",
            "And click send button of Feedback widget",
            "Then error notification is shown for Feedback widget"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "PENDING"
    },
    {
      "scenario": {
        "title": "(feedback widget) Feedback widget error notifications for Email field",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "And click Feedback button of Tutorials Widgets page",
          "When all fields except Email are populated",
          "And click send button of Feedback widget",
          "Then error notification is shown for Feedback widget"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491243070303,
              "end": 1491243070304
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 1500,
              "start": 1491243070304,
              "end": 1491243071804
            },
            {
              "step": "And click Feedback button of Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
              "durationInMillis": 132,
              "start": 1491243071805,
              "end": 1491243071937
            },
            {
              "step": "When all fields except Email are populated",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When all fields except Email are populated",
              "durationInMillis": 510,
              "start": 1491243071938,
              "end": 1491243072448
            },
            {
              "step": "And click send button of Feedback widget",
              "type": "PENDING",
              "throwable": {
                "@class": "org.jbehave.core.failures.PendingStepFound",
                "detailMessage": "And click send button of Feedback widget",
                "stackTrace": [
                  "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                  "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                  "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                  "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "7677c6d2-6c80-4130-ab93-bd86d6c70735"
              },
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "Then error notification is shown for Feedback widget",
              "type": "PENDING",
              "throwable": {
                "@class": "org.jbehave.core.failures.PendingStepFound",
                "detailMessage": "Then error notification is shown for Feedback widget",
                "stackTrace": [
                  "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                  "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                  "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                  "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "30275206-7f42-40c3-8839-dea6e9acbf6c"
              },
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 9,
              "start": 1491243072450,
              "end": 1491243072459
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243072459,
              "end": 1491243072459
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Feedback widget error notifications for Email field",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "And click Feedback button of Tutorials Widgets page",
            "When all fields except Email are populated",
            "And click send button of Feedback widget",
            "Then error notification is shown for Feedback widget"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "PENDING"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/map/) [3.7.1 Map widget : Check that required fields are not empty]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Map Widget page",
          "Then the required fields are not empty on the Map Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/MapWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491243072522,
              "end": 1491243072523
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Map Widget page",
              "durationInMillis": 4672,
              "start": 1491243072523,
              "end": 1491243077195
            },
            {
              "step": "Then the required fields are not empty on the Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the required fields are not empty on the Map Widget page",
              "durationInMillis": 129,
              "start": 1491243077196,
              "end": 1491243077325
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25,
              "start": 1491243077326,
              "end": 1491243077351
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243077351,
              "end": 1491243077351
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/map/) [3.7.1 Map widget : Check that required fields are not empty]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Map Widget page",
            "Then the required fields are not empty on the Map Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/map/) [3.7.2 Map widget : Embedded code functionality works properly]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Map Widget page",
          "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
          "And store all fields values on the Map Widget page",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored values on the Map Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/MapWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491243077415,
              "end": 1491243077416
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Map Widget page",
              "durationInMillis": 3947,
              "start": 1491243077416,
              "end": 1491243081363
            },
            {
              "step": "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change all possible fields on the Map Widget page:\n［|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |］",
              "durationInMillis": 7124,
              "start": 1491243081363,
              "end": 1491243088487
            },
            {
              "step": "And store all fields values on the Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store all fields values on the Map Widget page",
              "durationInMillis": 536,
              "start": 1491243088490,
              "end": 1491243089026
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 956,
              "start": 1491243089027,
              "end": 1491243089983
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 385,
              "start": 1491243089984,
              "end": 1491243090369
            },
            {
              "step": "And embedded html code contains stored values on the Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored values on the Map Widget page",
              "durationInMillis": 1317,
              "start": 1491243090370,
              "end": 1491243091687
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 28,
              "start": 1491243091688,
              "end": 1491243091716
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243091716,
              "end": 1491243091716
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/map/) [3.7.2 Map widget : Embedded code functionality works properly]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Map Widget page",
            "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
            "And store all fields values on the Map Widget page",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored values on the Map Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/map/) [3.7.3 Map widget : Check RESET button functionality]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Map Widget page",
          "And store values on Map Widget page: apiKey,keyword,zipCode",
          "And change values for on Map Widget page: apiKey,keyword,zipCode",
          "When click reset button",
          "Then values equals to stored values of fields on Map Widget page: apiKey,keyword,zipCode"
        ]
      },
      "storyPath": "stories/site/widgets/MapWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243091791,
              "end": 1491243091791
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Map Widget page",
              "durationInMillis": 6181,
              "start": 1491243091792,
              "end": 1491243097973
            },
            {
              "step": "And store values on Map Widget page: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values on Map Widget page: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 237,
              "start": 1491243097973,
              "end": 1491243098210
            },
            {
              "step": "And change values for on Map Widget page: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for on Map Widget page: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 2166,
              "start": 1491243098211,
              "end": 1491243100377
            },
            {
              "step": "When click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click reset button",
              "durationInMillis": 1713,
              "start": 1491243100378,
              "end": 1491243102091
            },
            {
              "step": "Then values equals to stored values of fields on Map Widget page: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then values equals to stored values of fields on Map Widget page: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 540,
              "start": 1491243102091,
              "end": 1491243102631
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1491243102632,
              "end": 1491243102656
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243102656,
              "end": 1491243102656
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/map/) [3.7.3 Map widget : Check RESET button functionality]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Map Widget page",
            "And store values on Map Widget page: apiKey,keyword,zipCode",
            "And change values for on Map Widget page: apiKey,keyword,zipCode",
            "When click reset button",
            "Then values equals to stored values of fields on Map Widget page: apiKey,keyword,zipCode"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/map/) [3.7.4 Map widget : Check RESET button functionality on embedded pop-up window]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Map Widget page",
          "And store values on Map Widget page: apiKey,keyword,zipCode",
          "And change values for on Map Widget page: apiKey,keyword,zipCode",
          "When click reset button",
          "And click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code on Map Widget contains stored values of: apiKey,keyword,zipCode"
        ]
      },
      "storyPath": "stories/site/widgets/MapWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491243102720,
              "end": 1491243102721
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Map Widget page",
              "durationInMillis": 2953,
              "start": 1491243102721,
              "end": 1491243105674
            },
            {
              "step": "And store values on Map Widget page: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values on Map Widget page: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 1510,
              "start": 1491243105675,
              "end": 1491243107185
            },
            {
              "step": "And change values for on Map Widget page: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for on Map Widget page: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 2547,
              "start": 1491243107186,
              "end": 1491243109733
            },
            {
              "step": "When click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click reset button",
              "durationInMillis": 1766,
              "start": 1491243109734,
              "end": 1491243111500
            },
            {
              "step": "And click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click on \"Get code\" button",
              "durationInMillis": 925,
              "start": 1491243111501,
              "end": 1491243112426
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 347,
              "start": 1491243112427,
              "end": 1491243112774
            },
            {
              "step": "And embedded html code on Map Widget contains stored values of: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code on Map Widget contains stored values of: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 347,
              "start": 1491243112775,
              "end": 1491243113122
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 26,
              "start": 1491243113123,
              "end": 1491243113149
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491243113149,
              "end": 1491243113150
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/map/) [3.7.4 Map widget : Check RESET button functionality on embedded pop-up window]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Map Widget page",
            "And store values on Map Widget page: apiKey,keyword,zipCode",
            "And change values for on Map Widget page: apiKey,keyword,zipCode",
            "When click reset button",
            "And click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code on Map Widget contains stored values of: apiKey,keyword,zipCode"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/map/) [3.7.7 Map widget : Check links]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Map Widget page",
          "When I click on the 'Get your own' link to get api key",
          "Then The page is opened with url https://developer-acct.ticketmaster.com"
        ]
      },
      "storyPath": "stories/site/widgets/MapWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491243113213,
              "end": 1491243113214
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Map Widget page",
              "durationInMillis": 4103,
              "start": 1491243113214,
              "end": 1491243117317
            },
            {
              "step": "When I click on the 'Get your own' link to get api key",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When I click on the 'Get your own' link to get api key",
              "durationInMillis": 238,
              "start": 1491243117318,
              "end": 1491243117556
            },
            {
              "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
              "durationInMillis": 701,
              "start": 1491243117557,
              "end": 1491243118258
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 20,
              "start": 1491243118259,
              "end": 1491243118279
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243118279,
              "end": 1491243118279
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/map/) [3.7.7 Map widget : Check links]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Map Widget page",
            "When I click on the 'Get your own' link to get api key",
            "Then The page is opened with url https://developer-acct.ticketmaster.com"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/map/) Event message - Check event message for invalid API Key",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Map Widget page",
          "And enter custom ApiKey invalidApiKey123",
          "Then the event message is shown \"No results were found\""
        ]
      },
      "storyPath": "stories/site/widgets/MapWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1491243118342,
              "end": 1491243118343
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Map Widget page",
              "durationInMillis": 3712,
              "start": 1491243118343,
              "end": 1491243122055
            },
            {
              "step": "And enter custom ApiKey invalidApiKey123",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And enter custom ApiKey ｟invalidApiKey123｠",
              "durationInMillis": 259,
              "start": 1491243122055,
              "end": 1491243122314
            },
            {
              "step": "Then the event message is shown \"No results were found\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"No results were found\"",
              "durationInMillis": 844,
              "start": 1491243122315,
              "end": 1491243123159
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 18,
              "start": 1491243123160,
              "end": 1491243123178
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243123178,
              "end": 1491243123178
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/map/) Event message - Check event message for invalid API Key",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Map Widget page",
            "And enter custom ApiKey invalidApiKey123",
            "Then the event message is shown \"No results were found\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Getting Started page",
          "Then Summary widget is shown for Getting Started page"
        ]
      },
      "storyPath": "stories/site/widgets/SummaryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243123245,
              "end": 1491243123245
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Getting Started page",
              "durationInMillis": 4914,
              "start": 1491243123246,
              "end": 1491243128160
            },
            {
              "step": "Then Summary widget is shown for Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then Summary widget is shown for Getting Started page",
              "durationInMillis": 78,
              "start": 1491243128160,
              "end": 1491243128238
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 20,
              "start": 1491243128239,
              "end": 1491243128259
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243128259,
              "end": 1491243128259
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Getting Started page",
            "Then Summary widget is shown for Getting Started page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "Then Summary widget is shown for Home page"
        ]
      },
      "storyPath": "stories/site/widgets/SummaryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243128324,
              "end": 1491243128324
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 3314,
              "start": 1491243128324,
              "end": 1491243131638
            },
            {
              "step": "Then Summary widget is shown for Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then Summary widget is shown for Home page",
              "durationInMillis": 79,
              "start": 1491243131639,
              "end": 1491243131718
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 122,
              "start": 1491243131718,
              "end": 1491243131840
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243131840,
              "end": 1491243131840
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "Then Summary widget is shown for Home page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open API Explorer page",
          "Then Summary widget is shown for API Explorer page"
        ]
      },
      "storyPath": "stories/site/widgets/SummaryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243131904,
              "end": 1491243131904
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open API Explorer page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open API Explorer page",
              "durationInMillis": 3708,
              "start": 1491243131905,
              "end": 1491243135613
            },
            {
              "step": "Then Summary widget is shown for API Explorer page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then Summary widget is shown for API Explorer page",
              "durationInMillis": 124,
              "start": 1491243135614,
              "end": 1491243135738
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22,
              "start": 1491243135739,
              "end": 1491243135761
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1491243135761,
              "end": 1491243135761
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open API Explorer page",
            "Then Summary widget is shown for API Explorer page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    }
  ]
}}